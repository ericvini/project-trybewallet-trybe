{"ast":null,"code":"// @ts-nocheck\n'use strict';\n\nconst _ = require('lodash');\n\nconst atRuleParamIndex = require('../../utils/atRuleParamIndex');\n\nconst isRangeContextMediaFeature = require('../../utils/isRangeContextMediaFeature');\n\nconst matchesStringOrRegExp = require('../../utils/matchesStringOrRegExp');\n\nconst mediaParser = require('postcss-media-query-parser').default;\n\nconst rangeContextNodeParser = require('../rangeContextNodeParser');\n\nconst report = require('../../utils/report');\n\nconst ruleMessages = require('../../utils/ruleMessages');\n\nconst validateOptions = require('../../utils/validateOptions');\n\nconst vendor = require('../../utils/vendor');\n\nconst ruleName = 'media-feature-name-value-whitelist';\nconst messages = ruleMessages(ruleName, {\n  rejected: (name, value) => `Unexpected value \"${value}\" for name \"${name}\"`\n});\n\nfunction rule(list) {\n  return (root, result) => {\n    const validOptions = validateOptions(result, ruleName, {\n      actual: list,\n      possible: [_.isObject]\n    });\n\n    if (!validOptions) {\n      return;\n    }\n\n    result.warn(`'${ruleName}' has been deprecated. Instead use 'media-feature-name-value-allowed-list'.`, {\n      stylelintType: 'deprecation',\n      stylelintReference: `https://github.com/stylelint/stylelint/blob/13.7.0/lib/rules/${ruleName}/README.md`\n    });\n    root.walkAtRules(/^media$/i, atRule => {\n      mediaParser(atRule.params).walk(/^media-feature-expression$/i, node => {\n        const mediaFeatureRangeContext = isRangeContextMediaFeature(node.parent.value); // Ignore boolean\n\n        if (!node.value.includes(':') && !mediaFeatureRangeContext) {\n          return;\n        }\n\n        const mediaFeatureNode = _.find(node.nodes, {\n          type: 'media-feature'\n        });\n\n        let mediaFeatureName;\n        let values = [];\n\n        if (mediaFeatureRangeContext) {\n          const parsedRangeContext = rangeContextNodeParser(mediaFeatureNode);\n          mediaFeatureName = parsedRangeContext.name.value;\n          values = parsedRangeContext.values;\n        } else {\n          mediaFeatureName = mediaFeatureNode.value;\n          values.push(_.find(node.nodes, {\n            type: 'value'\n          }));\n        }\n\n        for (let i = 0; i < values.length; i++) {\n          const valueNode = values[i];\n          const value = valueNode.value;\n          const unprefixedMediaFeatureName = vendor.unprefixed(mediaFeatureName);\n\n          const allowedValues = _.find(list, (v, featureName) => matchesStringOrRegExp(unprefixedMediaFeatureName, featureName));\n\n          if (allowedValues === undefined) {\n            return;\n          }\n\n          if (matchesStringOrRegExp(value, allowedValues)) {\n            return;\n          }\n\n          report({\n            index: atRuleParamIndex(atRule) + valueNode.sourceIndex,\n            message: messages.rejected(mediaFeatureName, value),\n            node: atRule,\n            ruleName,\n            result\n          });\n        }\n      });\n    });\n  };\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = {\n  deprecated: true\n};\nmodule.exports = rule;","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/lib/rules/media-feature-name-value-whitelist/index.js"],"names":["_","require","atRuleParamIndex","isRangeContextMediaFeature","matchesStringOrRegExp","mediaParser","default","rangeContextNodeParser","report","ruleMessages","validateOptions","vendor","ruleName","messages","rejected","name","value","rule","list","root","result","validOptions","actual","possible","isObject","warn","stylelintType","stylelintReference","walkAtRules","atRule","params","walk","node","mediaFeatureRangeContext","parent","includes","mediaFeatureNode","find","nodes","type","mediaFeatureName","values","parsedRangeContext","push","i","length","valueNode","unprefixedMediaFeatureName","unprefixed","allowedValues","v","featureName","undefined","index","sourceIndex","message","meta","deprecated","module","exports"],"mappings":"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","sourcesContent":["// @ts-nocheck\n\n'use strict';\n\nconst _ = require('lodash');\nconst atRuleParamIndex = require('../../utils/atRuleParamIndex');\nconst isRangeContextMediaFeature = require('../../utils/isRangeContextMediaFeature');\nconst matchesStringOrRegExp = require('../../utils/matchesStringOrRegExp');\nconst mediaParser = require('postcss-media-query-parser').default;\nconst rangeContextNodeParser = require('../rangeContextNodeParser');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst vendor = require('../../utils/vendor');\n\nconst ruleName = 'media-feature-name-value-whitelist';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (name, value) => `Unexpected value \"${value}\" for name \"${name}\"`,\n});\n\nfunction rule(list) {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: list,\n\t\t\tpossible: [_.isObject],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tresult.warn(\n\t\t\t`'${ruleName}' has been deprecated. Instead use 'media-feature-name-value-allowed-list'.`,\n\t\t\t{\n\t\t\t\tstylelintType: 'deprecation',\n\t\t\t\tstylelintReference: `https://github.com/stylelint/stylelint/blob/13.7.0/lib/rules/${ruleName}/README.md`,\n\t\t\t},\n\t\t);\n\n\t\troot.walkAtRules(/^media$/i, (atRule) => {\n\t\t\tmediaParser(atRule.params).walk(/^media-feature-expression$/i, (node) => {\n\t\t\t\tconst mediaFeatureRangeContext = isRangeContextMediaFeature(node.parent.value);\n\n\t\t\t\t// Ignore boolean\n\t\t\t\tif (!node.value.includes(':') && !mediaFeatureRangeContext) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst mediaFeatureNode = _.find(node.nodes, { type: 'media-feature' });\n\n\t\t\t\tlet mediaFeatureName;\n\t\t\t\tlet values = [];\n\n\t\t\t\tif (mediaFeatureRangeContext) {\n\t\t\t\t\tconst parsedRangeContext = rangeContextNodeParser(mediaFeatureNode);\n\n\t\t\t\t\tmediaFeatureName = parsedRangeContext.name.value;\n\t\t\t\t\tvalues = parsedRangeContext.values;\n\t\t\t\t} else {\n\t\t\t\t\tmediaFeatureName = mediaFeatureNode.value;\n\t\t\t\t\tvalues.push(_.find(node.nodes, { type: 'value' }));\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0; i < values.length; i++) {\n\t\t\t\t\tconst valueNode = values[i];\n\t\t\t\t\tconst value = valueNode.value;\n\t\t\t\t\tconst unprefixedMediaFeatureName = vendor.unprefixed(mediaFeatureName);\n\n\t\t\t\t\tconst allowedValues = _.find(list, (v, featureName) =>\n\t\t\t\t\t\tmatchesStringOrRegExp(unprefixedMediaFeatureName, featureName),\n\t\t\t\t\t);\n\n\t\t\t\t\tif (allowedValues === undefined) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (matchesStringOrRegExp(value, allowedValues)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tindex: atRuleParamIndex(atRule) + valueNode.sourceIndex,\n\t\t\t\t\t\tmessage: messages.rejected(mediaFeatureName, value),\n\t\t\t\t\t\tnode: atRule,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = { deprecated: true };\n\nmodule.exports = rule;\n"]},"metadata":{},"sourceType":"script"}
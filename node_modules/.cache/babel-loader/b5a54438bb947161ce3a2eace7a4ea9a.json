{"ast":null,"code":"// @ts-nocheck\n'use strict';\n\nconst report = require('../../utils/report');\n\nconst ruleMessages = require('../../utils/ruleMessages');\n\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'no-empty-first-line';\nconst noEmptyFirstLineTest = /^\\s*[\\r\\n]/;\nconst messages = ruleMessages(ruleName, {\n  rejected: 'Unexpected empty line'\n});\n\nfunction rule(actual, _, context) {\n  return (root, result) => {\n    const validOptions = validateOptions(result, ruleName, {\n      actual\n    });\n\n    if (!validOptions || root.source.inline || root.source.lang === 'object-literal') {\n      return;\n    }\n\n    const rootString = context.fix ? root.toString() : root.source.input.css;\n\n    if (!rootString.trim()) {\n      return;\n    }\n\n    if (noEmptyFirstLineTest.test(rootString)) {\n      if (context.fix) {\n        root.nodes[0].raws.before = root.first.raws.before.trimStart();\n        return;\n      }\n\n      report({\n        message: messages.rejected,\n        node: root,\n        result,\n        ruleName\n      });\n    }\n  };\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nmodule.exports = rule;","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/lib/rules/no-empty-first-line/index.js"],"names":["report","require","ruleMessages","validateOptions","ruleName","noEmptyFirstLineTest","messages","rejected","rule","actual","_","context","root","result","validOptions","source","inline","lang","rootString","fix","toString","input","css","trim","test","nodes","raws","before","first","trimStart","message","node","module","exports"],"mappings":"AAAA;AAEA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,oBAAD,CAAtB;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,0BAAD,CAA5B;;AACA,MAAME,eAAe,GAAGF,OAAO,CAAC,6BAAD,CAA/B;;AAEA,MAAMG,QAAQ,GAAG,qBAAjB;AACA,MAAMC,oBAAoB,GAAG,YAA7B;AAEA,MAAMC,QAAQ,GAAGJ,YAAY,CAACE,QAAD,EAAW;AACvCG,EAAAA,QAAQ,EAAE;AAD6B,CAAX,CAA7B;;AAIA,SAASC,IAAT,CAAcC,MAAd,EAAsBC,CAAtB,EAAyBC,OAAzB,EAAkC;AACjC,SAAO,CAACC,IAAD,EAAOC,MAAP,KAAkB;AACxB,UAAMC,YAAY,GAAGX,eAAe,CAACU,MAAD,EAAST,QAAT,EAAmB;AAAEK,MAAAA;AAAF,KAAnB,CAApC;;AAEA,QAAI,CAACK,YAAD,IAAiBF,IAAI,CAACG,MAAL,CAAYC,MAA7B,IAAuCJ,IAAI,CAACG,MAAL,CAAYE,IAAZ,KAAqB,gBAAhE,EAAkF;AACjF;AACA;;AAED,UAAMC,UAAU,GAAGP,OAAO,CAACQ,GAAR,GAAcP,IAAI,CAACQ,QAAL,EAAd,GAAgCR,IAAI,CAACG,MAAL,CAAYM,KAAZ,CAAkBC,GAArE;;AAEA,QAAI,CAACJ,UAAU,CAACK,IAAX,EAAL,EAAwB;AACvB;AACA;;AAED,QAAIlB,oBAAoB,CAACmB,IAArB,CAA0BN,UAA1B,CAAJ,EAA2C;AAC1C,UAAIP,OAAO,CAACQ,GAAZ,EAAiB;AAChBP,QAAAA,IAAI,CAACa,KAAL,CAAW,CAAX,EAAcC,IAAd,CAAmBC,MAAnB,GAA4Bf,IAAI,CAACgB,KAAL,CAAWF,IAAX,CAAgBC,MAAhB,CAAuBE,SAAvB,EAA5B;AAEA;AACA;;AAED7B,MAAAA,MAAM,CAAC;AACN8B,QAAAA,OAAO,EAAExB,QAAQ,CAACC,QADZ;AAENwB,QAAAA,IAAI,EAAEnB,IAFA;AAGNC,QAAAA,MAHM;AAINT,QAAAA;AAJM,OAAD,CAAN;AAMA;AACD,GA3BD;AA4BA;;AAEDI,IAAI,CAACJ,QAAL,GAAgBA,QAAhB;AACAI,IAAI,CAACF,QAAL,GAAgBA,QAAhB;AACA0B,MAAM,CAACC,OAAP,GAAiBzB,IAAjB","sourcesContent":["// @ts-nocheck\n\n'use strict';\n\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'no-empty-first-line';\nconst noEmptyFirstLineTest = /^\\s*[\\r\\n]/;\n\nconst messages = ruleMessages(ruleName, {\n\trejected: 'Unexpected empty line',\n});\n\nfunction rule(actual, _, context) {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, { actual });\n\n\t\tif (!validOptions || root.source.inline || root.source.lang === 'object-literal') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst rootString = context.fix ? root.toString() : root.source.input.css;\n\n\t\tif (!rootString.trim()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (noEmptyFirstLineTest.test(rootString)) {\n\t\t\tif (context.fix) {\n\t\t\t\troot.nodes[0].raws.before = root.first.raws.before.trimStart();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treport({\n\t\t\t\tmessage: messages.rejected,\n\t\t\t\tnode: root,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t});\n\t\t}\n\t};\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nmodule.exports = rule;\n"]},"metadata":{},"sourceType":"script"}
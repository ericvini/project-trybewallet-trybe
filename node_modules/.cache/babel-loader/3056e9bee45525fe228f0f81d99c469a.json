{"ast":null,"code":"'use strict';\n\nconst hasInterpolation = require('../utils/hasInterpolation');\n/**\n * Check whether a selector is standard\n *\n * @param {string} selector\n * @returns {boolean}\n */\n\n\nmodule.exports = function (selector) {\n  // SCSS or Less interpolation\n  if (hasInterpolation(selector)) {\n    return false;\n  } // SCSS placeholder selectors\n\n\n  if (selector.startsWith('%')) {\n    return false;\n  } // Less :extend()\n\n\n  if (/:extend(\\(.*?\\))?/.test(selector)) {\n    return false;\n  } // Less mixin with resolved nested selectors (e.g. .foo().bar or .foo(@a, @b)[bar])\n\n\n  if (/\\.[\\w-]+\\(.*\\).+/i.test(selector)) {\n    return false;\n  } // ERB template tags\n\n\n  if (selector.includes('<%') || selector.includes('%>')) {\n    return false;\n  }\n\n  return true;\n};","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/lib/utils/isStandardSyntaxSelector.js"],"names":["hasInterpolation","require","module","exports","selector","startsWith","test","includes"],"mappings":"AAAA;;AAEA,MAAMA,gBAAgB,GAAGC,OAAO,CAAC,2BAAD,CAAhC;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,QAAV,EAAoB;AACpC;AACA,MAAIJ,gBAAgB,CAACI,QAAD,CAApB,EAAgC;AAC/B,WAAO,KAAP;AACA,GAJmC,CAMpC;;;AACA,MAAIA,QAAQ,CAACC,UAAT,CAAoB,GAApB,CAAJ,EAA8B;AAC7B,WAAO,KAAP;AACA,GATmC,CAWpC;;;AACA,MAAI,oBAAoBC,IAApB,CAAyBF,QAAzB,CAAJ,EAAwC;AACvC,WAAO,KAAP;AACA,GAdmC,CAgBpC;;;AACA,MAAI,oBAAoBE,IAApB,CAAyBF,QAAzB,CAAJ,EAAwC;AACvC,WAAO,KAAP;AACA,GAnBmC,CAqBpC;;;AACA,MAAIA,QAAQ,CAACG,QAAT,CAAkB,IAAlB,KAA2BH,QAAQ,CAACG,QAAT,CAAkB,IAAlB,CAA/B,EAAwD;AACvD,WAAO,KAAP;AACA;;AAED,SAAO,IAAP;AACA,CA3BD","sourcesContent":["'use strict';\n\nconst hasInterpolation = require('../utils/hasInterpolation');\n\n/**\n * Check whether a selector is standard\n *\n * @param {string} selector\n * @returns {boolean}\n */\nmodule.exports = function (selector) {\n\t// SCSS or Less interpolation\n\tif (hasInterpolation(selector)) {\n\t\treturn false;\n\t}\n\n\t// SCSS placeholder selectors\n\tif (selector.startsWith('%')) {\n\t\treturn false;\n\t}\n\n\t// Less :extend()\n\tif (/:extend(\\(.*?\\))?/.test(selector)) {\n\t\treturn false;\n\t}\n\n\t// Less mixin with resolved nested selectors (e.g. .foo().bar or .foo(@a, @b)[bar])\n\tif (/\\.[\\w-]+\\(.*\\).+/i.test(selector)) {\n\t\treturn false;\n\t}\n\n\t// ERB template tags\n\tif (selector.includes('<%') || selector.includes('%>')) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n"]},"metadata":{},"sourceType":"script"}
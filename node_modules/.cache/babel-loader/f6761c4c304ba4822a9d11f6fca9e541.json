{"ast":null,"code":"'use strict';\n\nvar Path = require('path');\n\nvar slice = Array.prototype.slice;\n\nfunction join()\n/* globs */\n{\n  var args;\n  args = slice.call(arguments, 0);\n  return args.reduce(function (result, globs) {\n    return _apply(result, function (path) {\n      return _apply(globs, function (glob) {\n        return _join(path, glob);\n      });\n    });\n  }, '');\n}\n\nfunction _apply(values, fn) {\n  if (Array.isArray(values)) {\n    return values.reduce(function (result, value) {\n      return result.concat(fn(value));\n    }, []);\n  }\n\n  return fn(values);\n}\n\nfunction _join(path, glob) {\n  var negative, positive;\n\n  if (glob[0] === '!') {\n    positive = glob.substr(1);\n\n    if (path[0] === '!') {\n      negative = '';\n    } else {\n      negative = '!';\n    }\n\n    return negative + Path.join(path, positive);\n  }\n\n  return Path.join(path, glob);\n}\n\nmodule.exports = join;","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/globjoin/index.js"],"names":["Path","require","slice","Array","prototype","join","args","call","arguments","reduce","result","globs","_apply","path","glob","_join","values","fn","isArray","value","concat","negative","positive","substr","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,KAAK,GAAGC,KAAK,CAACC,SAAN,CAAgBF,KAA5B;;AAEA,SAASG,IAAT;AAAc;AAAa;AAC1B,MAAIC,IAAJ;AAEAA,EAAAA,IAAI,GAAGJ,KAAK,CAACK,IAAN,CAAWC,SAAX,EAAsB,CAAtB,CAAP;AACA,SAAOF,IAAI,CAACG,MAAL,CAAY,UAAUC,MAAV,EAAkBC,KAAlB,EAAyB;AAC3C,WAAOC,MAAM,CAACF,MAAD,EAAS,UAAUG,IAAV,EAAgB;AACrC,aAAOD,MAAM,CAACD,KAAD,EAAQ,UAAUG,IAAV,EAAgB;AACpC,eAAOC,KAAK,CAACF,IAAD,EAAOC,IAAP,CAAZ;AACA,OAFY,CAAb;AAGA,KAJY,CAAb;AAKA,GANM,EAMJ,EANI,CAAP;AAOA;;AAED,SAASF,MAAT,CAAgBI,MAAhB,EAAwBC,EAAxB,EAA4B;AAC3B,MAAId,KAAK,CAACe,OAAN,CAAcF,MAAd,CAAJ,EAA2B;AAC1B,WAAOA,MAAM,CAACP,MAAP,CAAc,UAAUC,MAAV,EAAkBS,KAAlB,EAAyB;AAC7C,aAAOT,MAAM,CAACU,MAAP,CAAcH,EAAE,CAACE,KAAD,CAAhB,CAAP;AACA,KAFM,EAEJ,EAFI,CAAP;AAGA;;AACD,SAAOF,EAAE,CAACD,MAAD,CAAT;AACA;;AAED,SAASD,KAAT,CAAeF,IAAf,EAAqBC,IAArB,EAA2B;AAC1B,MAAIO,QAAJ,EAAcC,QAAd;;AAEA,MAAIR,IAAI,CAAC,CAAD,CAAJ,KAAY,GAAhB,EAAqB;AACpBQ,IAAAA,QAAQ,GAAGR,IAAI,CAACS,MAAL,CAAY,CAAZ,CAAX;;AACA,QAAIV,IAAI,CAAC,CAAD,CAAJ,KAAY,GAAhB,EAAqB;AACpBQ,MAAAA,QAAQ,GAAG,EAAX;AACA,KAFD,MAEO;AACNA,MAAAA,QAAQ,GAAG,GAAX;AACA;;AACD,WAAOA,QAAQ,GAAGrB,IAAI,CAACK,IAAL,CAAUQ,IAAV,EAAgBS,QAAhB,CAAlB;AACA;;AACD,SAAOtB,IAAI,CAACK,IAAL,CAAUQ,IAAV,EAAgBC,IAAhB,CAAP;AACA;;AAEDU,MAAM,CAACC,OAAP,GAAiBpB,IAAjB","sourcesContent":["'use strict';\n\nvar Path = require('path');\nvar slice = Array.prototype.slice;\n\nfunction join(/* globs */) {\n\tvar args;\n\n\targs = slice.call(arguments, 0);\n\treturn args.reduce(function (result, globs) {\n\t\treturn _apply(result, function (path) {\n\t\t\treturn _apply(globs, function (glob) {\n\t\t\t\treturn _join(path, glob);\n\t\t\t});\n\t\t});\n\t}, '');\n}\n\nfunction _apply(values, fn) {\n\tif (Array.isArray(values)) {\n\t\treturn values.reduce(function (result, value) {\n\t\t\treturn result.concat(fn(value));\n\t\t}, []);\n\t}\n\treturn fn(values);\n}\n\nfunction _join(path, glob) {\n\tvar negative, positive;\n\n\tif (glob[0] === '!') {\n\t\tpositive = glob.substr(1);\n\t\tif (path[0] === '!') {\n\t\t\tnegative = '';\n\t\t} else {\n\t\t\tnegative = '!';\n\t\t}\n\t\treturn negative + Path.join(path, positive);\n\t}\n\treturn Path.join(path, glob);\n}\n\nmodule.exports = join;\n"]},"metadata":{},"sourceType":"script"}
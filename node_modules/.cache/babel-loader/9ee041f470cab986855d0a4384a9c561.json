{"ast":null,"code":"'use strict';\n\nconst keywordSets = require('../reference/keywordSets');\n\nconst valueParser = require('postcss-value-parser');\n/**\n * Check if a word is a font-size value.\n *\n * @param {string} word\n * @returns {boolean}\n */\n\n\nmodule.exports = function (word) {\n  if (!word) {\n    return false;\n  }\n\n  if (keywordSets.fontSizeKeywords.has(word)) {\n    return true;\n  }\n\n  const numberUnit = valueParser.unit(word);\n\n  if (!numberUnit) {\n    return false;\n  }\n\n  const unit = numberUnit.unit;\n\n  if (unit === '%') {\n    return true;\n  }\n\n  if (keywordSets.lengthUnits.has(unit.toLowerCase())) {\n    return true;\n  }\n\n  return false;\n};","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/lib/utils/isValidFontSize.js"],"names":["keywordSets","require","valueParser","module","exports","word","fontSizeKeywords","has","numberUnit","unit","lengthUnits","toLowerCase"],"mappings":"AAAA;;AAEA,MAAMA,WAAW,GAAGC,OAAO,CAAC,0BAAD,CAA3B;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,sBAAD,CAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACAE,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAChC,MAAI,CAACA,IAAL,EAAW;AACV,WAAO,KAAP;AACA;;AAED,MAAIL,WAAW,CAACM,gBAAZ,CAA6BC,GAA7B,CAAiCF,IAAjC,CAAJ,EAA4C;AAC3C,WAAO,IAAP;AACA;;AAED,QAAMG,UAAU,GAAGN,WAAW,CAACO,IAAZ,CAAiBJ,IAAjB,CAAnB;;AAEA,MAAI,CAACG,UAAL,EAAiB;AAChB,WAAO,KAAP;AACA;;AAED,QAAMC,IAAI,GAAGD,UAAU,CAACC,IAAxB;;AAEA,MAAIA,IAAI,KAAK,GAAb,EAAkB;AACjB,WAAO,IAAP;AACA;;AAED,MAAIT,WAAW,CAACU,WAAZ,CAAwBH,GAAxB,CAA4BE,IAAI,CAACE,WAAL,EAA5B,CAAJ,EAAqD;AACpD,WAAO,IAAP;AACA;;AAED,SAAO,KAAP;AACA,CA1BD","sourcesContent":["'use strict';\n\nconst keywordSets = require('../reference/keywordSets');\nconst valueParser = require('postcss-value-parser');\n\n/**\n * Check if a word is a font-size value.\n *\n * @param {string} word\n * @returns {boolean}\n */\nmodule.exports = function (word) {\n\tif (!word) {\n\t\treturn false;\n\t}\n\n\tif (keywordSets.fontSizeKeywords.has(word)) {\n\t\treturn true;\n\t}\n\n\tconst numberUnit = valueParser.unit(word);\n\n\tif (!numberUnit) {\n\t\treturn false;\n\t}\n\n\tconst unit = numberUnit.unit;\n\n\tif (unit === '%') {\n\t\treturn true;\n\t}\n\n\tif (keywordSets.lengthUnits.has(unit.toLowerCase())) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n"]},"metadata":{},"sourceType":"script"}
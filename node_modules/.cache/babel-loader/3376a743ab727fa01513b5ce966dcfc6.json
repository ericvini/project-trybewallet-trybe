{"ast":null,"code":"// @ts-nocheck\n'use strict';\n\nconst blurFunctionArguments = require('../../utils/blurFunctionArguments');\n\nconst report = require('../../utils/report');\n\nconst ruleMessages = require('../../utils/ruleMessages');\n\nconst styleSearch = require('style-search');\n\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'color-hex-length';\nconst messages = ruleMessages(ruleName, {\n  expected: (actual, expected) => `Expected \"${actual}\" to be \"${expected}\"`\n});\n\nfunction rule(expectation, _, context) {\n  return (root, result) => {\n    const validOptions = validateOptions(result, ruleName, {\n      actual: expectation,\n      possible: ['short', 'long']\n    });\n\n    if (!validOptions) {\n      return;\n    }\n\n    root.walkDecls(decl => {\n      const declString = blurFunctionArguments(decl.toString(), 'url');\n      const fixPositions = [];\n      styleSearch({\n        source: declString,\n        target: '#'\n      }, match => {\n        const hexMatch = /^#[0-9A-Za-z]+/.exec(declString.substr(match.startIndex));\n\n        if (!hexMatch) {\n          return;\n        }\n\n        const hexValue = hexMatch[0];\n\n        if (expectation === 'long' && hexValue.length !== 4 && hexValue.length !== 5) {\n          return;\n        }\n\n        if (expectation === 'short' && (hexValue.length < 6 || !canShrink(hexValue))) {\n          return;\n        }\n\n        const variant = expectation === 'long' ? longer : shorter;\n        const expectedHex = variant(hexValue);\n\n        if (context.fix) {\n          fixPositions.unshift({\n            expectedHex,\n            currentHex: hexValue,\n            startIndex: match.startIndex\n          });\n          return;\n        }\n\n        report({\n          message: messages.expected(hexValue, expectedHex),\n          node: decl,\n          index: match.startIndex,\n          result,\n          ruleName\n        });\n      });\n\n      if (fixPositions.length) {\n        const declProp = decl.prop;\n        const declBetween = decl.raws.between;\n        fixPositions.forEach(fixPosition => {\n          // 1 — it's a # length\n          decl.value = replaceHex(decl.value, fixPosition.currentHex, fixPosition.expectedHex, fixPosition.startIndex - declProp.length - declBetween.length - 1);\n        });\n      }\n    });\n  };\n}\n\nfunction canShrink(hex) {\n  hex = hex.toLowerCase();\n  return hex[1] === hex[2] && hex[3] === hex[4] && hex[5] === hex[6] && (hex.length === 7 || hex.length === 9 && hex[7] === hex[8]);\n}\n\nfunction shorter(hex) {\n  let hexVariant = '#';\n\n  for (let i = 1; i < hex.length; i += 2) {\n    hexVariant += hex[i];\n  }\n\n  return hexVariant;\n}\n\nfunction longer(hex) {\n  let hexVariant = '#';\n\n  for (let i = 1; i < hex.length; i++) {\n    hexVariant += hex[i] + hex[i];\n  }\n\n  return hexVariant;\n}\n\nfunction replaceHex(input, searchString, replaceString, startIndex) {\n  const offset = startIndex + 1;\n  const stringStart = input.slice(0, offset);\n  const stringEnd = input.slice(offset + searchString.length);\n  return stringStart + replaceString + stringEnd;\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nmodule.exports = rule;","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/lib/rules/color-hex-length/index.js"],"names":["blurFunctionArguments","require","report","ruleMessages","styleSearch","validateOptions","ruleName","messages","expected","actual","rule","expectation","_","context","root","result","validOptions","possible","walkDecls","decl","declString","toString","fixPositions","source","target","match","hexMatch","exec","substr","startIndex","hexValue","length","canShrink","variant","longer","shorter","expectedHex","fix","unshift","currentHex","message","node","index","declProp","prop","declBetween","raws","between","forEach","fixPosition","value","replaceHex","hex","toLowerCase","hexVariant","i","input","searchString","replaceString","offset","stringStart","slice","stringEnd","module","exports"],"mappings":"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","sourcesContent":["// @ts-nocheck\n\n'use strict';\n\nconst blurFunctionArguments = require('../../utils/blurFunctionArguments');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst styleSearch = require('style-search');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'color-hex-length';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (actual, expected) => `Expected \"${actual}\" to be \"${expected}\"`,\n});\n\nfunction rule(expectation, _, context) {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: expectation,\n\t\t\tpossible: ['short', 'long'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\tconst declString = blurFunctionArguments(decl.toString(), 'url');\n\t\t\tconst fixPositions = [];\n\n\t\t\tstyleSearch({ source: declString, target: '#' }, (match) => {\n\t\t\t\tconst hexMatch = /^#[0-9A-Za-z]+/.exec(declString.substr(match.startIndex));\n\n\t\t\t\tif (!hexMatch) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst hexValue = hexMatch[0];\n\n\t\t\t\tif (expectation === 'long' && hexValue.length !== 4 && hexValue.length !== 5) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (expectation === 'short' && (hexValue.length < 6 || !canShrink(hexValue))) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst variant = expectation === 'long' ? longer : shorter;\n\t\t\t\tconst expectedHex = variant(hexValue);\n\n\t\t\t\tif (context.fix) {\n\t\t\t\t\tfixPositions.unshift({\n\t\t\t\t\t\texpectedHex,\n\t\t\t\t\t\tcurrentHex: hexValue,\n\t\t\t\t\t\tstartIndex: match.startIndex,\n\t\t\t\t\t});\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.expected(hexValue, expectedHex),\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tindex: match.startIndex,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tif (fixPositions.length) {\n\t\t\t\tconst declProp = decl.prop;\n\t\t\t\tconst declBetween = decl.raws.between;\n\n\t\t\t\tfixPositions.forEach((fixPosition) => {\n\t\t\t\t\t// 1 — it's a # length\n\t\t\t\t\tdecl.value = replaceHex(\n\t\t\t\t\t\tdecl.value,\n\t\t\t\t\t\tfixPosition.currentHex,\n\t\t\t\t\t\tfixPosition.expectedHex,\n\t\t\t\t\t\tfixPosition.startIndex - declProp.length - declBetween.length - 1,\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n}\n\nfunction canShrink(hex) {\n\thex = hex.toLowerCase();\n\n\treturn (\n\t\thex[1] === hex[2] &&\n\t\thex[3] === hex[4] &&\n\t\thex[5] === hex[6] &&\n\t\t(hex.length === 7 || (hex.length === 9 && hex[7] === hex[8]))\n\t);\n}\n\nfunction shorter(hex) {\n\tlet hexVariant = '#';\n\n\tfor (let i = 1; i < hex.length; i += 2) {\n\t\thexVariant += hex[i];\n\t}\n\n\treturn hexVariant;\n}\n\nfunction longer(hex) {\n\tlet hexVariant = '#';\n\n\tfor (let i = 1; i < hex.length; i++) {\n\t\thexVariant += hex[i] + hex[i];\n\t}\n\n\treturn hexVariant;\n}\n\nfunction replaceHex(input, searchString, replaceString, startIndex) {\n\tconst offset = startIndex + 1;\n\tconst stringStart = input.slice(0, offset);\n\tconst stringEnd = input.slice(offset + searchString.length);\n\n\treturn stringStart + replaceString + stringEnd;\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nmodule.exports = rule;\n"]},"metadata":{},"sourceType":"script"}
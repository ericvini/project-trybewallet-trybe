{"ast":null,"code":"// @ts-nocheck\n'use strict';\n\nmodule.exports = function (params) {\n  const {\n    div,\n    index,\n    nodes,\n    expectation,\n    position,\n    symb\n  } = params;\n\n  if (expectation.startsWith('always')) {\n    div[position] = symb;\n    return true;\n  }\n\n  if (expectation.startsWith('never')) {\n    div[position] = '';\n\n    for (let i = index + 1; i < nodes.length; i++) {\n      const node = nodes[i];\n\n      if (node.type === 'comment') {\n        continue;\n      }\n\n      if (node.type === 'space') {\n        node.value = '';\n        continue;\n      }\n\n      break;\n    }\n\n    return true;\n  }\n};","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/lib/rules/functionCommaSpaceFix.js"],"names":["module","exports","params","div","index","nodes","expectation","position","symb","startsWith","i","length","node","type","value"],"mappings":"AAAA;AAEA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,UAAUC,MAAV,EAAkB;AAClC,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,KAAP;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA,WAArB;AAAkCC,IAAAA,QAAlC;AAA4CC,IAAAA;AAA5C,MAAqDN,MAA3D;;AAEA,MAAII,WAAW,CAACG,UAAZ,CAAuB,QAAvB,CAAJ,EAAsC;AACrCN,IAAAA,GAAG,CAACI,QAAD,CAAH,GAAgBC,IAAhB;AAEA,WAAO,IAAP;AACA;;AAED,MAAIF,WAAW,CAACG,UAAZ,CAAuB,OAAvB,CAAJ,EAAqC;AACpCN,IAAAA,GAAG,CAACI,QAAD,CAAH,GAAgB,EAAhB;;AAEA,SAAK,IAAIG,CAAC,GAAGN,KAAK,GAAG,CAArB,EAAwBM,CAAC,GAAGL,KAAK,CAACM,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC9C,YAAME,IAAI,GAAGP,KAAK,CAACK,CAAD,CAAlB;;AAEA,UAAIE,IAAI,CAACC,IAAL,KAAc,SAAlB,EAA6B;AAC5B;AACA;;AAED,UAAID,IAAI,CAACC,IAAL,KAAc,OAAlB,EAA2B;AAC1BD,QAAAA,IAAI,CAACE,KAAL,GAAa,EAAb;AACA;AACA;;AAED;AACA;;AAED,WAAO,IAAP;AACA;AACD,CA7BD","sourcesContent":["// @ts-nocheck\n\n'use strict';\n\nmodule.exports = function (params) {\n\tconst { div, index, nodes, expectation, position, symb } = params;\n\n\tif (expectation.startsWith('always')) {\n\t\tdiv[position] = symb;\n\n\t\treturn true;\n\t}\n\n\tif (expectation.startsWith('never')) {\n\t\tdiv[position] = '';\n\n\t\tfor (let i = index + 1; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\n\t\t\tif (node.type === 'comment') {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (node.type === 'space') {\n\t\t\t\tnode.value = '';\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tbreak;\n\t\t}\n\n\t\treturn true;\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}
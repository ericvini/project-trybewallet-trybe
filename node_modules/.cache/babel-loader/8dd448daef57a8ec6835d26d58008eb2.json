{"ast":null,"code":"// @ts-nocheck\n'use strict';\n\nconst report = require('../../utils/report');\n\nconst ruleMessages = require('../../utils/ruleMessages');\n\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'no-missing-end-of-source-newline';\nconst messages = ruleMessages(ruleName, {\n  rejected: 'Unexpected missing end-of-source newline'\n});\n\nfunction rule(primary, _, context) {\n  return (root, result) => {\n    const validOptions = validateOptions(result, ruleName, {\n      primary\n    });\n\n    if (!validOptions) {\n      return;\n    }\n\n    if (root.source.inline || root.source.lang === 'object-literal') {\n      return;\n    }\n\n    const rootString = context.fix ? root.toString() : root.source.input.css;\n\n    if (!rootString.trim() || rootString.endsWith('\\n')) {\n      return;\n    } // Fix\n\n\n    if (context.fix) {\n      root.raws.after = context.newline;\n      return;\n    }\n\n    report({\n      message: messages.rejected,\n      node: root,\n      index: rootString.length - 1,\n      result,\n      ruleName\n    });\n  };\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nmodule.exports = rule;","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/lib/rules/no-missing-end-of-source-newline/index.js"],"names":["report","require","ruleMessages","validateOptions","ruleName","messages","rejected","rule","primary","_","context","root","result","validOptions","source","inline","lang","rootString","fix","toString","input","css","trim","endsWith","raws","after","newline","message","node","index","length","module","exports"],"mappings":"AAAA;AAEA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,oBAAD,CAAtB;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,0BAAD,CAA5B;;AACA,MAAME,eAAe,GAAGF,OAAO,CAAC,6BAAD,CAA/B;;AAEA,MAAMG,QAAQ,GAAG,kCAAjB;AAEA,MAAMC,QAAQ,GAAGH,YAAY,CAACE,QAAD,EAAW;AACvCE,EAAAA,QAAQ,EAAE;AAD6B,CAAX,CAA7B;;AAIA,SAASC,IAAT,CAAcC,OAAd,EAAuBC,CAAvB,EAA0BC,OAA1B,EAAmC;AAClC,SAAO,CAACC,IAAD,EAAOC,MAAP,KAAkB;AACxB,UAAMC,YAAY,GAAGV,eAAe,CAACS,MAAD,EAASR,QAAT,EAAmB;AAAEI,MAAAA;AAAF,KAAnB,CAApC;;AAEA,QAAI,CAACK,YAAL,EAAmB;AAClB;AACA;;AAED,QAAIF,IAAI,CAACG,MAAL,CAAYC,MAAZ,IAAsBJ,IAAI,CAACG,MAAL,CAAYE,IAAZ,KAAqB,gBAA/C,EAAiE;AAChE;AACA;;AAED,UAAMC,UAAU,GAAGP,OAAO,CAACQ,GAAR,GAAcP,IAAI,CAACQ,QAAL,EAAd,GAAgCR,IAAI,CAACG,MAAL,CAAYM,KAAZ,CAAkBC,GAArE;;AAEA,QAAI,CAACJ,UAAU,CAACK,IAAX,EAAD,IAAsBL,UAAU,CAACM,QAAX,CAAoB,IAApB,CAA1B,EAAqD;AACpD;AACA,KAfuB,CAiBxB;;;AACA,QAAIb,OAAO,CAACQ,GAAZ,EAAiB;AAChBP,MAAAA,IAAI,CAACa,IAAL,CAAUC,KAAV,GAAkBf,OAAO,CAACgB,OAA1B;AAEA;AACA;;AAED1B,IAAAA,MAAM,CAAC;AACN2B,MAAAA,OAAO,EAAEtB,QAAQ,CAACC,QADZ;AAENsB,MAAAA,IAAI,EAAEjB,IAFA;AAGNkB,MAAAA,KAAK,EAAEZ,UAAU,CAACa,MAAX,GAAoB,CAHrB;AAINlB,MAAAA,MAJM;AAKNR,MAAAA;AALM,KAAD,CAAN;AAOA,GA/BD;AAgCA;;AAEDG,IAAI,CAACH,QAAL,GAAgBA,QAAhB;AACAG,IAAI,CAACF,QAAL,GAAgBA,QAAhB;AACA0B,MAAM,CAACC,OAAP,GAAiBzB,IAAjB","sourcesContent":["// @ts-nocheck\n\n'use strict';\n\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'no-missing-end-of-source-newline';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: 'Unexpected missing end-of-source newline',\n});\n\nfunction rule(primary, _, context) {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, { primary });\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (root.source.inline || root.source.lang === 'object-literal') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst rootString = context.fix ? root.toString() : root.source.input.css;\n\n\t\tif (!rootString.trim() || rootString.endsWith('\\n')) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fix\n\t\tif (context.fix) {\n\t\t\troot.raws.after = context.newline;\n\n\t\t\treturn;\n\t\t}\n\n\t\treport({\n\t\t\tmessage: messages.rejected,\n\t\t\tnode: root,\n\t\t\tindex: rootString.length - 1,\n\t\t\tresult,\n\t\t\truleName,\n\t\t});\n\t};\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nmodule.exports = rule;\n"]},"metadata":{},"sourceType":"script"}
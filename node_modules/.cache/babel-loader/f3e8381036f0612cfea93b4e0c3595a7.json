{"ast":null,"code":"'use strict';\n\nconst getPreviousNonSharedLineCommentNode = require('./getPreviousNonSharedLineCommentNode');\n\nconst hasBlock = require('./hasBlock');\n/**\n * @param {import('postcss').AtRule} atRule\n * @returns {boolean}\n */\n\n\nmodule.exports = function (atRule) {\n  if (atRule.type !== 'atrule') {\n    return false;\n  }\n\n  const previousNode = getPreviousNonSharedLineCommentNode(atRule);\n\n  if (previousNode === undefined) {\n    return false;\n  }\n\n  return previousNode.type === 'atrule' && !hasBlock(previousNode) && !hasBlock(atRule);\n};","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/lib/utils/isBlocklessAtRuleAfterBlocklessAtRule.js"],"names":["getPreviousNonSharedLineCommentNode","require","hasBlock","module","exports","atRule","type","previousNode","undefined"],"mappings":"AAAA;;AAEA,MAAMA,mCAAmC,GAAGC,OAAO,CAAC,uCAAD,CAAnD;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,YAAD,CAAxB;AAEA;AACA;AACA;AACA;;;AACAE,MAAM,CAACC,OAAP,GAAiB,UAAUC,MAAV,EAAkB;AAClC,MAAIA,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC7B,WAAO,KAAP;AACA;;AAED,QAAMC,YAAY,GAAGP,mCAAmC,CAACK,MAAD,CAAxD;;AAEA,MAAIE,YAAY,KAAKC,SAArB,EAAgC;AAC/B,WAAO,KAAP;AACA;;AAED,SAAOD,YAAY,CAACD,IAAb,KAAsB,QAAtB,IAAkC,CAACJ,QAAQ,CAACK,YAAD,CAA3C,IAA6D,CAACL,QAAQ,CAACG,MAAD,CAA7E;AACA,CAZD","sourcesContent":["'use strict';\n\nconst getPreviousNonSharedLineCommentNode = require('./getPreviousNonSharedLineCommentNode');\nconst hasBlock = require('./hasBlock');\n\n/**\n * @param {import('postcss').AtRule} atRule\n * @returns {boolean}\n */\nmodule.exports = function (atRule) {\n\tif (atRule.type !== 'atrule') {\n\t\treturn false;\n\t}\n\n\tconst previousNode = getPreviousNonSharedLineCommentNode(atRule);\n\n\tif (previousNode === undefined) {\n\t\treturn false;\n\t}\n\n\treturn previousNode.type === 'atrule' && !hasBlock(previousNode) && !hasBlock(atRule);\n};\n"]},"metadata":{},"sourceType":"script"}
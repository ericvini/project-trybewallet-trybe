{"ast":null,"code":"var _jsxFileName = \"/home/eric/project-trybewallet-trybe/src/pages/Wallet.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchCurrencies, newExpense } from '../actions';\nimport Table from '../components/Table';\n\nclass Wallet extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      totalExpenses: 0,\n      form: {\n        id: 0,\n        value: 0,\n        description: '',\n        currency: 'USD',\n        method: 'Dinheiro',\n        tag: 'Alimentação',\n        exchangeRates: {}\n      }\n    };\n    this.filterCurrencies = this.filterCurrencies.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateFormState = this.updateFormState.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      getCurrencies\n    } = this.props;\n    getCurrencies();\n  }\n\n  filterCurrencies() {\n    const {\n      currencies\n    } = this.props;\n    const allcurrencies = Object.entries(currencies);\n    const filteredCurrencies = allcurrencies.filter(currencie => currencie[0] !== 'USDT');\n    return filteredCurrencies;\n  }\n\n  handleChange({\n    target\n  }) {\n    const {\n      name,\n      value\n    } = target;\n    this.setState(previouState => ({\n      form: { ...previouState.form,\n        [name]: value\n      }\n    }));\n  }\n\n  updateFormState() {\n    const {\n      getCurrencies,\n      saveExpenses,\n      currencies\n    } = this.props;\n    getCurrencies();\n    this.setState(previousState => ({\n      form: { ...previousState.form,\n        exchangeRates: currencies\n      }\n    }), () => {\n      const {\n        form\n      } = this.state;\n      saveExpenses(form);\n      this.setState(previouState => ({\n        form: {\n          currency: 'USD',\n          description: '',\n          exchangeRates: {},\n          id: previouState.form.id + 1,\n          method: 'Dinheiro',\n          tag: 'Alimentação',\n          value: 0\n        }\n      }));\n    });\n  }\n\n  updateTotalExpenses() {\n    const exchange = this.filterCurrencies();\n    const {\n      form: {\n        value,\n        currency\n      }\n    } = this.state;\n    const exchangeRate = exchange.find(currencie => currencie[0] === currency);\n    const expense = value * exchangeRate[1].ask;\n    this.setState(previouState => ({\n      totalExpenses: previouState.totalExpenses + +expense.toFixed(2)\n    }));\n  }\n\n  handleSubmit() {\n    this.updateTotalExpenses();\n    this.updateFormState();\n  }\n\n  render() {\n    const {\n      totalExpenses,\n      form\n    } = this.state;\n    const {\n      value,\n      description,\n      currency,\n      method,\n      tag\n    } = form;\n    const {\n      email\n    } = this.props;\n    const filteredCurrencie = this.filterCurrencies();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"email-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, email), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"total-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, totalExpenses), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"header-currency-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, \"BRL\")), /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"value-input\",\n      name: \"value\",\n      value: value,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"description-input\",\n      name: \"description\",\n      value: description,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"currency-input\",\n      name: \"currency\",\n      value: currency,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, filteredCurrencie.map(currencie => /*#__PURE__*/React.createElement(\"option\", {\n      key: currencie[0],\n      value: currencie[0],\n      \"data-testid\": currencie[0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, currencie[0], ' '))), /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"method-input\",\n      name: \"method\",\n      value: method,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Dinheiro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Cart\\xE3o de cr\\xE9dito\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }, \"Cart\\xE3o de cr\\xE9dito\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Cart\\xE3o de d\\xE9bito\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }, \"Cart\\xE3o de d\\xE9bito\")), /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"tag-input\",\n      name: \"tag\",\n      value: tag,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Alimenta\\xE7\\xE3o\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }\n    }, \"Alimenta\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Lazer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, \"Lazer\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Trabalho\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }\n    }, \"Trabalho\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Transporte\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, \"Transporte\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Sa\\xFAde\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    }, \"Sa\\xFAde\")), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }, \"Adicionar Despesa\"), /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  email: state.user.email,\n  currencies: state.wallet.currencies\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCurrencies: () => dispatch(fetchCurrencies()),\n  saveExpenses: expenses => dispatch(newExpense(expenses))\n});\n\nWallet.propTypes = {\n  email: PropTypes.string.isRequired,\n  currencies: PropTypes.arrayOf(PropTypes.object).isRequired,\n  getCurrencies: PropTypes.func.isRequired,\n  saveExpenses: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);","map":{"version":3,"sources":["/home/eric/project-trybewallet-trybe/src/pages/Wallet.js"],"names":["React","PropTypes","connect","fetchCurrencies","newExpense","Table","Wallet","Component","constructor","state","totalExpenses","form","id","value","description","currency","method","tag","exchangeRates","filterCurrencies","bind","handleChange","handleSubmit","updateFormState","componentDidMount","getCurrencies","props","currencies","allcurrencies","Object","entries","filteredCurrencies","filter","currencie","target","name","setState","previouState","saveExpenses","previousState","updateTotalExpenses","exchange","exchangeRate","find","expense","ask","toFixed","render","email","filteredCurrencie","map","mapStateToProps","user","wallet","mapDispatchToProps","dispatch","expenses","propTypes","string","isRequired","arrayOf","object","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchCurrencies, newExpense } from '../actions';\nimport Table from '../components/Table';\n\nclass Wallet extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      totalExpenses: 0,\n      form: {\n        id: 0,\n        value: 0,\n        description: '',\n        currency: 'USD',\n        method: 'Dinheiro',\n        tag: 'Alimentação',\n        exchangeRates: {},\n      },\n    };\n    this.filterCurrencies = this.filterCurrencies.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateFormState = this.updateFormState.bind(this);\n  }\n\n  componentDidMount() {\n    const { getCurrencies } = this.props;\n    getCurrencies();\n  }\n\n  filterCurrencies() {\n    const { currencies } = this.props;\n    const allcurrencies = Object.entries(currencies);\n    const filteredCurrencies = allcurrencies.filter(\n      (currencie) => currencie[0] !== 'USDT',\n    );\n    return filteredCurrencies;\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState((previouState) => ({\n      form: { ...previouState.form, [name]: value },\n    }));\n  }\n\n  updateFormState() {\n    const { getCurrencies, saveExpenses, currencies } = this.props;\n    getCurrencies();\n    this.setState(\n      (previousState) => ({\n        form: { ...previousState.form, exchangeRates: currencies },\n      }),\n      () => {\n        const { form } = this.state;\n        saveExpenses(form);\n        this.setState((previouState) => ({\n          form: {\n            currency: 'USD',\n            description: '',\n            exchangeRates: {},\n            id: previouState.form.id + 1,\n            method: 'Dinheiro',\n            tag: 'Alimentação',\n            value: 0,\n          },\n        }));\n      },\n    );\n  }\n\n  updateTotalExpenses() {\n    const exchange = this.filterCurrencies();\n    const {\n      form: { value, currency },\n    } = this.state;\n    const exchangeRate = exchange.find((currencie) => currencie[0] === currency);\n    const expense = value * exchangeRate[1].ask;\n    this.setState((previouState) => ({\n      totalExpenses: previouState.totalExpenses + +expense.toFixed(2),\n    }));\n  }\n\n  handleSubmit() {\n    this.updateTotalExpenses();\n    this.updateFormState();\n  }\n\n  render() {\n    const { totalExpenses, form } = this.state;\n    const { value, description, currency, method, tag } = form;\n\n    const { email } = this.props;\n\n    const filteredCurrencie = this.filterCurrencies();\n\n    return (\n      <div>\n        <header>\n          <p data-testid=\"email-field\">{email}</p>\n          <p data-testid=\"total-field\">{totalExpenses}</p>\n          <p data-testid=\"header-currency-field\">BRL</p>\n        </header>\n\n        <input\n          data-testid=\"value-input\"\n          name=\"value\"\n          value={ value }\n          onChange={ this.handleChange }\n        />\n        <input\n          data-testid=\"description-input\"\n          name=\"description\"\n          value={ description }\n          onChange={ this.handleChange }\n        />\n        <select\n          data-testid=\"currency-input\"\n          name=\"currency\"\n          value={ currency }\n          onChange={ this.handleChange }\n        >\n          {filteredCurrencie.map((currencie) => (\n            <option\n              key={ currencie[0] }\n              value={ currencie[0] }\n              data-testid={ currencie[0] }\n            >\n              {currencie[0]}\n              {' '}\n            </option>\n          ))}\n        </select>\n        <select\n          data-testid=\"method-input\"\n          name=\"method\"\n          value={ method }\n          onChange={ this.handleChange }\n        >\n          <option value=\"Dinheiro\">Dinheiro</option>\n          <option value=\"Cartão de crédito\">Cartão de crédito</option>\n          <option value=\"Cartão de débito\">Cartão de débito</option>\n        </select>\n        <select\n          data-testid=\"tag-input\"\n          name=\"tag\"\n          value={ tag }\n          onChange={ this.handleChange }\n        >\n          <option value=\"Alimentação\">Alimentação</option>\n          <option value=\"Lazer\">Lazer</option>\n          <option value=\"Trabalho\">Trabalho</option>\n          <option value=\"Transporte\">Transporte</option>\n          <option value=\"Saúde\">Saúde</option>\n        </select>\n        <button type=\"button\" onClick={ this.handleSubmit }>\n          Adicionar Despesa\n        </button>\n        <Table />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n  currencies: state.wallet.currencies,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getCurrencies: () => dispatch(fetchCurrencies()),\n  saveExpenses: (expenses) => dispatch(newExpense(expenses)),\n});\n\nWallet.propTypes = {\n  email: PropTypes.string.isRequired,\n  currencies: PropTypes.arrayOf(PropTypes.object).isRequired,\n  getCurrencies: PropTypes.func.isRequired,\n  saveExpenses: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Node = require('./Node');\n\nvar _Node2 = _interopRequireDefault(_Node);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction Container(opts) {\n  var _this = this;\n\n  this.constructor(opts);\n  this.nodes = opts.nodes;\n\n  if (this.after === undefined) {\n    this.after = this.nodes.length > 0 ? this.nodes[this.nodes.length - 1].after : '';\n  }\n\n  if (this.before === undefined) {\n    this.before = this.nodes.length > 0 ? this.nodes[0].before : '';\n  }\n\n  if (this.sourceIndex === undefined) {\n    this.sourceIndex = this.before.length;\n  }\n\n  this.nodes.forEach(function (node) {\n    node.parent = _this; // eslint-disable-line no-param-reassign\n  });\n}\n/**\r\n * A node that contains other nodes and support traversing over them\r\n */\n\n\nContainer.prototype = Object.create(_Node2.default.prototype);\nContainer.constructor = _Node2.default;\n/**\r\n * Iterate over descendant nodes of the node\r\n *\r\n * @param {RegExp|string} filter - Optional. Only nodes with node.type that\r\n *    satisfies the filter will be traversed over\r\n * @param {function} cb - callback to call on each node. Takes theese params:\r\n *    node - the node being processed, i - it's index, nodes - the array\r\n *    of all nodes\r\n *    If false is returned, the iteration breaks\r\n *\r\n * @return (boolean) false, if the iteration was broken\r\n */\n\nContainer.prototype.walk = function walk(filter, cb) {\n  var hasFilter = typeof filter === 'string' || filter instanceof RegExp;\n  var callback = hasFilter ? cb : filter;\n  var filterReg = typeof filter === 'string' ? new RegExp(filter) : filter;\n\n  for (var i = 0; i < this.nodes.length; i++) {\n    var node = this.nodes[i];\n    var filtered = hasFilter ? filterReg.test(node.type) : true;\n\n    if (filtered && callback && callback(node, i, this.nodes) === false) {\n      return false;\n    }\n\n    if (node.nodes && node.walk(filter, cb) === false) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\r\n * Iterate over immediate children of the node\r\n *\r\n * @param {function} cb - callback to call on each node. Takes theese params:\r\n *    node - the node being processed, i - it's index, nodes - the array\r\n *    of all nodes\r\n *    If false is returned, the iteration breaks\r\n *\r\n * @return (boolean) false, if the iteration was broken\r\n */\n\n\nContainer.prototype.each = function each() {\n  var cb = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];\n\n  for (var i = 0; i < this.nodes.length; i++) {\n    var node = this.nodes[i];\n\n    if (cb(node, i, this.nodes) === false) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nexports.default = Container;","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/postcss-media-query-parser/dist/nodes/Container.js"],"names":["Object","defineProperty","exports","value","_Node","require","_Node2","_interopRequireDefault","obj","__esModule","default","Container","opts","_this","constructor","nodes","after","undefined","length","before","sourceIndex","forEach","node","parent","prototype","create","walk","filter","cb","hasFilter","RegExp","callback","filterReg","i","filtered","test","type","each","arguments"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIA,IAAIC,KAAK,GAAGC,OAAO,CAAC,QAAD,CAAnB;;AAEA,IAAIC,MAAM,GAAGC,sBAAsB,CAACH,KAAD,CAAnC;;AAEA,SAASG,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;;AAE/F,SAASG,SAAT,CAAmBC,IAAnB,EAAyB;AACvB,MAAIC,KAAK,GAAG,IAAZ;;AAEA,OAAKC,WAAL,CAAiBF,IAAjB;AAEA,OAAKG,KAAL,GAAaH,IAAI,CAACG,KAAlB;;AAEA,MAAI,KAAKC,KAAL,KAAeC,SAAnB,EAA8B;AAC5B,SAAKD,KAAL,GAAa,KAAKD,KAAL,CAAWG,MAAX,GAAoB,CAApB,GAAwB,KAAKH,KAAL,CAAW,KAAKA,KAAL,CAAWG,MAAX,GAAoB,CAA/B,EAAkCF,KAA1D,GAAkE,EAA/E;AACD;;AAED,MAAI,KAAKG,MAAL,KAAgBF,SAApB,EAA+B;AAC7B,SAAKE,MAAL,GAAc,KAAKJ,KAAL,CAAWG,MAAX,GAAoB,CAApB,GAAwB,KAAKH,KAAL,CAAW,CAAX,EAAcI,MAAtC,GAA+C,EAA7D;AACD;;AAED,MAAI,KAAKC,WAAL,KAAqBH,SAAzB,EAAoC;AAClC,SAAKG,WAAL,GAAmB,KAAKD,MAAL,CAAYD,MAA/B;AACD;;AAED,OAAKH,KAAL,CAAWM,OAAX,CAAmB,UAAUC,IAAV,EAAgB;AACjCA,IAAAA,IAAI,CAACC,MAAL,GAAcV,KAAd,CADiC,CACZ;AACtB,GAFD;AAGD;AAAC;AACF;AACA;;;AAEAF,SAAS,CAACa,SAAV,GAAsBxB,MAAM,CAACyB,MAAP,CAAcnB,MAAM,CAACI,OAAP,CAAec,SAA7B,CAAtB;AACAb,SAAS,CAACG,WAAV,GAAwBR,MAAM,CAACI,OAA/B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAC,SAAS,CAACa,SAAV,CAAoBE,IAApB,GAA2B,SAASA,IAAT,CAAcC,MAAd,EAAsBC,EAAtB,EAA0B;AACnD,MAAIC,SAAS,GAAG,OAAOF,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,YAAYG,MAAhE;AACA,MAAIC,QAAQ,GAAGF,SAAS,GAAGD,EAAH,GAAQD,MAAhC;AACA,MAAIK,SAAS,GAAG,OAAOL,MAAP,KAAkB,QAAlB,GAA6B,IAAIG,MAAJ,CAAWH,MAAX,CAA7B,GAAkDA,MAAlE;;AAEA,OAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKlB,KAAL,CAAWG,MAA/B,EAAuCe,CAAC,EAAxC,EAA4C;AAC1C,QAAIX,IAAI,GAAG,KAAKP,KAAL,CAAWkB,CAAX,CAAX;AACA,QAAIC,QAAQ,GAAGL,SAAS,GAAGG,SAAS,CAACG,IAAV,CAAeb,IAAI,CAACc,IAApB,CAAH,GAA+B,IAAvD;;AACA,QAAIF,QAAQ,IAAIH,QAAZ,IAAwBA,QAAQ,CAACT,IAAD,EAAOW,CAAP,EAAU,KAAKlB,KAAf,CAAR,KAAkC,KAA9D,EAAqE;AACnE,aAAO,KAAP;AACD;;AACD,QAAIO,IAAI,CAACP,KAAL,IAAcO,IAAI,CAACI,IAAL,CAAUC,MAAV,EAAkBC,EAAlB,MAA0B,KAA5C,EAAmD;AACjD,aAAO,KAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD,CAhBD;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAjB,SAAS,CAACa,SAAV,CAAoBa,IAApB,GAA2B,SAASA,IAAT,GAAgB;AACzC,MAAIT,EAAE,GAAGU,SAAS,CAACpB,MAAV,IAAoB,CAApB,IAAyBoB,SAAS,CAAC,CAAD,CAAT,KAAiBrB,SAA1C,GAAsD,YAAY,CAAE,CAApE,GAAuEqB,SAAS,CAAC,CAAD,CAAzF;;AAEA,OAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKlB,KAAL,CAAWG,MAA/B,EAAuCe,CAAC,EAAxC,EAA4C;AAC1C,QAAIX,IAAI,GAAG,KAAKP,KAAL,CAAWkB,CAAX,CAAX;;AACA,QAAIL,EAAE,CAACN,IAAD,EAAOW,CAAP,EAAU,KAAKlB,KAAf,CAAF,KAA4B,KAAhC,EAAuC;AACrC,aAAO,KAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD,CAVD;;AAYAb,OAAO,CAACQ,OAAR,GAAkBC,SAAlB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Node = require('./Node');\n\nvar _Node2 = _interopRequireDefault(_Node);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction Container(opts) {\n  var _this = this;\n\n  this.constructor(opts);\n\n  this.nodes = opts.nodes;\n\n  if (this.after === undefined) {\n    this.after = this.nodes.length > 0 ? this.nodes[this.nodes.length - 1].after : '';\n  }\n\n  if (this.before === undefined) {\n    this.before = this.nodes.length > 0 ? this.nodes[0].before : '';\n  }\n\n  if (this.sourceIndex === undefined) {\n    this.sourceIndex = this.before.length;\n  }\n\n  this.nodes.forEach(function (node) {\n    node.parent = _this; // eslint-disable-line no-param-reassign\n  });\n} /**\r\n   * A node that contains other nodes and support traversing over them\r\n   */\n\nContainer.prototype = Object.create(_Node2.default.prototype);\nContainer.constructor = _Node2.default;\n\n/**\r\n * Iterate over descendant nodes of the node\r\n *\r\n * @param {RegExp|string} filter - Optional. Only nodes with node.type that\r\n *    satisfies the filter will be traversed over\r\n * @param {function} cb - callback to call on each node. Takes theese params:\r\n *    node - the node being processed, i - it's index, nodes - the array\r\n *    of all nodes\r\n *    If false is returned, the iteration breaks\r\n *\r\n * @return (boolean) false, if the iteration was broken\r\n */\nContainer.prototype.walk = function walk(filter, cb) {\n  var hasFilter = typeof filter === 'string' || filter instanceof RegExp;\n  var callback = hasFilter ? cb : filter;\n  var filterReg = typeof filter === 'string' ? new RegExp(filter) : filter;\n\n  for (var i = 0; i < this.nodes.length; i++) {\n    var node = this.nodes[i];\n    var filtered = hasFilter ? filterReg.test(node.type) : true;\n    if (filtered && callback && callback(node, i, this.nodes) === false) {\n      return false;\n    }\n    if (node.nodes && node.walk(filter, cb) === false) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\r\n * Iterate over immediate children of the node\r\n *\r\n * @param {function} cb - callback to call on each node. Takes theese params:\r\n *    node - the node being processed, i - it's index, nodes - the array\r\n *    of all nodes\r\n *    If false is returned, the iteration breaks\r\n *\r\n * @return (boolean) false, if the iteration was broken\r\n */\nContainer.prototype.each = function each() {\n  var cb = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];\n\n  for (var i = 0; i < this.nodes.length; i++) {\n    var node = this.nodes[i];\n    if (cb(node, i, this.nodes) === false) {\n      return false;\n    }\n  }\n  return true;\n};\n\nexports.default = Container;"]},"metadata":{},"sourceType":"script"}
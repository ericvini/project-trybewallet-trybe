{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.drawBorderTop = exports.drawBorderJoin = exports.drawBorderBottom = exports.drawBorder = void 0;\n/**\n * @typedef drawBorder~parts\n * @property {string} left\n * @property {string} right\n * @property {string} body\n * @property {string} join\n */\n\n/**\n * @param {number[]} columnSizeIndex\n * @param {drawBorder~parts} parts\n * @returns {string}\n */\n\nconst drawBorder = (columnSizeIndex, parts) => {\n  const columns = columnSizeIndex.map(size => {\n    return parts.body.repeat(size);\n  }).join(parts.join);\n  return parts.left + columns + parts.right + '\\n';\n};\n/**\n * @typedef drawBorderTop~parts\n * @property {string} topLeft\n * @property {string} topRight\n * @property {string} topBody\n * @property {string} topJoin\n */\n\n/**\n * @param {number[]} columnSizeIndex\n * @param {drawBorderTop~parts} parts\n * @returns {string}\n */\n\n\nexports.drawBorder = drawBorder;\n\nconst drawBorderTop = (columnSizeIndex, parts) => {\n  const border = drawBorder(columnSizeIndex, {\n    body: parts.topBody,\n    join: parts.topJoin,\n    left: parts.topLeft,\n    right: parts.topRight\n  });\n\n  if (border === '\\n') {\n    return '';\n  }\n\n  return border;\n};\n/**\n * @typedef drawBorderJoin~parts\n * @property {string} joinLeft\n * @property {string} joinRight\n * @property {string} joinBody\n * @property {string} joinJoin\n */\n\n/**\n * @param {number[]} columnSizeIndex\n * @param {drawBorderJoin~parts} parts\n * @returns {string}\n */\n\n\nexports.drawBorderTop = drawBorderTop;\n\nconst drawBorderJoin = (columnSizeIndex, parts) => {\n  return drawBorder(columnSizeIndex, {\n    body: parts.joinBody,\n    join: parts.joinJoin,\n    left: parts.joinLeft,\n    right: parts.joinRight\n  });\n};\n/**\n * @typedef drawBorderBottom~parts\n * @property {string} topLeft\n * @property {string} topRight\n * @property {string} topBody\n * @property {string} topJoin\n */\n\n/**\n * @param {number[]} columnSizeIndex\n * @param {drawBorderBottom~parts} parts\n * @returns {string}\n */\n\n\nexports.drawBorderJoin = drawBorderJoin;\n\nconst drawBorderBottom = (columnSizeIndex, parts) => {\n  return drawBorder(columnSizeIndex, {\n    body: parts.bottomBody,\n    join: parts.bottomJoin,\n    left: parts.bottomLeft,\n    right: parts.bottomRight\n  });\n};\n\nexports.drawBorderBottom = drawBorderBottom;","map":{"version":3,"sources":["../src/drawBorder.js"],"names":["drawBorder","columns","size","parts","drawBorderTop","border","body","join","left","right","topRight","drawBorderJoin","joinRight","drawBorderBottom","bottomRight"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMA,UAAU,GAAG,CAAA,eAAA,EAAA,KAAA,KAA4B;AAC7C,QAAMC,OAAO,GAAG,eAAe,CAAf,GAAA,CACRC,IAAD,IAAU;AACb,WAAOC,KAAK,CAALA,IAAAA,CAAAA,MAAAA,CAAP,IAAOA,CAAP;AAFY,GAAA,EAAA,IAAA,CAIRA,KAAK,CAJb,IAAgB,CAAhB;AAMA,SAAOA,KAAK,CAALA,IAAAA,GAAAA,OAAAA,GAAuBA,KAAK,CAA5BA,KAAAA,GAAP,IAAA;AAPF,CAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AACA,MAAMC,aAAa,GAAG,CAAA,eAAA,EAAA,KAAA,KAA4B;AAChD,QAAMC,MAAM,GAAGL,UAAU,CAAA,eAAA,EAAkB;AACzCM,IAAAA,IAAI,EAAEH,KAAK,CAD8B,OAAA;AAEzCI,IAAAA,IAAI,EAAEJ,KAAK,CAF8B,OAAA;AAGzCK,IAAAA,IAAI,EAAEL,KAAK,CAH8B,OAAA;AAIzCM,IAAAA,KAAK,EAAEN,KAAK,CAACO;AAJ4B,GAAlB,CAAzB;;AAOA,MAAIL,MAAM,KAAV,IAAA,EAAqB;AACnB,WAAA,EAAA;AACD;;AAED,SAAA,MAAA;AAZF,CAAA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AACA,MAAMM,cAAc,GAAG,CAAA,eAAA,EAAA,KAAA,KAA4B;AACjD,SAAOX,UAAU,CAAA,eAAA,EAAkB;AACjCM,IAAAA,IAAI,EAAEH,KAAK,CADsB,QAAA;AAEjCI,IAAAA,IAAI,EAAEJ,KAAK,CAFsB,QAAA;AAGjCK,IAAAA,IAAI,EAAEL,KAAK,CAHsB,QAAA;AAIjCM,IAAAA,KAAK,EAAEN,KAAK,CAACS;AAJoB,GAAlB,CAAjB;AADF,CAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AACA,MAAMC,gBAAgB,GAAG,CAAA,eAAA,EAAA,KAAA,KAA4B;AACnD,SAAOb,UAAU,CAAA,eAAA,EAAkB;AACjCM,IAAAA,IAAI,EAAEH,KAAK,CADsB,UAAA;AAEjCI,IAAAA,IAAI,EAAEJ,KAAK,CAFsB,UAAA;AAGjCK,IAAAA,IAAI,EAAEL,KAAK,CAHsB,UAAA;AAIjCM,IAAAA,KAAK,EAAEN,KAAK,CAACW;AAJoB,GAAlB,CAAjB;AADF,CAAA","sourcesContent":["/**\n * @typedef drawBorder~parts\n * @property {string} left\n * @property {string} right\n * @property {string} body\n * @property {string} join\n */\n\n/**\n * @param {number[]} columnSizeIndex\n * @param {drawBorder~parts} parts\n * @returns {string}\n */\nconst drawBorder = (columnSizeIndex, parts) => {\n  const columns = columnSizeIndex\n    .map((size) => {\n      return parts.body.repeat(size);\n    })\n    .join(parts.join);\n\n  return parts.left + columns + parts.right + '\\n';\n};\n\n/**\n * @typedef drawBorderTop~parts\n * @property {string} topLeft\n * @property {string} topRight\n * @property {string} topBody\n * @property {string} topJoin\n */\n\n/**\n * @param {number[]} columnSizeIndex\n * @param {drawBorderTop~parts} parts\n * @returns {string}\n */\nconst drawBorderTop = (columnSizeIndex, parts) => {\n  const border = drawBorder(columnSizeIndex, {\n    body: parts.topBody,\n    join: parts.topJoin,\n    left: parts.topLeft,\n    right: parts.topRight,\n  });\n\n  if (border === '\\n') {\n    return '';\n  }\n\n  return border;\n};\n\n/**\n * @typedef drawBorderJoin~parts\n * @property {string} joinLeft\n * @property {string} joinRight\n * @property {string} joinBody\n * @property {string} joinJoin\n */\n\n/**\n * @param {number[]} columnSizeIndex\n * @param {drawBorderJoin~parts} parts\n * @returns {string}\n */\nconst drawBorderJoin = (columnSizeIndex, parts) => {\n  return drawBorder(columnSizeIndex, {\n    body: parts.joinBody,\n    join: parts.joinJoin,\n    left: parts.joinLeft,\n    right: parts.joinRight,\n  });\n};\n\n/**\n * @typedef drawBorderBottom~parts\n * @property {string} topLeft\n * @property {string} topRight\n * @property {string} topBody\n * @property {string} topJoin\n */\n\n/**\n * @param {number[]} columnSizeIndex\n * @param {drawBorderBottom~parts} parts\n * @returns {string}\n */\nconst drawBorderBottom = (columnSizeIndex, parts) => {\n  return drawBorder(columnSizeIndex, {\n    body: parts.bottomBody,\n    join: parts.bottomJoin,\n    left: parts.bottomLeft,\n    right: parts.bottomRight,\n  });\n};\n\nexport {\n  drawBorder,\n  drawBorderBottom,\n  drawBorderJoin,\n  drawBorderTop,\n};\n"]},"metadata":{},"sourceType":"script"}
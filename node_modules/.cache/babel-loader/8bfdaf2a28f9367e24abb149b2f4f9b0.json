{"ast":null,"code":"'use strict';\n\nconst _ = require('lodash');\n\nconst normalizeRuleSettings = require('./normalizeRuleSettings');\n\nconst rules = require('./rules');\n/** @typedef {import('stylelint').StylelintConfigRules} StylelintConfigRules */\n\n/** @typedef {import('stylelint').StylelintConfig} StylelintConfig */\n\n/**\n * @param {StylelintConfig} config\n * @return {StylelintConfig}\n */\n\n\nfunction normalizeAllRuleSettings(config) {\n  /** @type {StylelintConfigRules} */\n  const normalizedRules = {};\n  if (!config.rules) return config;\n  Object.keys(config.rules).forEach(ruleName => {\n    const rawRuleSettings = _.get(config, ['rules', ruleName]);\n\n    const rule = rules[ruleName] || _.get(config, ['pluginFunctions', ruleName]);\n\n    if (!rule) {\n      normalizedRules[ruleName] = [];\n    } else {\n      normalizedRules[ruleName] = normalizeRuleSettings(rawRuleSettings, ruleName, _.get(rule, 'primaryOptionArray'));\n    }\n  });\n  config.rules = normalizedRules;\n  return config;\n}\n\nmodule.exports = normalizeAllRuleSettings;","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/lib/normalizeAllRuleSettings.js"],"names":["_","require","normalizeRuleSettings","rules","normalizeAllRuleSettings","config","normalizedRules","Object","keys","forEach","ruleName","rawRuleSettings","get","rule","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AACA,MAAMC,qBAAqB,GAAGD,OAAO,CAAC,yBAAD,CAArC;;AACA,MAAME,KAAK,GAAGF,OAAO,CAAC,SAAD,CAArB;AAEA;;AACA;;AAEA;AACA;AACA;AACA;;;AACA,SAASG,wBAAT,CAAkCC,MAAlC,EAA0C;AACzC;AACA,QAAMC,eAAe,GAAG,EAAxB;AAEA,MAAI,CAACD,MAAM,CAACF,KAAZ,EAAmB,OAAOE,MAAP;AAEnBE,EAAAA,MAAM,CAACC,IAAP,CAAYH,MAAM,CAACF,KAAnB,EAA0BM,OAA1B,CAAmCC,QAAD,IAAc;AAC/C,UAAMC,eAAe,GAAGX,CAAC,CAACY,GAAF,CAAMP,MAAN,EAAc,CAAC,OAAD,EAAUK,QAAV,CAAd,CAAxB;;AAEA,UAAMG,IAAI,GAAGV,KAAK,CAACO,QAAD,CAAL,IAAmBV,CAAC,CAACY,GAAF,CAAMP,MAAN,EAAc,CAAC,iBAAD,EAAoBK,QAApB,CAAd,CAAhC;;AAEA,QAAI,CAACG,IAAL,EAAW;AACVP,MAAAA,eAAe,CAACI,QAAD,CAAf,GAA4B,EAA5B;AACA,KAFD,MAEO;AACNJ,MAAAA,eAAe,CAACI,QAAD,CAAf,GAA4BR,qBAAqB,CAChDS,eADgD,EAEhDD,QAFgD,EAGhDV,CAAC,CAACY,GAAF,CAAMC,IAAN,EAAY,oBAAZ,CAHgD,CAAjD;AAKA;AACD,GAdD;AAgBAR,EAAAA,MAAM,CAACF,KAAP,GAAeG,eAAf;AAEA,SAAOD,MAAP;AACA;;AAEDS,MAAM,CAACC,OAAP,GAAiBX,wBAAjB","sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst normalizeRuleSettings = require('./normalizeRuleSettings');\nconst rules = require('./rules');\n\n/** @typedef {import('stylelint').StylelintConfigRules} StylelintConfigRules */\n/** @typedef {import('stylelint').StylelintConfig} StylelintConfig */\n\n/**\n * @param {StylelintConfig} config\n * @return {StylelintConfig}\n */\nfunction normalizeAllRuleSettings(config) {\n\t/** @type {StylelintConfigRules} */\n\tconst normalizedRules = {};\n\n\tif (!config.rules) return config;\n\n\tObject.keys(config.rules).forEach((ruleName) => {\n\t\tconst rawRuleSettings = _.get(config, ['rules', ruleName]);\n\n\t\tconst rule = rules[ruleName] || _.get(config, ['pluginFunctions', ruleName]);\n\n\t\tif (!rule) {\n\t\t\tnormalizedRules[ruleName] = [];\n\t\t} else {\n\t\t\tnormalizedRules[ruleName] = normalizeRuleSettings(\n\t\t\t\trawRuleSettings,\n\t\t\t\truleName,\n\t\t\t\t_.get(rule, 'primaryOptionArray'),\n\t\t\t);\n\t\t}\n\t});\n\n\tconfig.rules = normalizedRules;\n\n\treturn config;\n}\n\nmodule.exports = normalizeAllRuleSettings;\n"]},"metadata":{},"sourceType":"script"}
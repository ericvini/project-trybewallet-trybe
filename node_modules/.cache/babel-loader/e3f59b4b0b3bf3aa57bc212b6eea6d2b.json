{"ast":null,"code":"\"use strict\";\n\nconst parser = require(\"./parser\");\n\nconst processor = require(\"./processor\");\n\nconst getLang = require(\"./get-lang\");\n\nconst normalOpts = require(\"./normal-opts\");\n\nfunction getSyntax(opts, source) {\n  const rules = opts.syntax && opts.syntax.config && opts.syntax.config.rules;\n  const file = opts.from || \"\";\n  return rules && rules.find(rule => rule.test.test ? rule.test.test(file) : rule.test(file, source)) || getLang(file, source) || {\n    lang: \"css\"\n  };\n}\n\nfunction parse(source, opts) {\n  source = source.toString();\n  opts = normalOpts(opts, this);\n  const syntax = getSyntax(opts, source);\n  const syntaxOpts = Object.assign({}, opts, syntax.opts);\n  let root;\n\n  if (syntax.extract) {\n    root = processor(source, syntax.extract, syntaxOpts);\n    root.source.lang = syntax.extract;\n  } else {\n    root = parser(source, syntax.lang, syntaxOpts);\n    root.source.lang = syntax.lang;\n  }\n\n  return root;\n}\n\nmodule.exports = parse;","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/postcss-syntax/parse.js"],"names":["parser","require","processor","getLang","normalOpts","getSyntax","opts","source","rules","syntax","config","file","from","find","rule","test","lang","parse","toString","syntaxOpts","Object","assign","root","extract","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,aAAD,CAAzB;;AACA,MAAME,OAAO,GAAGF,OAAO,CAAC,YAAD,CAAvB;;AACA,MAAMG,UAAU,GAAGH,OAAO,CAAC,eAAD,CAA1B;;AAEA,SAASI,SAAT,CAAoBC,IAApB,EAA0BC,MAA1B,EAAkC;AACjC,QAAMC,KAAK,GAAGF,IAAI,CAACG,MAAL,IAAeH,IAAI,CAACG,MAAL,CAAYC,MAA3B,IAAqCJ,IAAI,CAACG,MAAL,CAAYC,MAAZ,CAAmBF,KAAtE;AACA,QAAMG,IAAI,GAAGL,IAAI,CAACM,IAAL,IAAa,EAA1B;AACA,SAAQJ,KAAK,IAAIA,KAAK,CAACK,IAAN,CAChBC,IAAI,IAAIA,IAAI,CAACC,IAAL,CAAUA,IAAV,GAAiBD,IAAI,CAACC,IAAL,CAAUA,IAAV,CAAeJ,IAAf,CAAjB,GAAwCG,IAAI,CAACC,IAAL,CAAUJ,IAAV,EAAgBJ,MAAhB,CADhC,CAAV,IAEDJ,OAAO,CAACQ,IAAD,EAAOJ,MAAP,CAFN,IAEwB;AAC9BS,IAAAA,IAAI,EAAE;AADwB,GAF/B;AAKA;;AAED,SAASC,KAAT,CAAgBV,MAAhB,EAAwBD,IAAxB,EAA8B;AAC7BC,EAAAA,MAAM,GAAGA,MAAM,CAACW,QAAP,EAAT;AACAZ,EAAAA,IAAI,GAAGF,UAAU,CAACE,IAAD,EAAO,IAAP,CAAjB;AACA,QAAMG,MAAM,GAAGJ,SAAS,CAACC,IAAD,EAAOC,MAAP,CAAxB;AACA,QAAMY,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBf,IAAlB,EAAwBG,MAAM,CAACH,IAA/B,CAAnB;AACA,MAAIgB,IAAJ;;AACA,MAAIb,MAAM,CAACc,OAAX,EAAoB;AACnBD,IAAAA,IAAI,GAAGpB,SAAS,CAACK,MAAD,EAASE,MAAM,CAACc,OAAhB,EAAyBJ,UAAzB,CAAhB;AACAG,IAAAA,IAAI,CAACf,MAAL,CAAYS,IAAZ,GAAmBP,MAAM,CAACc,OAA1B;AACA,GAHD,MAGO;AACND,IAAAA,IAAI,GAAGtB,MAAM,CAACO,MAAD,EAASE,MAAM,CAACO,IAAhB,EAAsBG,UAAtB,CAAb;AACAG,IAAAA,IAAI,CAACf,MAAL,CAAYS,IAAZ,GAAmBP,MAAM,CAACO,IAA1B;AACA;;AACD,SAAOM,IAAP;AACA;;AAEDE,MAAM,CAACC,OAAP,GAAiBR,KAAjB","sourcesContent":["\"use strict\";\n\nconst parser = require(\"./parser\");\nconst processor = require(\"./processor\");\nconst getLang = require(\"./get-lang\");\nconst normalOpts = require(\"./normal-opts\");\n\nfunction getSyntax (opts, source) {\n\tconst rules = opts.syntax && opts.syntax.config && opts.syntax.config.rules;\n\tconst file = opts.from || \"\";\n\treturn (rules && rules.find(\n\t\trule => rule.test.test ? rule.test.test(file) : rule.test(file, source)\n\t)) || getLang(file, source) || {\n\t\tlang: \"css\",\n\t};\n}\n\nfunction parse (source, opts) {\n\tsource = source.toString();\n\topts = normalOpts(opts, this);\n\tconst syntax = getSyntax(opts, source);\n\tconst syntaxOpts = Object.assign({}, opts, syntax.opts);\n\tlet root;\n\tif (syntax.extract) {\n\t\troot = processor(source, syntax.extract, syntaxOpts);\n\t\troot.source.lang = syntax.extract;\n\t} else {\n\t\troot = parser(source, syntax.lang, syntaxOpts);\n\t\troot.source.lang = syntax.lang;\n\t}\n\treturn root;\n}\n\nmodule.exports = parse;\n"]},"metadata":{},"sourceType":"script"}
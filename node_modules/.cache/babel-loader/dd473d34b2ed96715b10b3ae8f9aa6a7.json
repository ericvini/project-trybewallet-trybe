{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction read(path, settings) {\n  const lstat = settings.fs.lstatSync(path);\n\n  if (!lstat.isSymbolicLink() || !settings.followSymbolicLink) {\n    return lstat;\n  }\n\n  try {\n    const stat = settings.fs.statSync(path);\n\n    if (settings.markSymbolicLink) {\n      stat.isSymbolicLink = () => true;\n    }\n\n    return stat;\n  } catch (error) {\n    if (!settings.throwErrorOnBrokenSymbolicLink) {\n      return lstat;\n    }\n\n    throw error;\n  }\n}\n\nexports.read = read;","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/node_modules/@nodelib/fs.stat/out/providers/sync.js"],"names":["Object","defineProperty","exports","value","read","path","settings","lstat","fs","lstatSync","isSymbolicLink","followSymbolicLink","stat","statSync","markSymbolicLink","error","throwErrorOnBrokenSymbolicLink"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,SAASC,IAAT,CAAcC,IAAd,EAAoBC,QAApB,EAA8B;AAC1B,QAAMC,KAAK,GAAGD,QAAQ,CAACE,EAAT,CAAYC,SAAZ,CAAsBJ,IAAtB,CAAd;;AACA,MAAI,CAACE,KAAK,CAACG,cAAN,EAAD,IAA2B,CAACJ,QAAQ,CAACK,kBAAzC,EAA6D;AACzD,WAAOJ,KAAP;AACH;;AACD,MAAI;AACA,UAAMK,IAAI,GAAGN,QAAQ,CAACE,EAAT,CAAYK,QAAZ,CAAqBR,IAArB,CAAb;;AACA,QAAIC,QAAQ,CAACQ,gBAAb,EAA+B;AAC3BF,MAAAA,IAAI,CAACF,cAAL,GAAsB,MAAM,IAA5B;AACH;;AACD,WAAOE,IAAP;AACH,GAND,CAOA,OAAOG,KAAP,EAAc;AACV,QAAI,CAACT,QAAQ,CAACU,8BAAd,EAA8C;AAC1C,aAAOT,KAAP;AACH;;AACD,UAAMQ,KAAN;AACH;AACJ;;AACDb,OAAO,CAACE,IAAR,GAAeA,IAAf","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction read(path, settings) {\r\n    const lstat = settings.fs.lstatSync(path);\r\n    if (!lstat.isSymbolicLink() || !settings.followSymbolicLink) {\r\n        return lstat;\r\n    }\r\n    try {\r\n        const stat = settings.fs.statSync(path);\r\n        if (settings.markSymbolicLink) {\r\n            stat.isSymbolicLink = () => true;\r\n        }\r\n        return stat;\r\n    }\r\n    catch (error) {\r\n        if (!settings.throwErrorOnBrokenSymbolicLink) {\r\n            return lstat;\r\n        }\r\n        throw error;\r\n    }\r\n}\r\nexports.read = read;\r\n"]},"metadata":{},"sourceType":"script"}
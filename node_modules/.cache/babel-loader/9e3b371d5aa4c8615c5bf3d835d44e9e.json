{"ast":null,"code":"'use strict'; // Try to get file ignorer from '.stylelintignore'\n\nconst fs = require('fs');\n\nconst path = require('path');\n\nconst {\n  default: ignore\n} = require('ignore');\n\nconst DEFAULT_IGNORE_FILENAME = '.stylelintignore';\nconst FILE_NOT_FOUND_ERROR_CODE = 'ENOENT';\n/** @typedef {import('stylelint').StylelintStandaloneOptions} StylelintOptions */\n\n/**\n * @param {StylelintOptions} options\n * @return {import('ignore').Ignore}\n */\n\nmodule.exports = function (options) {\n  const ignoreFilePath = options.ignorePath || DEFAULT_IGNORE_FILENAME;\n  const absoluteIgnoreFilePath = path.isAbsolute(ignoreFilePath) ? ignoreFilePath : path.resolve(process.cwd(), ignoreFilePath);\n  let ignoreText = '';\n\n  try {\n    ignoreText = fs.readFileSync(absoluteIgnoreFilePath, 'utf8');\n  } catch (readError) {\n    if (readError.code !== FILE_NOT_FOUND_ERROR_CODE) throw readError;\n  }\n\n  const ignorePattern = options.ignorePattern || [];\n  const ignorer = ignore().add(ignoreText).add(ignorePattern);\n  return ignorer;\n};","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/lib/utils/getFileIgnorer.js"],"names":["fs","require","path","default","ignore","DEFAULT_IGNORE_FILENAME","FILE_NOT_FOUND_ERROR_CODE","module","exports","options","ignoreFilePath","ignorePath","absoluteIgnoreFilePath","isAbsolute","resolve","process","cwd","ignoreText","readFileSync","readError","code","ignorePattern","ignorer","add"],"mappings":"AAAA,a,CACA;;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAM;AAAEE,EAAAA,OAAO,EAAEC;AAAX,IAAsBH,OAAO,CAAC,QAAD,CAAnC;;AAEA,MAAMI,uBAAuB,GAAG,kBAAhC;AACA,MAAMC,yBAAyB,GAAG,QAAlC;AAEA;;AAEA;AACA;AACA;AACA;;AACAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,OAAV,EAAmB;AACnC,QAAMC,cAAc,GAAGD,OAAO,CAACE,UAAR,IAAsBN,uBAA7C;AACA,QAAMO,sBAAsB,GAAGV,IAAI,CAACW,UAAL,CAAgBH,cAAhB,IAC5BA,cAD4B,GAE5BR,IAAI,CAACY,OAAL,CAAaC,OAAO,CAACC,GAAR,EAAb,EAA4BN,cAA5B,CAFH;AAGA,MAAIO,UAAU,GAAG,EAAjB;;AAEA,MAAI;AACHA,IAAAA,UAAU,GAAGjB,EAAE,CAACkB,YAAH,CAAgBN,sBAAhB,EAAwC,MAAxC,CAAb;AACA,GAFD,CAEE,OAAOO,SAAP,EAAkB;AACnB,QAAIA,SAAS,CAACC,IAAV,KAAmBd,yBAAvB,EAAkD,MAAMa,SAAN;AAClD;;AAED,QAAME,aAAa,GAAGZ,OAAO,CAACY,aAAR,IAAyB,EAA/C;AACA,QAAMC,OAAO,GAAGlB,MAAM,GAAGmB,GAAT,CAAaN,UAAb,EAAyBM,GAAzB,CAA6BF,aAA7B,CAAhB;AAEA,SAAOC,OAAP;AACA,CAjBD","sourcesContent":["'use strict';\n// Try to get file ignorer from '.stylelintignore'\n\nconst fs = require('fs');\nconst path = require('path');\nconst { default: ignore } = require('ignore');\n\nconst DEFAULT_IGNORE_FILENAME = '.stylelintignore';\nconst FILE_NOT_FOUND_ERROR_CODE = 'ENOENT';\n\n/** @typedef {import('stylelint').StylelintStandaloneOptions} StylelintOptions */\n\n/**\n * @param {StylelintOptions} options\n * @return {import('ignore').Ignore}\n */\nmodule.exports = function (options) {\n\tconst ignoreFilePath = options.ignorePath || DEFAULT_IGNORE_FILENAME;\n\tconst absoluteIgnoreFilePath = path.isAbsolute(ignoreFilePath)\n\t\t? ignoreFilePath\n\t\t: path.resolve(process.cwd(), ignoreFilePath);\n\tlet ignoreText = '';\n\n\ttry {\n\t\tignoreText = fs.readFileSync(absoluteIgnoreFilePath, 'utf8');\n\t} catch (readError) {\n\t\tif (readError.code !== FILE_NOT_FOUND_ERROR_CODE) throw readError;\n\t}\n\n\tconst ignorePattern = options.ignorePattern || [];\n\tconst ignorer = ignore().add(ignoreText).add(ignorePattern);\n\n\treturn ignorer;\n};\n"]},"metadata":{},"sourceType":"script"}
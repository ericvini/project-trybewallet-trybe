{"ast":null,"code":"// @ts-nocheck\n'use strict';\n\nconst _ = require('lodash');\n\nconst isCustomProperty = require('../../utils/isCustomProperty');\n\nconst report = require('../../utils/report');\n\nconst ruleMessages = require('../../utils/ruleMessages');\n\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'custom-property-pattern';\nconst messages = ruleMessages(ruleName, {\n  expected: pattern => `Expected custom property name to match pattern \"${pattern}\"`\n});\n\nfunction rule(pattern) {\n  return (root, result) => {\n    const validOptions = validateOptions(result, ruleName, {\n      actual: pattern,\n      possible: [_.isRegExp, _.isString]\n    });\n\n    if (!validOptions) {\n      return;\n    }\n\n    const regexpPattern = _.isString(pattern) ? new RegExp(pattern) : pattern;\n    root.walkDecls(decl => {\n      const prop = decl.prop;\n\n      if (!isCustomProperty(prop)) {\n        return;\n      }\n\n      if (regexpPattern.test(prop.slice(2))) {\n        return;\n      }\n\n      report({\n        message: messages.expected(pattern),\n        node: decl,\n        result,\n        ruleName\n      });\n    });\n  };\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nmodule.exports = rule;","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/lib/rules/custom-property-pattern/index.js"],"names":["_","require","isCustomProperty","report","ruleMessages","validateOptions","ruleName","messages","expected","pattern","rule","root","result","validOptions","actual","possible","isRegExp","isString","regexpPattern","RegExp","walkDecls","decl","prop","test","slice","message","node","module","exports"],"mappings":"AAAA;AAEA;;AAEA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AACA,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,8BAAD,CAAhC;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,oBAAD,CAAtB;;AACA,MAAMG,YAAY,GAAGH,OAAO,CAAC,0BAAD,CAA5B;;AACA,MAAMI,eAAe,GAAGJ,OAAO,CAAC,6BAAD,CAA/B;;AAEA,MAAMK,QAAQ,GAAG,yBAAjB;AAEA,MAAMC,QAAQ,GAAGH,YAAY,CAACE,QAAD,EAAW;AACvCE,EAAAA,QAAQ,EAAGC,OAAD,IAAc,mDAAkDA,OAAQ;AAD3C,CAAX,CAA7B;;AAIA,SAASC,IAAT,CAAcD,OAAd,EAAuB;AACtB,SAAO,CAACE,IAAD,EAAOC,MAAP,KAAkB;AACxB,UAAMC,YAAY,GAAGR,eAAe,CAACO,MAAD,EAASN,QAAT,EAAmB;AACtDQ,MAAAA,MAAM,EAAEL,OAD8C;AAEtDM,MAAAA,QAAQ,EAAE,CAACf,CAAC,CAACgB,QAAH,EAAahB,CAAC,CAACiB,QAAf;AAF4C,KAAnB,CAApC;;AAKA,QAAI,CAACJ,YAAL,EAAmB;AAClB;AACA;;AAED,UAAMK,aAAa,GAAGlB,CAAC,CAACiB,QAAF,CAAWR,OAAX,IAAsB,IAAIU,MAAJ,CAAWV,OAAX,CAAtB,GAA4CA,OAAlE;AAEAE,IAAAA,IAAI,CAACS,SAAL,CAAgBC,IAAD,IAAU;AACxB,YAAMC,IAAI,GAAGD,IAAI,CAACC,IAAlB;;AAEA,UAAI,CAACpB,gBAAgB,CAACoB,IAAD,CAArB,EAA6B;AAC5B;AACA;;AAED,UAAIJ,aAAa,CAACK,IAAd,CAAmBD,IAAI,CAACE,KAAL,CAAW,CAAX,CAAnB,CAAJ,EAAuC;AACtC;AACA;;AAEDrB,MAAAA,MAAM,CAAC;AACNsB,QAAAA,OAAO,EAAElB,QAAQ,CAACC,QAAT,CAAkBC,OAAlB,CADH;AAENiB,QAAAA,IAAI,EAAEL,IAFA;AAGNT,QAAAA,MAHM;AAINN,QAAAA;AAJM,OAAD,CAAN;AAMA,KAjBD;AAkBA,GA9BD;AA+BA;;AAEDI,IAAI,CAACJ,QAAL,GAAgBA,QAAhB;AACAI,IAAI,CAACH,QAAL,GAAgBA,QAAhB;AACAoB,MAAM,CAACC,OAAP,GAAiBlB,IAAjB","sourcesContent":["// @ts-nocheck\n\n'use strict';\n\nconst _ = require('lodash');\nconst isCustomProperty = require('../../utils/isCustomProperty');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'custom-property-pattern';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (pattern) => `Expected custom property name to match pattern \"${pattern}\"`,\n});\n\nfunction rule(pattern) {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: pattern,\n\t\t\tpossible: [_.isRegExp, _.isString],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst regexpPattern = _.isString(pattern) ? new RegExp(pattern) : pattern;\n\n\t\troot.walkDecls((decl) => {\n\t\t\tconst prop = decl.prop;\n\n\t\t\tif (!isCustomProperty(prop)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (regexpPattern.test(prop.slice(2))) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treport({\n\t\t\t\tmessage: messages.expected(pattern),\n\t\t\t\tnode: decl,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t});\n\t\t});\n\t};\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nmodule.exports = rule;\n"]},"metadata":{},"sourceType":"script"}
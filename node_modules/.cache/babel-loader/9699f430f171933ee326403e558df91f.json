{"ast":null,"code":"// @ts-nocheck\n'use strict';\n\nconst _ = require('lodash');\n\nconst eachDeclarationBlock = require('../../utils/eachDeclarationBlock');\n\nconst isCustomProperty = require('../../utils/isCustomProperty');\n\nconst isStandardSyntaxProperty = require('../../utils/isStandardSyntaxProperty');\n\nconst optionsMatches = require('../../utils/optionsMatches');\n\nconst report = require('../../utils/report');\n\nconst ruleMessages = require('../../utils/ruleMessages');\n\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'declaration-block-no-duplicate-properties';\nconst messages = ruleMessages(ruleName, {\n  rejected: property => `Unexpected duplicate \"${property}\"`\n});\n\nfunction rule(on, options) {\n  return (root, result) => {\n    const validOptions = validateOptions(result, ruleName, {\n      actual: on\n    }, {\n      actual: options,\n      possible: {\n        ignore: ['consecutive-duplicates', 'consecutive-duplicates-with-different-values'],\n        ignoreProperties: [_.isString]\n      },\n      optional: true\n    });\n\n    if (!validOptions) {\n      return;\n    }\n\n    eachDeclarationBlock(root, eachDecl => {\n      const decls = [];\n      const values = [];\n      eachDecl(decl => {\n        const prop = decl.prop;\n        const value = decl.value;\n\n        if (!isStandardSyntaxProperty(prop)) {\n          return;\n        }\n\n        if (isCustomProperty(prop)) {\n          return;\n        } // Return early if the property is to be ignored\n\n\n        if (optionsMatches(options, 'ignoreProperties', prop)) {\n          return;\n        } // Ignore the src property as commonly duplicated in at-fontface\n\n\n        if (prop.toLowerCase() === 'src') {\n          return;\n        }\n\n        const indexDuplicate = decls.indexOf(prop.toLowerCase());\n\n        if (indexDuplicate !== -1) {\n          if (optionsMatches(options, 'ignore', 'consecutive-duplicates-with-different-values')) {\n            // if duplicates are not consecutive\n            if (indexDuplicate !== decls.length - 1) {\n              report({\n                message: messages.rejected(prop),\n                node: decl,\n                result,\n                ruleName\n              });\n              return;\n            } // if values of consecutive duplicates are equal\n\n\n            if (value === values[indexDuplicate]) {\n              report({\n                message: messages.rejected(value),\n                node: decl,\n                result,\n                ruleName\n              });\n              return;\n            }\n\n            return;\n          }\n\n          if (optionsMatches(options, 'ignore', 'consecutive-duplicates') && indexDuplicate === decls.length - 1) {\n            return;\n          }\n\n          report({\n            message: messages.rejected(prop),\n            node: decl,\n            result,\n            ruleName\n          });\n        }\n\n        decls.push(prop.toLowerCase());\n        values.push(value.toLowerCase());\n      });\n    });\n  };\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nmodule.exports = rule;","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/lib/rules/declaration-block-no-duplicate-properties/index.js"],"names":["_","require","eachDeclarationBlock","isCustomProperty","isStandardSyntaxProperty","optionsMatches","report","ruleMessages","validateOptions","ruleName","messages","rejected","property","rule","on","options","root","result","validOptions","actual","possible","ignore","ignoreProperties","isString","optional","eachDecl","decls","values","decl","prop","value","toLowerCase","indexDuplicate","indexOf","length","message","node","push","module","exports"],"mappings":"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","sourcesContent":["// @ts-nocheck\n\n'use strict';\n\nconst _ = require('lodash');\nconst eachDeclarationBlock = require('../../utils/eachDeclarationBlock');\nconst isCustomProperty = require('../../utils/isCustomProperty');\nconst isStandardSyntaxProperty = require('../../utils/isStandardSyntaxProperty');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'declaration-block-no-duplicate-properties';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (property) => `Unexpected duplicate \"${property}\"`,\n});\n\nfunction rule(on, options) {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{ actual: on },\n\t\t\t{\n\t\t\t\tactual: options,\n\t\t\t\tpossible: {\n\t\t\t\t\tignore: ['consecutive-duplicates', 'consecutive-duplicates-with-different-values'],\n\t\t\t\t\tignoreProperties: [_.isString],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\teachDeclarationBlock(root, (eachDecl) => {\n\t\t\tconst decls = [];\n\t\t\tconst values = [];\n\n\t\t\teachDecl((decl) => {\n\t\t\t\tconst prop = decl.prop;\n\t\t\t\tconst value = decl.value;\n\n\t\t\t\tif (!isStandardSyntaxProperty(prop)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (isCustomProperty(prop)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Return early if the property is to be ignored\n\t\t\t\tif (optionsMatches(options, 'ignoreProperties', prop)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Ignore the src property as commonly duplicated in at-fontface\n\t\t\t\tif (prop.toLowerCase() === 'src') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst indexDuplicate = decls.indexOf(prop.toLowerCase());\n\n\t\t\t\tif (indexDuplicate !== -1) {\n\t\t\t\t\tif (optionsMatches(options, 'ignore', 'consecutive-duplicates-with-different-values')) {\n\t\t\t\t\t\t// if duplicates are not consecutive\n\t\t\t\t\t\tif (indexDuplicate !== decls.length - 1) {\n\t\t\t\t\t\t\treport({\n\t\t\t\t\t\t\t\tmessage: messages.rejected(prop),\n\t\t\t\t\t\t\t\tnode: decl,\n\t\t\t\t\t\t\t\tresult,\n\t\t\t\t\t\t\t\truleName,\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// if values of consecutive duplicates are equal\n\t\t\t\t\t\tif (value === values[indexDuplicate]) {\n\t\t\t\t\t\t\treport({\n\t\t\t\t\t\t\t\tmessage: messages.rejected(value),\n\t\t\t\t\t\t\t\tnode: decl,\n\t\t\t\t\t\t\t\tresult,\n\t\t\t\t\t\t\t\truleName,\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\toptionsMatches(options, 'ignore', 'consecutive-duplicates') &&\n\t\t\t\t\t\tindexDuplicate === decls.length - 1\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: messages.rejected(prop),\n\t\t\t\t\t\tnode: decl,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tdecls.push(prop.toLowerCase());\n\t\t\t\tvalues.push(value.toLowerCase());\n\t\t\t});\n\t\t});\n\t};\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nmodule.exports = rule;\n"]},"metadata":{},"sourceType":"script"}
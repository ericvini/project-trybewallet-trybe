{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _stringWidth = _interopRequireDefault(require(\"string-width\"));\n\nvar _alignString = _interopRequireDefault(require(\"./alignString\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * @param {table~row[]} rows\n * @param {object} config\n * @returns {table~row[]}\n */\n\n\nconst alignTableData = (rows, config) => {\n  return rows.map(cells => {\n    return cells.map((value, index1) => {\n      const column = config.columns[index1];\n\n      if ((0, _stringWidth.default)(value) === column.width) {\n        return value;\n      } else {\n        return (0, _alignString.default)(value, column.width, column.alignment);\n      }\n    });\n  });\n};\n\nvar _default = alignTableData;\nexports.default = _default;","map":{"version":3,"sources":["../src/alignTableData.js"],"names":["rows","config","cells","column"],"mappings":";;;;;;;AAAA,IAAA,YAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,eAAA,CAAA,CAAA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;wBACgBA,I,EAAMC,M,KAAW;AAC/B,SAAO,IAAI,CAAJ,GAAA,CAAUC,KAAD,IAAW;AACzB,WAAO,KAAK,CAAL,GAAA,CAAU,CAAA,KAAA,EAAA,MAAA,KAAmB;AAClC,YAAMC,MAAM,GAAGF,MAAM,CAANA,OAAAA,CAAf,MAAeA,CAAf;;AAEA,UAAI,CAAA,GAAA,YAAA,CAAA,OAAA,EAAA,KAAA,MAAuBE,MAAM,CAAjC,KAAA,EAAyC;AACvC,eAAA,KAAA;AADF,OAAA,MAEO;AACL,eAAO,CAAA,GAAA,YAAA,CAAA,OAAA,EAAA,KAAA,EAAmBA,MAAM,CAAzB,KAAA,EAAiCA,MAAM,CAA9C,SAAO,CAAP;AACD;AAPH,KAAO,CAAP;AADF,GAAO,CAAP","sourcesContent":["import stringWidth from 'string-width';\nimport alignString from './alignString';\n\n/**\n * @param {table~row[]} rows\n * @param {object} config\n * @returns {table~row[]}\n */\nexport default (rows, config) => {\n  return rows.map((cells) => {\n    return cells.map((value, index1) => {\n      const column = config.columns[index1];\n\n      if (stringWidth(value) === column.width) {\n        return value;\n      } else {\n        return alignString(value, column.width, column.alignment);\n      }\n    });\n  });\n};\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"// @ts-nocheck\n'use strict';\n\nconst hasBlock = require('../../utils/hasBlock');\n\nconst report = require('../../utils/report');\n\nconst ruleMessages = require('../../utils/ruleMessages');\n\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'declaration-block-trailing-semicolon';\nconst messages = ruleMessages(ruleName, {\n  expected: 'Expected a trailing semicolon',\n  rejected: 'Unexpected trailing semicolon'\n});\n\nfunction rule(expectation, _, context) {\n  return (root, result) => {\n    const validOptions = validateOptions(result, ruleName, {\n      actual: expectation,\n      possible: ['always', 'never']\n    });\n\n    if (!validOptions) {\n      return;\n    }\n\n    root.walkAtRules(atRule => {\n      if (atRule.parent === root) {\n        return;\n      }\n\n      if (atRule !== atRule.parent.last) {\n        return;\n      }\n\n      if (hasBlock(atRule)) {\n        return;\n      }\n\n      checkLastNode(atRule);\n    });\n    root.walkDecls(decl => {\n      if (decl.parent.type === 'object') {\n        return;\n      }\n\n      if (decl !== decl.parent.last) {\n        return;\n      }\n\n      checkLastNode(decl);\n    });\n\n    function checkLastNode(node) {\n      let message;\n\n      if (expectation === 'always') {\n        if (node.parent.raws.semicolon) {\n          return;\n        } // auto-fix\n\n\n        if (context.fix) {\n          node.parent.raws.semicolon = true;\n\n          if (node.type === 'atrule') {\n            node.raws.between = '';\n            node.parent.raws.after = ' ';\n          }\n\n          return;\n        }\n\n        message = messages.expected;\n      } else if (expectation === 'never') {\n        if (!node.parent.raws.semicolon) {\n          return;\n        } // auto-fix\n\n\n        if (context.fix) {\n          node.parent.raws.semicolon = false;\n          return;\n        }\n\n        message = messages.rejected;\n      }\n\n      report({\n        message,\n        node,\n        index: node.toString().trim().length - 1,\n        result,\n        ruleName\n      });\n    }\n  };\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nmodule.exports = rule;","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/lib/rules/declaration-block-trailing-semicolon/index.js"],"names":["hasBlock","require","report","ruleMessages","validateOptions","ruleName","messages","expected","rejected","rule","expectation","_","context","root","result","validOptions","actual","possible","walkAtRules","atRule","parent","last","checkLastNode","walkDecls","decl","type","node","message","raws","semicolon","fix","between","after","index","toString","trim","length","module","exports"],"mappings":"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","sourcesContent":["// @ts-nocheck\n\n'use strict';\n\nconst hasBlock = require('../../utils/hasBlock');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'declaration-block-trailing-semicolon';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: 'Expected a trailing semicolon',\n\trejected: 'Unexpected trailing semicolon',\n});\n\nfunction rule(expectation, _, context) {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: expectation,\n\t\t\tpossible: ['always', 'never'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkAtRules((atRule) => {\n\t\t\tif (atRule.parent === root) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (atRule !== atRule.parent.last) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (hasBlock(atRule)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcheckLastNode(atRule);\n\t\t});\n\n\t\troot.walkDecls((decl) => {\n\t\t\tif (decl.parent.type === 'object') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (decl !== decl.parent.last) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcheckLastNode(decl);\n\t\t});\n\n\t\tfunction checkLastNode(node) {\n\t\t\tlet message;\n\n\t\t\tif (expectation === 'always') {\n\t\t\t\tif (node.parent.raws.semicolon) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// auto-fix\n\t\t\t\tif (context.fix) {\n\t\t\t\t\tnode.parent.raws.semicolon = true;\n\n\t\t\t\t\tif (node.type === 'atrule') {\n\t\t\t\t\t\tnode.raws.between = '';\n\t\t\t\t\t\tnode.parent.raws.after = ' ';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tmessage = messages.expected;\n\t\t\t} else if (expectation === 'never') {\n\t\t\t\tif (!node.parent.raws.semicolon) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// auto-fix\n\t\t\t\tif (context.fix) {\n\t\t\t\t\tnode.parent.raws.semicolon = false;\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tmessage = messages.rejected;\n\t\t\t}\n\n\t\t\treport({\n\t\t\t\tmessage,\n\t\t\t\tnode,\n\t\t\t\tindex: node.toString().trim().length - 1,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t});\n\t\t}\n\t};\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nmodule.exports = rule;\n"]},"metadata":{},"sourceType":"script"}
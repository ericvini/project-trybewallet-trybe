{"ast":null,"code":"'use strict';\n\nconst _ = require('lodash');\n/**\n * @template T\n * @typedef {(i: T) => boolean} Validator\n */\n\n/**\n * Check whether the variable is an object and all it's properties are arrays of string values:\n *\n * ignoreProperties = {\n *   value1: [\"item11\", \"item12\", \"item13\"],\n *   value2: [\"item21\", \"item22\", \"item23\"],\n *   value3: [\"item31\", \"item32\", \"item33\"],\n * }\n * @template T\n * @param {Validator<T>|Validator<T>[]} validator\n * @returns {(value: {[k: any]: T|T[]}) => boolean}\n */\n\n\nmodule.exports = validator => value => {\n  if (!_.isPlainObject(value)) {\n    return false;\n  } // TODO: Issue #4985\n  // eslint-disable-next-line no-shadow\n\n\n  return Object.values(value).every(value => {\n    if (!Array.isArray(value)) {\n      return false;\n    } // Make sure the array items are strings\n\n\n    return value.every(item => {\n      if (Array.isArray(validator)) {\n        return validator.some(v => v(item));\n      }\n\n      return validator(item);\n    });\n  });\n};","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/lib/utils/validateObjectWithArrayProps.js"],"names":["_","require","module","exports","validator","value","isPlainObject","Object","values","every","Array","isArray","item","some","v"],"mappings":"AAAA;;AAEA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAkBC,SAAD,IAAgBC,KAAD,IAAW;AAC1C,MAAI,CAACL,CAAC,CAACM,aAAF,CAAgBD,KAAhB,CAAL,EAA6B;AAC5B,WAAO,KAAP;AACA,GAHyC,CAK1C;AACA;;;AACA,SAAOE,MAAM,CAACC,MAAP,CAAcH,KAAd,EAAqBI,KAArB,CAA4BJ,KAAD,IAAW;AAC5C,QAAI,CAACK,KAAK,CAACC,OAAN,CAAcN,KAAd,CAAL,EAA2B;AAC1B,aAAO,KAAP;AACA,KAH2C,CAK5C;;;AACA,WAAOA,KAAK,CAACI,KAAN,CAAaG,IAAD,IAAU;AAC5B,UAAIF,KAAK,CAACC,OAAN,CAAcP,SAAd,CAAJ,EAA8B;AAC7B,eAAOA,SAAS,CAACS,IAAV,CAAgBC,CAAD,IAAOA,CAAC,CAACF,IAAD,CAAvB,CAAP;AACA;;AAED,aAAOR,SAAS,CAACQ,IAAD,CAAhB;AACA,KANM,CAAP;AAOA,GAbM,CAAP;AAcA,CArBD","sourcesContent":["'use strict';\n\nconst _ = require('lodash');\n\n/**\n * @template T\n * @typedef {(i: T) => boolean} Validator\n */\n\n/**\n * Check whether the variable is an object and all it's properties are arrays of string values:\n *\n * ignoreProperties = {\n *   value1: [\"item11\", \"item12\", \"item13\"],\n *   value2: [\"item21\", \"item22\", \"item23\"],\n *   value3: [\"item31\", \"item32\", \"item33\"],\n * }\n * @template T\n * @param {Validator<T>|Validator<T>[]} validator\n * @returns {(value: {[k: any]: T|T[]}) => boolean}\n */\nmodule.exports = (validator) => (value) => {\n\tif (!_.isPlainObject(value)) {\n\t\treturn false;\n\t}\n\n\t// TODO: Issue #4985\n\t// eslint-disable-next-line no-shadow\n\treturn Object.values(value).every((value) => {\n\t\tif (!Array.isArray(value)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Make sure the array items are strings\n\t\treturn value.every((item) => {\n\t\t\tif (Array.isArray(validator)) {\n\t\t\t\treturn validator.some((v) => v(item));\n\t\t\t}\n\n\t\t\treturn validator(item);\n\t\t});\n\t});\n};\n"]},"metadata":{},"sourceType":"script"}
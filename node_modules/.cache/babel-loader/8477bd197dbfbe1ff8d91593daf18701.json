{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _cloneDeep2 = _interopRequireDefault(require(\"lodash/cloneDeep\"));\n\nvar _isUndefined2 = _interopRequireDefault(require(\"lodash/isUndefined\"));\n\nvar _times2 = _interopRequireDefault(require(\"lodash/times\"));\n\nvar _getBorderCharacters = _interopRequireDefault(require(\"./getBorderCharacters\"));\n\nvar _validateConfig = _interopRequireDefault(require(\"./validateConfig\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Merges user provided border characters with the default border (\"honeywell\") characters.\n *\n * @param {object} border\n * @returns {object}\n */\n\n\nconst makeBorder = (border = {}) => {\n  return Object.assign({}, (0, _getBorderCharacters.default)('honeywell'), border);\n};\n/**\n * Creates a configuration for every column using default\n * values for the missing configuration properties.\n *\n * @param {number} columnCount\n * @param {object} columns\n * @param {object} columnDefault\n * @returns {object}\n */\n\n\nconst makeColumns = (columnCount, columns = {}, columnDefault = {}) => {\n  (0, _times2.default)(columnCount, index => {\n    if ((0, _isUndefined2.default)(columns[index])) {\n      columns[index] = {};\n    }\n\n    columns[index] = Object.assign({\n      alignment: 'left',\n      paddingLeft: 1,\n      paddingRight: 1,\n      truncate: Infinity,\n      wrapWord: false\n    }, columnDefault, columns[index]);\n  });\n  return columns;\n};\n/**\n * @typedef {object} columnConfig\n * @property {string} alignment\n * @property {number} width\n * @property {number} truncate\n * @property {number} paddingLeft\n * @property {number} paddingRight\n */\n\n/**\n * @typedef {object} streamConfig\n * @property {columnConfig} columnDefault\n * @property {object} border\n * @property {columnConfig[]}\n * @property {number} columnCount Number of columns in the table (required).\n */\n\n/**\n * Makes a new configuration object out of the userConfig object\n * using default values for the missing configuration properties.\n *\n * @param {streamConfig} userConfig\n * @returns {object}\n */\n\n\nconst makeStreamConfig = (userConfig = {}) => {\n  (0, _validateConfig.default)('streamConfig.json', userConfig);\n  const config = (0, _cloneDeep2.default)(userConfig);\n\n  if (!config.columnDefault || !config.columnDefault.width) {\n    throw new Error('Must provide config.columnDefault.width when creating a stream.');\n  }\n\n  if (!config.columnCount) {\n    throw new Error('Must provide config.columnCount.');\n  }\n\n  config.border = makeBorder(config.border);\n  config.columns = makeColumns(config.columnCount, config.columns, config.columnDefault);\n  return config;\n};\n\nvar _default = makeStreamConfig;\nexports.default = _default;","map":{"version":3,"sources":["../src/makeStreamConfig.js"],"names":["makeBorder","border","Object","makeColumns","columns","columnDefault","index","alignment","paddingLeft","paddingRight","truncate","wrapWord","userConfig","config"],"mappings":";;;;;;;;;;;;;AACA,IAAA,oBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,uBAAA,CAAA,CAAA;;AACA,IAAA,eAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,kBAAA,CAAA,CAAA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMA,UAAU,GAAG,CAACC,MAAM,GAAP,EAAA,KAAiB;AAClC,SAAOC,MAAM,CAANA,MAAAA,CAAAA,EAAAA,EAAkB,CAAA,GAAA,oBAAA,CAAA,OAAA,EAAlBA,WAAkB,CAAlBA,EAAP,MAAOA,CAAP;AADF,CAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,WAAW,GAAG,CAAA,WAAA,EAAcC,OAAO,GAArB,EAAA,EAA4BC,aAAa,GAAzC,EAAA,KAAmD;AACrE,GAAA,GAAA,OAAA,CAAA,OAAA,EAAA,WAAA,EAAsBC,KAAD,IAAW;AAC9B,QAAI,CAAA,GAAA,aAAA,CAAA,OAAA,EAAcF,OAAO,CAAzB,KAAyB,CAArB,CAAJ,EAAmC;AACjCA,MAAAA,OAAO,CAAPA,KAAO,CAAPA,GAAAA,EAAAA;AACD;;AAEDA,IAAAA,OAAO,CAAPA,KAAO,CAAPA,GAAiB,MAAM,CAAN,MAAA,CAAc;AAC7BG,MAAAA,SAAS,EADoB,MAAA;AAE7BC,MAAAA,WAAW,EAFkB,CAAA;AAG7BC,MAAAA,YAAY,EAHiB,CAAA;AAI7BC,MAAAA,QAAQ,EAJqB,QAAA;AAK7BC,MAAAA,QAAQ,EAAE;AALmB,KAAd,EAAA,aAAA,EAMCP,OAAO,CANzBA,KAMyB,CANR,CAAjBA;AALF,GAAA;AAcA,SAAA,OAAA;AAfF,CAAA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;0BACgBQ,UAAU,GAAG,E,KAAO;AAClC,GAAA,GAAA,eAAA,CAAA,OAAA,EAAA,mBAAA,EAAA,UAAA;AAEA,QAAMC,MAAM,GAAG,CAAA,GAAA,WAAA,CAAA,OAAA,EAAf,UAAe,CAAf;;AAEA,MAAI,CAACA,MAAM,CAAP,aAAA,IAAyB,CAACA,MAAM,CAANA,aAAAA,CAA9B,KAAA,EAA0D;AACxD,UAAM,IAAA,KAAA,CAAN,iEAAM,CAAN;AACD;;AAED,MAAI,CAACA,MAAM,CAAX,WAAA,EAAyB;AACvB,UAAM,IAAA,KAAA,CAAN,kCAAM,CAAN;AACD;;AAEDA,EAAAA,MAAM,CAANA,MAAAA,GAAgBb,UAAU,CAACa,MAAM,CAAjCA,MAA0B,CAA1BA;AACAA,EAAAA,MAAM,CAANA,OAAAA,GAAiBV,WAAW,CAACU,MAAM,CAAP,WAAA,EAAqBA,MAAM,CAA3B,OAAA,EAAqCA,MAAM,CAAvEA,aAA4B,CAA5BA;AAEA,SAAA,MAAA","sourcesContent":["import _ from 'lodash';\nimport getBorderCharacters from './getBorderCharacters';\nimport validateConfig from './validateConfig';\n\n/**\n * Merges user provided border characters with the default border (\"honeywell\") characters.\n *\n * @param {object} border\n * @returns {object}\n */\nconst makeBorder = (border = {}) => {\n  return Object.assign({}, getBorderCharacters('honeywell'), border);\n};\n\n/**\n * Creates a configuration for every column using default\n * values for the missing configuration properties.\n *\n * @param {number} columnCount\n * @param {object} columns\n * @param {object} columnDefault\n * @returns {object}\n */\nconst makeColumns = (columnCount, columns = {}, columnDefault = {}) => {\n  _.times(columnCount, (index) => {\n    if (_.isUndefined(columns[index])) {\n      columns[index] = {};\n    }\n\n    columns[index] = Object.assign({\n      alignment: 'left',\n      paddingLeft: 1,\n      paddingRight: 1,\n      truncate: Infinity,\n      wrapWord: false,\n    }, columnDefault, columns[index]);\n  });\n\n  return columns;\n};\n\n/**\n * @typedef {object} columnConfig\n * @property {string} alignment\n * @property {number} width\n * @property {number} truncate\n * @property {number} paddingLeft\n * @property {number} paddingRight\n */\n\n/**\n * @typedef {object} streamConfig\n * @property {columnConfig} columnDefault\n * @property {object} border\n * @property {columnConfig[]}\n * @property {number} columnCount Number of columns in the table (required).\n */\n\n/**\n * Makes a new configuration object out of the userConfig object\n * using default values for the missing configuration properties.\n *\n * @param {streamConfig} userConfig\n * @returns {object}\n */\nexport default (userConfig = {}) => {\n  validateConfig('streamConfig.json', userConfig);\n\n  const config = _.cloneDeep(userConfig);\n\n  if (!config.columnDefault || !config.columnDefault.width) {\n    throw new Error('Must provide config.columnDefault.width when creating a stream.');\n  }\n\n  if (!config.columnCount) {\n    throw new Error('Must provide config.columnCount.');\n  }\n\n  config.border = makeBorder(config.border);\n  config.columns = makeColumns(config.columnCount, config.columns, config.columnDefault);\n\n  return config;\n};\n"]},"metadata":{},"sourceType":"script"}
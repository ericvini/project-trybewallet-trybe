{"ast":null,"code":"'use strict';\n\nconst _ = require('lodash');\n\nconst createStylelint = require('./createStylelint');\n\nconst path = require('path');\n\nconst postcss = require('postcss'); //'block-no-empty': bool || Array\n\n\nmodule.exports = postcss.plugin('stylelint', (options = {}) => {\n  const tailoredOptions = options.rules ? {\n    config: options\n  } : options;\n  const stylelint = createStylelint(tailoredOptions);\n  return (root, result) => {\n    let filePath = options.from || _.get(root, 'source.input.file');\n\n    if (filePath !== undefined && !path.isAbsolute(filePath)) {\n      filePath = path.join(process.cwd(), filePath);\n    }\n\n    return stylelint._lintSource({\n      filePath,\n      existingPostcssResult: result\n    });\n  };\n});","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/lib/postcssPlugin.js"],"names":["_","require","createStylelint","path","postcss","module","exports","plugin","options","tailoredOptions","rules","config","stylelint","root","result","filePath","from","get","undefined","isAbsolute","join","process","cwd","_lintSource","existingPostcssResult"],"mappings":"AAAA;;AAEA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AACA,MAAMC,eAAe,GAAGD,OAAO,CAAC,mBAAD,CAA/B;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMG,OAAO,GAAGH,OAAO,CAAC,SAAD,CAAvB,C,CACA;;;AAEAI,MAAM,CAACC,OAAP,GAAiBF,OAAO,CAACG,MAAR,CAAe,WAAf,EAA4B,CAACC,OAAO,GAAG,EAAX,KAAkB;AAC9D,QAAMC,eAAe,GAAGD,OAAO,CAACE,KAAR,GAAgB;AAAEC,IAAAA,MAAM,EAAEH;AAAV,GAAhB,GAAsCA,OAA9D;AACA,QAAMI,SAAS,GAAGV,eAAe,CAACO,eAAD,CAAjC;AAEA,SAAO,CAACI,IAAD,EAAOC,MAAP,KAAkB;AACxB,QAAIC,QAAQ,GAAGP,OAAO,CAACQ,IAAR,IAAgBhB,CAAC,CAACiB,GAAF,CAAMJ,IAAN,EAAY,mBAAZ,CAA/B;;AAEA,QAAIE,QAAQ,KAAKG,SAAb,IAA0B,CAACf,IAAI,CAACgB,UAAL,CAAgBJ,QAAhB,CAA/B,EAA0D;AACzDA,MAAAA,QAAQ,GAAGZ,IAAI,CAACiB,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyBP,QAAzB,CAAX;AACA;;AAED,WAAOH,SAAS,CAACW,WAAV,CAAsB;AAC5BR,MAAAA,QAD4B;AAE5BS,MAAAA,qBAAqB,EAAEV;AAFK,KAAtB,CAAP;AAIA,GAXD;AAYA,CAhBgB,CAAjB","sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst createStylelint = require('./createStylelint');\nconst path = require('path');\nconst postcss = require('postcss');\n//'block-no-empty': bool || Array\n\nmodule.exports = postcss.plugin('stylelint', (options = {}) => {\n\tconst tailoredOptions = options.rules ? { config: options } : options;\n\tconst stylelint = createStylelint(tailoredOptions);\n\n\treturn (root, result) => {\n\t\tlet filePath = options.from || _.get(root, 'source.input.file');\n\n\t\tif (filePath !== undefined && !path.isAbsolute(filePath)) {\n\t\t\tfilePath = path.join(process.cwd(), filePath);\n\t\t}\n\n\t\treturn stylelint._lintSource({\n\t\t\tfilePath,\n\t\t\texistingPostcssResult: result,\n\t\t});\n\t};\n});\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nconst PostCssRoot = require(\"postcss/lib/root\");\n\nclass Document extends PostCssRoot {\n  toString(stringifier) {\n    return super.toString(stringifier || {\n      stringify: require(\"./stringify\")\n    });\n  }\n\n  each(callback) {\n    const result = this.nodes.map(node => node.each(callback));\n    return result.every(result => result !== false) && result.pop();\n  }\n\n  append() {\n    this.last.append.apply(this.last, Array.from(arguments));\n    return this;\n  }\n\n  prepend() {\n    this.first.prepend.apply(this.first, Array.from(arguments));\n    return this;\n  }\n\n  insertBefore(exist, add) {\n    exist.prepend(add);\n    return this;\n  }\n\n  insertAfter(exist, add) {\n    exist.append(add);\n    return this;\n  }\n\n}\n\nmodule.exports = Document;","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/postcss-syntax/document.js"],"names":["PostCssRoot","require","Document","toString","stringifier","stringify","each","callback","result","nodes","map","node","every","pop","append","last","apply","Array","from","arguments","prepend","first","insertBefore","exist","add","insertAfter","module","exports"],"mappings":"AAAA;;AACA,MAAMA,WAAW,GAAGC,OAAO,CAAC,kBAAD,CAA3B;;AACA,MAAMC,QAAN,SAAuBF,WAAvB,CAAmC;AAClCG,EAAAA,QAAQ,CAAEC,WAAF,EAAe;AACtB,WAAO,MAAMD,QAAN,CAAeC,WAAW,IAAI;AACpCC,MAAAA,SAAS,EAAEJ,OAAO,CAAC,aAAD;AADkB,KAA9B,CAAP;AAGA;;AAEDK,EAAAA,IAAI,CAAEC,QAAF,EAAY;AACf,UAAMC,MAAM,GAAG,KAAKC,KAAL,CAAWC,GAAX,CAAeC,IAAI,IAAIA,IAAI,CAACL,IAAL,CAAUC,QAAV,CAAvB,CAAf;AACA,WAAOC,MAAM,CAACI,KAAP,CAAaJ,MAAM,IAAIA,MAAM,KAAK,KAAlC,KAA4CA,MAAM,CAACK,GAAP,EAAnD;AACA;;AAEDC,EAAAA,MAAM,GAAI;AACT,SAAKC,IAAL,CAAUD,MAAV,CAAiBE,KAAjB,CACC,KAAKD,IADN,EAECE,KAAK,CAACC,IAAN,CAAWC,SAAX,CAFD;AAIA,WAAO,IAAP;AACA;;AAEDC,EAAAA,OAAO,GAAI;AACV,SAAKC,KAAL,CAAWD,OAAX,CAAmBJ,KAAnB,CACC,KAAKK,KADN,EAECJ,KAAK,CAACC,IAAN,CAAWC,SAAX,CAFD;AAIA,WAAO,IAAP;AACA;;AAEDG,EAAAA,YAAY,CAAEC,KAAF,EAASC,GAAT,EAAc;AACzBD,IAAAA,KAAK,CAACH,OAAN,CAAcI,GAAd;AACA,WAAO,IAAP;AACA;;AAEDC,EAAAA,WAAW,CAAEF,KAAF,EAASC,GAAT,EAAc;AACxBD,IAAAA,KAAK,CAACT,MAAN,CAAaU,GAAb;AACA,WAAO,IAAP;AACA;;AApCiC;;AAsCnCE,MAAM,CAACC,OAAP,GAAiBzB,QAAjB","sourcesContent":["\"use strict\";\nconst PostCssRoot = require(\"postcss/lib/root\");\nclass Document extends PostCssRoot {\n\ttoString (stringifier) {\n\t\treturn super.toString(stringifier || {\n\t\t\tstringify: require(\"./stringify\"),\n\t\t});\n\t}\n\n\teach (callback) {\n\t\tconst result = this.nodes.map(node => node.each(callback));\n\t\treturn result.every(result => result !== false) && result.pop();\n\t}\n\n\tappend () {\n\t\tthis.last.append.apply(\n\t\t\tthis.last,\n\t\t\tArray.from(arguments)\n\t\t);\n\t\treturn this;\n\t}\n\n\tprepend () {\n\t\tthis.first.prepend.apply(\n\t\t\tthis.first,\n\t\t\tArray.from(arguments)\n\t\t);\n\t\treturn this;\n\t}\n\n\tinsertBefore (exist, add) {\n\t\texist.prepend(add);\n\t\treturn this;\n\t}\n\n\tinsertAfter (exist, add) {\n\t\texist.append(add);\n\t\treturn this;\n\t}\n}\nmodule.exports = Document;\n"]},"metadata":{},"sourceType":"script"}
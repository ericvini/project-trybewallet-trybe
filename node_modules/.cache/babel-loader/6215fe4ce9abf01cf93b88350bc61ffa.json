{"ast":null,"code":"// @ts-nocheck\n'use strict';\n\nconst declarationValueIndex = require('../utils/declarationValueIndex');\n\nconst report = require('../utils/report');\n\nconst styleSearch = require('style-search');\n\nmodule.exports = function (opts) {\n  opts.root.walkDecls(decl => {\n    const indexOffset = declarationValueIndex(decl);\n    const declString = decl.toString();\n    const valueString = decl.toString().slice(indexOffset);\n\n    if (!valueString.includes('!')) {\n      return;\n    }\n\n    styleSearch({\n      source: valueString,\n      target: '!'\n    }, match => {\n      check(declString, match.startIndex + indexOffset, decl);\n    });\n  });\n\n  function check(source, index, node) {\n    opts.locationChecker({\n      source,\n      index,\n      err: m => {\n        if (opts.fix && opts.fix(node, index)) {\n          return;\n        }\n\n        report({\n          message: m,\n          node,\n          index,\n          result: opts.result,\n          ruleName: opts.checkedRuleName\n        });\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/lib/rules/declarationBangSpaceChecker.js"],"names":["declarationValueIndex","require","report","styleSearch","module","exports","opts","root","walkDecls","decl","indexOffset","declString","toString","valueString","slice","includes","source","target","match","check","startIndex","index","node","locationChecker","err","m","fix","message","result","ruleName","checkedRuleName"],"mappings":"AAAA;AAEA;;AAEA,MAAMA,qBAAqB,GAAGC,OAAO,CAAC,gCAAD,CAArC;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,iBAAD,CAAtB;;AACA,MAAME,WAAW,GAAGF,OAAO,CAAC,cAAD,CAA3B;;AAEAG,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAChCA,EAAAA,IAAI,CAACC,IAAL,CAAUC,SAAV,CAAqBC,IAAD,IAAU;AAC7B,UAAMC,WAAW,GAAGV,qBAAqB,CAACS,IAAD,CAAzC;AACA,UAAME,UAAU,GAAGF,IAAI,CAACG,QAAL,EAAnB;AACA,UAAMC,WAAW,GAAGJ,IAAI,CAACG,QAAL,GAAgBE,KAAhB,CAAsBJ,WAAtB,CAApB;;AAEA,QAAI,CAACG,WAAW,CAACE,QAAZ,CAAqB,GAArB,CAAL,EAAgC;AAC/B;AACA;;AAEDZ,IAAAA,WAAW,CAAC;AAAEa,MAAAA,MAAM,EAAEH,WAAV;AAAuBI,MAAAA,MAAM,EAAE;AAA/B,KAAD,EAAwCC,KAAD,IAAW;AAC5DC,MAAAA,KAAK,CAACR,UAAD,EAAaO,KAAK,CAACE,UAAN,GAAmBV,WAAhC,EAA6CD,IAA7C,CAAL;AACA,KAFU,CAAX;AAGA,GAZD;;AAcA,WAASU,KAAT,CAAeH,MAAf,EAAuBK,KAAvB,EAA8BC,IAA9B,EAAoC;AACnChB,IAAAA,IAAI,CAACiB,eAAL,CAAqB;AACpBP,MAAAA,MADoB;AAEpBK,MAAAA,KAFoB;AAGpBG,MAAAA,GAAG,EAAGC,CAAD,IAAO;AACX,YAAInB,IAAI,CAACoB,GAAL,IAAYpB,IAAI,CAACoB,GAAL,CAASJ,IAAT,EAAeD,KAAf,CAAhB,EAAuC;AACtC;AACA;;AAEDnB,QAAAA,MAAM,CAAC;AACNyB,UAAAA,OAAO,EAAEF,CADH;AAENH,UAAAA,IAFM;AAGND,UAAAA,KAHM;AAINO,UAAAA,MAAM,EAAEtB,IAAI,CAACsB,MAJP;AAKNC,UAAAA,QAAQ,EAAEvB,IAAI,CAACwB;AALT,SAAD,CAAN;AAOA;AAfmB,KAArB;AAiBA;AACD,CAlCD","sourcesContent":["// @ts-nocheck\n\n'use strict';\n\nconst declarationValueIndex = require('../utils/declarationValueIndex');\nconst report = require('../utils/report');\nconst styleSearch = require('style-search');\n\nmodule.exports = function (opts) {\n\topts.root.walkDecls((decl) => {\n\t\tconst indexOffset = declarationValueIndex(decl);\n\t\tconst declString = decl.toString();\n\t\tconst valueString = decl.toString().slice(indexOffset);\n\n\t\tif (!valueString.includes('!')) {\n\t\t\treturn;\n\t\t}\n\n\t\tstyleSearch({ source: valueString, target: '!' }, (match) => {\n\t\t\tcheck(declString, match.startIndex + indexOffset, decl);\n\t\t});\n\t});\n\n\tfunction check(source, index, node) {\n\t\topts.locationChecker({\n\t\t\tsource,\n\t\t\tindex,\n\t\t\terr: (m) => {\n\t\t\t\tif (opts.fix && opts.fix(node, index)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: m,\n\t\t\t\t\tnode,\n\t\t\t\t\tindex,\n\t\t\t\t\tresult: opts.result,\n\t\t\t\t\truleName: opts.checkedRuleName,\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}
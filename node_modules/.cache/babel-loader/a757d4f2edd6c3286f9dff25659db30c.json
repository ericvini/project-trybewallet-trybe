{"ast":null,"code":"var _jsxFileName = \"/home/eric/sd-07-project-trybewallet/src/pages/Login.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { login } from '../actions'; // Project based-@ThiagoPederzolli-Thx :)\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      authentication: false\n    };\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  handleEmailChange({\n    target\n  }) {\n    const {\n      value\n    } = target;\n    this.setState({\n      email: value\n    }, () => {\n      const {\n        email\n      } = this.state;\n      const regexEmail = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\n      const verifyEmail = email.match(regexEmail);\n\n      if (verifyEmail) {\n        this.setState({\n          authentication: true\n        });\n      } else {\n        this.setState({\n          authentication: false\n        });\n      }\n    });\n  }\n\n  handlePasswordChange({\n    target\n  }) {\n    const {\n      value\n    } = target;\n    this.setState({\n      password: value\n    });\n  }\n\n  render() {\n    const {\n      authentication,\n      email,\n      password\n    } = this.state;\n    const {\n      loggingin,\n      logged\n    } = this.props;\n    const numberCharacters = 6;\n\n    if (logged) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/carteira\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"email-input\",\n      onChange: event => this.handleEmailChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"password-input\",\n      onChange: event => this.handlePasswordChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      disabled: !authentication || password.length < numberCharacters,\n      type: \"button\",\n      onClick: () => loggingin(email),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, \"Entrar\"));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  loggingin: email => dispatch(login(email))\n});\n\nconst mapStateToProps = state => ({\n  logged: state.user.login\n});\n\nLogin.propTypes = {\n  loggingin: PropTypes.func.isRequired,\n  logged: PropTypes.bool.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/src/pages/Login.js"],"names":["React","PropTypes","connect","Redirect","login","Login","Component","constructor","state","email","password","authentication","handleEmailChange","bind","handlePasswordChange","target","value","setState","regexEmail","verifyEmail","match","render","loggingin","logged","props","numberCharacters","event","length","mapDispatchToProps","dispatch","mapStateToProps","user","propTypes","func","isRequired","bool"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { login } from '../actions';\n// Project based-@ThiagoPederzolli-Thx :)\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      email: '',\n      password: '',\n      authentication: false,\n    };\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  handleEmailChange({ target }) {\n    const { value } = target;\n    this.setState({ email: value }, () => {\n      const { email } = this.state;\n      const regexEmail = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\n      const verifyEmail = email.match(regexEmail);\n      if (verifyEmail) {\n        this.setState({ authentication: true });\n      } else {\n        this.setState({ authentication: false });\n      }\n    });\n  }\n\n  handlePasswordChange({ target }) {\n    const { value } = target;\n    this.setState({ password: value });\n  }\n\n  render() {\n    const { authentication, email, password } = this.state;\n    const { loggingin, logged } = this.props;\n    const numberCharacters = 6;\n\n    if (logged) {\n      return <Redirect to=\"/carteira\" />;\n    }\n    return (\n      <div>\n        <input\n          data-testid=\"email-input\"\n          onChange={ (event) => this.handleEmailChange(event) }\n        />\n        <input\n          data-testid=\"password-input\"\n          onChange={ (event) => this.handlePasswordChange(event) }\n        />\n        <button\n          disabled={ !authentication || password.length < numberCharacters }\n          type=\"button\"\n          onClick={ () => loggingin(email) }\n        >\n          Entrar\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  loggingin: (email) => dispatch(login(email)),\n});\n\nconst mapStateToProps = (state) => ({\n  logged: state.user.login,\n});\n\nLogin.propTypes = {\n  loggingin: PropTypes.func.isRequired,\n  logged: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"'use strict';\n/**\n * Given an object of violation messages, return another\n * that provides the same messages postfixed with the rule\n * that has been violated.\n *\n * @param {string} ruleName\n * @param {{[k: string]: string|Function}} messages - Object whose keys are message identifiers\n *   and values are either message strings or functions that return message strings\n * @return {{[k: string]: string|Function}} New message object, whose messages will be marked with the rule name\n */\n\nmodule.exports = function (ruleName, messages) {\n  return Object.keys(messages).reduce(\n  /**\n   * @param {{[k: string]: string|Function}} newMessages\n   * @param {string} messageId\n   * @return {{[k: string]: string|Function}}\n   */\n  (newMessages, messageId) => {\n    const messageText = messages[messageId];\n\n    if (typeof messageText === 'string') {\n      newMessages[messageId] = `${messageText} (${ruleName})`;\n    } else {\n      newMessages[messageId] = (\n      /** @type {any[]} */\n      ...args) => {\n        return `${messageText(...args)} (${ruleName})`;\n      };\n    }\n\n    return newMessages;\n  }, {});\n};","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/lib/utils/ruleMessages.js"],"names":["module","exports","ruleName","messages","Object","keys","reduce","newMessages","messageId","messageText","args"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAAUC,QAAV,EAAoBC,QAApB,EAA8B;AAC9C,SAAOC,MAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsBG,MAAtB;AACN;AACF;AACA;AACA;AACA;AACE,GAACC,WAAD,EAAcC,SAAd,KAA4B;AAC3B,UAAMC,WAAW,GAAGN,QAAQ,CAACK,SAAD,CAA5B;;AAEA,QAAI,OAAOC,WAAP,KAAuB,QAA3B,EAAqC;AACpCF,MAAAA,WAAW,CAACC,SAAD,CAAX,GAA0B,GAAEC,WAAY,KAAIP,QAAS,GAArD;AACA,KAFD,MAEO;AACNK,MAAAA,WAAW,CAACC,SAAD,CAAX,GAAyB;AAAC;AAAqB,SAAGE,IAAzB,KAAkC;AAC1D,eAAQ,GAAED,WAAW,CAAC,GAAGC,IAAJ,CAAU,KAAIR,QAAS,GAA5C;AACA,OAFD;AAGA;;AAED,WAAOK,WAAP;AACA,GAlBK,EAmBN,EAnBM,CAAP;AAqBA,CAtBD","sourcesContent":["'use strict';\n\n/**\n * Given an object of violation messages, return another\n * that provides the same messages postfixed with the rule\n * that has been violated.\n *\n * @param {string} ruleName\n * @param {{[k: string]: string|Function}} messages - Object whose keys are message identifiers\n *   and values are either message strings or functions that return message strings\n * @return {{[k: string]: string|Function}} New message object, whose messages will be marked with the rule name\n */\nmodule.exports = function (ruleName, messages) {\n\treturn Object.keys(messages).reduce(\n\t\t/**\n\t\t * @param {{[k: string]: string|Function}} newMessages\n\t\t * @param {string} messageId\n\t\t * @return {{[k: string]: string|Function}}\n\t\t */\n\t\t(newMessages, messageId) => {\n\t\t\tconst messageText = messages[messageId];\n\n\t\t\tif (typeof messageText === 'string') {\n\t\t\t\tnewMessages[messageId] = `${messageText} (${ruleName})`;\n\t\t\t} else {\n\t\t\t\tnewMessages[messageId] = (/** @type {any[]} */ ...args) => {\n\t\t\t\t\treturn `${messageText(...args)} (${ruleName})`;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn newMessages;\n\t\t},\n\t\t{},\n\t);\n};\n"]},"metadata":{},"sourceType":"script"}
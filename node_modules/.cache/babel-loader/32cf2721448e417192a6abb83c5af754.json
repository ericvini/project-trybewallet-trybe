{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst stream_1 = require(\"stream\");\n\nconst fsStat = require(\"@nodelib/fs.stat\");\n\nconst fsWalk = require(\"@nodelib/fs.walk\");\n\nconst reader_1 = require(\"./reader\");\n\nclass ReaderStream extends reader_1.default {\n  constructor() {\n    super(...arguments);\n    this._walkStream = fsWalk.walkStream;\n    this._stat = fsStat.stat;\n  }\n\n  dynamic(root, options) {\n    return this._walkStream(root, options);\n  }\n\n  static(patterns, options) {\n    const filepaths = patterns.map(this._getFullEntryPath, this);\n    const stream = new stream_1.PassThrough({\n      objectMode: true\n    });\n\n    stream._write = (index, _enc, done) => {\n      return this._getEntry(filepaths[index], patterns[index], options).then(entry => {\n        if (entry !== null && options.entryFilter(entry)) {\n          stream.push(entry);\n        }\n\n        if (index === filepaths.length - 1) {\n          stream.end();\n        }\n\n        done();\n      }).catch(done);\n    };\n\n    for (let i = 0; i < filepaths.length; i++) {\n      stream.write(i);\n    }\n\n    return stream;\n  }\n\n  _getEntry(filepath, pattern, options) {\n    return this._getStat(filepath).then(stats => this._makeEntry(stats, pattern)).catch(error => {\n      if (options.errorFilter(error)) {\n        return null;\n      }\n\n      throw error;\n    });\n  }\n\n  _getStat(filepath) {\n    return new Promise((resolve, reject) => {\n      this._stat(filepath, this._fsStatSettings, (error, stats) => {\n        return error === null ? resolve(stats) : reject(error);\n      });\n    });\n  }\n\n}\n\nexports.default = ReaderStream;","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/node_modules/fast-glob/out/readers/stream.js"],"names":["Object","defineProperty","exports","value","stream_1","require","fsStat","fsWalk","reader_1","ReaderStream","default","constructor","arguments","_walkStream","walkStream","_stat","stat","dynamic","root","options","static","patterns","filepaths","map","_getFullEntryPath","stream","PassThrough","objectMode","_write","index","_enc","done","_getEntry","then","entry","entryFilter","push","length","end","catch","i","write","filepath","pattern","_getStat","stats","_makeEntry","error","errorFilter","Promise","resolve","reject","_fsStatSettings"],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst stream_1 = require(\"stream\");\r\nconst fsStat = require(\"@nodelib/fs.stat\");\r\nconst fsWalk = require(\"@nodelib/fs.walk\");\r\nconst reader_1 = require(\"./reader\");\r\nclass ReaderStream extends reader_1.default {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._walkStream = fsWalk.walkStream;\r\n        this._stat = fsStat.stat;\r\n    }\r\n    dynamic(root, options) {\r\n        return this._walkStream(root, options);\r\n    }\r\n    static(patterns, options) {\r\n        const filepaths = patterns.map(this._getFullEntryPath, this);\r\n        const stream = new stream_1.PassThrough({ objectMode: true });\r\n        stream._write = (index, _enc, done) => {\r\n            return this._getEntry(filepaths[index], patterns[index], options)\r\n                .then((entry) => {\r\n                if (entry !== null && options.entryFilter(entry)) {\r\n                    stream.push(entry);\r\n                }\r\n                if (index === filepaths.length - 1) {\r\n                    stream.end();\r\n                }\r\n                done();\r\n            })\r\n                .catch(done);\r\n        };\r\n        for (let i = 0; i < filepaths.length; i++) {\r\n            stream.write(i);\r\n        }\r\n        return stream;\r\n    }\r\n    _getEntry(filepath, pattern, options) {\r\n        return this._getStat(filepath)\r\n            .then((stats) => this._makeEntry(stats, pattern))\r\n            .catch((error) => {\r\n            if (options.errorFilter(error)) {\r\n                return null;\r\n            }\r\n            throw error;\r\n        });\r\n    }\r\n    _getStat(filepath) {\r\n        return new Promise((resolve, reject) => {\r\n            this._stat(filepath, this._fsStatSettings, (error, stats) => {\r\n                return error === null ? resolve(stats) : reject(error);\r\n            });\r\n        });\r\n    }\r\n}\r\nexports.default = ReaderStream;\r\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"// @ts-nocheck\n'use strict';\n\nconst report = require('../../utils/report');\n\nconst ruleMessages = require('../../utils/ruleMessages');\n\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'no-empty-source';\nconst messages = ruleMessages(ruleName, {\n  rejected: 'Unexpected empty source'\n});\n\nfunction rule(actual, options, context) {\n  return (root, result) => {\n    const validOptions = validateOptions(result, ruleName, {\n      actual\n    });\n\n    if (!validOptions) {\n      return;\n    }\n\n    const rootString = context.fix ? root.toString() : root.source.input.css;\n\n    if (rootString.trim()) {\n      return;\n    }\n\n    report({\n      message: messages.rejected,\n      node: root,\n      result,\n      ruleName\n    });\n  };\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nmodule.exports = rule;","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/lib/rules/no-empty-source/index.js"],"names":["report","require","ruleMessages","validateOptions","ruleName","messages","rejected","rule","actual","options","context","root","result","validOptions","rootString","fix","toString","source","input","css","trim","message","node","module","exports"],"mappings":"AAAA;AAEA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,oBAAD,CAAtB;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,0BAAD,CAA5B;;AACA,MAAME,eAAe,GAAGF,OAAO,CAAC,6BAAD,CAA/B;;AAEA,MAAMG,QAAQ,GAAG,iBAAjB;AAEA,MAAMC,QAAQ,GAAGH,YAAY,CAACE,QAAD,EAAW;AACvCE,EAAAA,QAAQ,EAAE;AAD6B,CAAX,CAA7B;;AAIA,SAASC,IAAT,CAAcC,MAAd,EAAsBC,OAAtB,EAA+BC,OAA/B,EAAwC;AACvC,SAAO,CAACC,IAAD,EAAOC,MAAP,KAAkB;AACxB,UAAMC,YAAY,GAAGV,eAAe,CAACS,MAAD,EAASR,QAAT,EAAmB;AAAEI,MAAAA;AAAF,KAAnB,CAApC;;AAEA,QAAI,CAACK,YAAL,EAAmB;AAClB;AACA;;AAED,UAAMC,UAAU,GAAGJ,OAAO,CAACK,GAAR,GAAcJ,IAAI,CAACK,QAAL,EAAd,GAAgCL,IAAI,CAACM,MAAL,CAAYC,KAAZ,CAAkBC,GAArE;;AAEA,QAAIL,UAAU,CAACM,IAAX,EAAJ,EAAuB;AACtB;AACA;;AAEDpB,IAAAA,MAAM,CAAC;AACNqB,MAAAA,OAAO,EAAEhB,QAAQ,CAACC,QADZ;AAENgB,MAAAA,IAAI,EAAEX,IAFA;AAGNC,MAAAA,MAHM;AAINR,MAAAA;AAJM,KAAD,CAAN;AAMA,GAnBD;AAoBA;;AAEDG,IAAI,CAACH,QAAL,GAAgBA,QAAhB;AACAG,IAAI,CAACF,QAAL,GAAgBA,QAAhB;AACAkB,MAAM,CAACC,OAAP,GAAiBjB,IAAjB","sourcesContent":["// @ts-nocheck\n\n'use strict';\n\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'no-empty-source';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: 'Unexpected empty source',\n});\n\nfunction rule(actual, options, context) {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, { actual });\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst rootString = context.fix ? root.toString() : root.source.input.css;\n\n\t\tif (rootString.trim()) {\n\t\t\treturn;\n\t\t}\n\n\t\treport({\n\t\t\tmessage: messages.rejected,\n\t\t\tnode: root,\n\t\t\tresult,\n\t\t\truleName,\n\t\t});\n\t};\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nmodule.exports = rule;\n"]},"metadata":{},"sourceType":"script"}
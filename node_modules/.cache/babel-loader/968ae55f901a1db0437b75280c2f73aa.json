{"ast":null,"code":"// @ts-nocheck\n'use strict';\n\nconst _ = require('lodash');\n\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\n\nconst matchesStringOrRegExp = require('../../utils/matchesStringOrRegExp');\n\nconst parseSelector = require('../../utils/parseSelector');\n\nconst report = require('../../utils/report');\n\nconst ruleMessages = require('../../utils/ruleMessages');\n\nconst validateOptions = require('../../utils/validateOptions');\n\nconst vendor = require('../../utils/vendor');\n\nconst ruleName = 'selector-pseudo-class-allowed-list';\nconst messages = ruleMessages(ruleName, {\n  rejected: selector => `Unexpected pseudo-class \"${selector}\"`\n});\n\nfunction rule(list) {\n  return (root, result) => {\n    const validOptions = validateOptions(result, ruleName, {\n      actual: list,\n      possible: [_.isString, _.isRegExp]\n    });\n\n    if (!validOptions) {\n      return;\n    } // TODO: Issue #4985\n    // eslint-disable-next-line no-shadow\n\n\n    root.walkRules(rule => {\n      if (!isStandardSyntaxRule(rule)) {\n        return;\n      }\n\n      const selector = rule.selector;\n\n      if (!selector.includes(':')) {\n        return;\n      }\n\n      parseSelector(selector, result, rule, selectorTree => {\n        selectorTree.walkPseudos(pseudoNode => {\n          const value = pseudoNode.value; // Ignore pseudo-elements\n\n          if (value.slice(0, 2) === '::') {\n            return;\n          }\n\n          const name = value.slice(1);\n\n          if (matchesStringOrRegExp(vendor.unprefixed(name), list)) {\n            return;\n          }\n\n          report({\n            index: pseudoNode.sourceIndex,\n            message: messages.rejected(name),\n            node: rule,\n            result,\n            ruleName\n          });\n        });\n      });\n    });\n  };\n}\n\nrule.primaryOptionArray = true;\nrule.ruleName = ruleName;\nrule.messages = messages;\nmodule.exports = rule;","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/lib/rules/selector-pseudo-class-allowed-list/index.js"],"names":["_","require","isStandardSyntaxRule","matchesStringOrRegExp","parseSelector","report","ruleMessages","validateOptions","vendor","ruleName","messages","rejected","selector","rule","list","root","result","validOptions","actual","possible","isString","isRegExp","walkRules","includes","selectorTree","walkPseudos","pseudoNode","value","slice","name","unprefixed","index","sourceIndex","message","node","primaryOptionArray","module","exports"],"mappings":"AAAA;AAEA;;AAEA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AACA,MAAMC,oBAAoB,GAAGD,OAAO,CAAC,kCAAD,CAApC;;AACA,MAAME,qBAAqB,GAAGF,OAAO,CAAC,mCAAD,CAArC;;AACA,MAAMG,aAAa,GAAGH,OAAO,CAAC,2BAAD,CAA7B;;AACA,MAAMI,MAAM,GAAGJ,OAAO,CAAC,oBAAD,CAAtB;;AACA,MAAMK,YAAY,GAAGL,OAAO,CAAC,0BAAD,CAA5B;;AACA,MAAMM,eAAe,GAAGN,OAAO,CAAC,6BAAD,CAA/B;;AACA,MAAMO,MAAM,GAAGP,OAAO,CAAC,oBAAD,CAAtB;;AAEA,MAAMQ,QAAQ,GAAG,oCAAjB;AAEA,MAAMC,QAAQ,GAAGJ,YAAY,CAACG,QAAD,EAAW;AACvCE,EAAAA,QAAQ,EAAGC,QAAD,IAAe,4BAA2BA,QAAS;AADtB,CAAX,CAA7B;;AAIA,SAASC,IAAT,CAAcC,IAAd,EAAoB;AACnB,SAAO,CAACC,IAAD,EAAOC,MAAP,KAAkB;AACxB,UAAMC,YAAY,GAAGV,eAAe,CAACS,MAAD,EAASP,QAAT,EAAmB;AACtDS,MAAAA,MAAM,EAAEJ,IAD8C;AAEtDK,MAAAA,QAAQ,EAAE,CAACnB,CAAC,CAACoB,QAAH,EAAapB,CAAC,CAACqB,QAAf;AAF4C,KAAnB,CAApC;;AAKA,QAAI,CAACJ,YAAL,EAAmB;AAClB;AACA,KARuB,CAUxB;AACA;;;AACAF,IAAAA,IAAI,CAACO,SAAL,CAAgBT,IAAD,IAAU;AACxB,UAAI,CAACX,oBAAoB,CAACW,IAAD,CAAzB,EAAiC;AAChC;AACA;;AAED,YAAMD,QAAQ,GAAGC,IAAI,CAACD,QAAtB;;AAEA,UAAI,CAACA,QAAQ,CAACW,QAAT,CAAkB,GAAlB,CAAL,EAA6B;AAC5B;AACA;;AAEDnB,MAAAA,aAAa,CAACQ,QAAD,EAAWI,MAAX,EAAmBH,IAAnB,EAA0BW,YAAD,IAAkB;AACvDA,QAAAA,YAAY,CAACC,WAAb,CAA0BC,UAAD,IAAgB;AACxC,gBAAMC,KAAK,GAAGD,UAAU,CAACC,KAAzB,CADwC,CAGxC;;AACA,cAAIA,KAAK,CAACC,KAAN,CAAY,CAAZ,EAAe,CAAf,MAAsB,IAA1B,EAAgC;AAC/B;AACA;;AAED,gBAAMC,IAAI,GAAGF,KAAK,CAACC,KAAN,CAAY,CAAZ,CAAb;;AAEA,cAAIzB,qBAAqB,CAACK,MAAM,CAACsB,UAAP,CAAkBD,IAAlB,CAAD,EAA0Bf,IAA1B,CAAzB,EAA0D;AACzD;AACA;;AAEDT,UAAAA,MAAM,CAAC;AACN0B,YAAAA,KAAK,EAAEL,UAAU,CAACM,WADZ;AAENC,YAAAA,OAAO,EAAEvB,QAAQ,CAACC,QAAT,CAAkBkB,IAAlB,CAFH;AAGNK,YAAAA,IAAI,EAAErB,IAHA;AAING,YAAAA,MAJM;AAKNP,YAAAA;AALM,WAAD,CAAN;AAOA,SArBD;AAsBA,OAvBY,CAAb;AAwBA,KAnCD;AAoCA,GAhDD;AAiDA;;AAEDI,IAAI,CAACsB,kBAAL,GAA0B,IAA1B;AAEAtB,IAAI,CAACJ,QAAL,GAAgBA,QAAhB;AACAI,IAAI,CAACH,QAAL,GAAgBA,QAAhB;AACA0B,MAAM,CAACC,OAAP,GAAiBxB,IAAjB","sourcesContent":["// @ts-nocheck\n\n'use strict';\n\nconst _ = require('lodash');\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst matchesStringOrRegExp = require('../../utils/matchesStringOrRegExp');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst vendor = require('../../utils/vendor');\n\nconst ruleName = 'selector-pseudo-class-allowed-list';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (selector) => `Unexpected pseudo-class \"${selector}\"`,\n});\n\nfunction rule(list) {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: list,\n\t\t\tpossible: [_.isString, _.isRegExp],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO: Issue #4985\n\t\t// eslint-disable-next-line no-shadow\n\t\troot.walkRules((rule) => {\n\t\t\tif (!isStandardSyntaxRule(rule)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst selector = rule.selector;\n\n\t\t\tif (!selector.includes(':')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tparseSelector(selector, result, rule, (selectorTree) => {\n\t\t\t\tselectorTree.walkPseudos((pseudoNode) => {\n\t\t\t\t\tconst value = pseudoNode.value;\n\n\t\t\t\t\t// Ignore pseudo-elements\n\t\t\t\t\tif (value.slice(0, 2) === '::') {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst name = value.slice(1);\n\n\t\t\t\t\tif (matchesStringOrRegExp(vendor.unprefixed(name), list)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tindex: pseudoNode.sourceIndex,\n\t\t\t\t\t\tmessage: messages.rejected(name),\n\t\t\t\t\t\tnode: rule,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n}\n\nrule.primaryOptionArray = true;\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nmodule.exports = rule;\n"]},"metadata":{},"sourceType":"script"}
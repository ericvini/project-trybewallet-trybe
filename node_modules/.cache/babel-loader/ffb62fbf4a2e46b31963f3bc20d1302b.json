{"ast":null,"code":"'use strict';\n/** @typedef {import('postcss').Node} Node */\n\n/** @typedef {import('postcss').Node} NodeSource */\n\n/**\n * @param {Node} node\n * @returns {node is import('postcss').Root}\n */\n\nmodule.exports.isRoot = function isRoot(node) {\n  return node.type === 'root';\n};\n/**\n * @param {Node} node\n * @returns {node is import('postcss').Rule}\n */\n\n\nmodule.exports.isRule = function isRule(node) {\n  return node.type === 'rule';\n};\n/**\n * @param {Node} node\n * @returns {node is import('postcss').AtRule}\n */\n\n\nmodule.exports.isAtRule = function isAtRule(node) {\n  return node.type === 'atrule';\n};\n/**\n * @param {Node} node\n * @returns {node is import('postcss').Comment}\n */\n\n\nmodule.exports.isComment = function isComment(node) {\n  return node.type === 'comment';\n};\n/**\n * @param {Node} node\n * @returns {node is (Node & {source: NodeSource})}\n */\n\n\nmodule.exports.hasSource = function hasSource(node) {\n  return Boolean(node.source);\n};","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/lib/utils/typeGuards.js"],"names":["module","exports","isRoot","node","type","isRule","isAtRule","isComment","hasSource","Boolean","source"],"mappings":"AAAA;AAEA;;AACA;;AAEA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,OAAP,CAAeC,MAAf,GAAwB,SAASA,MAAT,CAAgBC,IAAhB,EAAsB;AAC7C,SAAOA,IAAI,CAACC,IAAL,KAAc,MAArB;AACA,CAFD;AAIA;AACA;AACA;AACA;;;AACAJ,MAAM,CAACC,OAAP,CAAeI,MAAf,GAAwB,SAASA,MAAT,CAAgBF,IAAhB,EAAsB;AAC7C,SAAOA,IAAI,CAACC,IAAL,KAAc,MAArB;AACA,CAFD;AAIA;AACA;AACA;AACA;;;AACAJ,MAAM,CAACC,OAAP,CAAeK,QAAf,GAA0B,SAASA,QAAT,CAAkBH,IAAlB,EAAwB;AACjD,SAAOA,IAAI,CAACC,IAAL,KAAc,QAArB;AACA,CAFD;AAIA;AACA;AACA;AACA;;;AACAJ,MAAM,CAACC,OAAP,CAAeM,SAAf,GAA2B,SAASA,SAAT,CAAmBJ,IAAnB,EAAyB;AACnD,SAAOA,IAAI,CAACC,IAAL,KAAc,SAArB;AACA,CAFD;AAIA;AACA;AACA;AACA;;;AACAJ,MAAM,CAACC,OAAP,CAAeO,SAAf,GAA2B,SAASA,SAAT,CAAmBL,IAAnB,EAAyB;AACnD,SAAOM,OAAO,CAACN,IAAI,CAACO,MAAN,CAAd;AACA,CAFD","sourcesContent":["'use strict';\n\n/** @typedef {import('postcss').Node} Node */\n/** @typedef {import('postcss').Node} NodeSource */\n\n/**\n * @param {Node} node\n * @returns {node is import('postcss').Root}\n */\nmodule.exports.isRoot = function isRoot(node) {\n\treturn node.type === 'root';\n};\n\n/**\n * @param {Node} node\n * @returns {node is import('postcss').Rule}\n */\nmodule.exports.isRule = function isRule(node) {\n\treturn node.type === 'rule';\n};\n\n/**\n * @param {Node} node\n * @returns {node is import('postcss').AtRule}\n */\nmodule.exports.isAtRule = function isAtRule(node) {\n\treturn node.type === 'atrule';\n};\n\n/**\n * @param {Node} node\n * @returns {node is import('postcss').Comment}\n */\nmodule.exports.isComment = function isComment(node) {\n\treturn node.type === 'comment';\n};\n\n/**\n * @param {Node} node\n * @returns {node is (Node & {source: NodeSource})}\n */\nmodule.exports.hasSource = function hasSource(node) {\n\treturn Boolean(node.source);\n};\n"]},"metadata":{},"sourceType":"script"}
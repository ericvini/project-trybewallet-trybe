{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.removeLeadingDotSegment = exports.escape = exports.makeAbsolute = exports.unixify = void 0;\n\nconst path = require(\"path\");\n\nconst LEADING_DOT_SEGMENT_CHARACTERS_COUNT = 2; // ./ or .\\\\\n\nconst UNESCAPED_GLOB_SYMBOLS_RE = /(\\\\?)([()*?[\\]{|}]|^!|[!+@](?=\\())/g;\n/**\r\n * Designed to work only with simple paths: `dir\\\\file`.\r\n */\n\nfunction unixify(filepath) {\n  return filepath.replace(/\\\\/g, '/');\n}\n\nexports.unixify = unixify;\n\nfunction makeAbsolute(cwd, filepath) {\n  return path.resolve(cwd, filepath);\n}\n\nexports.makeAbsolute = makeAbsolute;\n\nfunction escape(pattern) {\n  return pattern.replace(UNESCAPED_GLOB_SYMBOLS_RE, '\\\\$2');\n}\n\nexports.escape = escape;\n\nfunction removeLeadingDotSegment(entry) {\n  // We do not use `startsWith` because this is 10x slower than current implementation for some cases.\n  // eslint-disable-next-line @typescript-eslint/prefer-string-starts-ends-with\n  if (entry.charAt(0) === '.') {\n    const secondCharactery = entry.charAt(1);\n\n    if (secondCharactery === '/' || secondCharactery === '\\\\') {\n      return entry.slice(LEADING_DOT_SEGMENT_CHARACTERS_COUNT);\n    }\n  }\n\n  return entry;\n}\n\nexports.removeLeadingDotSegment = removeLeadingDotSegment;","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/node_modules/fast-glob/out/utils/path.js"],"names":["Object","defineProperty","exports","value","removeLeadingDotSegment","escape","makeAbsolute","unixify","path","require","LEADING_DOT_SEGMENT_CHARACTERS_COUNT","UNESCAPED_GLOB_SYMBOLS_RE","filepath","replace","cwd","resolve","pattern","entry","charAt","secondCharactery","slice"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,uBAAR,GAAkCF,OAAO,CAACG,MAAR,GAAiBH,OAAO,CAACI,YAAR,GAAuBJ,OAAO,CAACK,OAAR,GAAkB,KAAK,CAAjG;;AACA,MAAMC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,oCAAoC,GAAG,CAA7C,C,CAAgD;;AAChD,MAAMC,yBAAyB,GAAG,qCAAlC;AACA;AACA;AACA;;AACA,SAASJ,OAAT,CAAiBK,QAAjB,EAA2B;AACvB,SAAOA,QAAQ,CAACC,OAAT,CAAiB,KAAjB,EAAwB,GAAxB,CAAP;AACH;;AACDX,OAAO,CAACK,OAAR,GAAkBA,OAAlB;;AACA,SAASD,YAAT,CAAsBQ,GAAtB,EAA2BF,QAA3B,EAAqC;AACjC,SAAOJ,IAAI,CAACO,OAAL,CAAaD,GAAb,EAAkBF,QAAlB,CAAP;AACH;;AACDV,OAAO,CAACI,YAAR,GAAuBA,YAAvB;;AACA,SAASD,MAAT,CAAgBW,OAAhB,EAAyB;AACrB,SAAOA,OAAO,CAACH,OAAR,CAAgBF,yBAAhB,EAA2C,MAA3C,CAAP;AACH;;AACDT,OAAO,CAACG,MAAR,GAAiBA,MAAjB;;AACA,SAASD,uBAAT,CAAiCa,KAAjC,EAAwC;AACpC;AACA;AACA,MAAIA,KAAK,CAACC,MAAN,CAAa,CAAb,MAAoB,GAAxB,EAA6B;AACzB,UAAMC,gBAAgB,GAAGF,KAAK,CAACC,MAAN,CAAa,CAAb,CAAzB;;AACA,QAAIC,gBAAgB,KAAK,GAArB,IAA4BA,gBAAgB,KAAK,IAArD,EAA2D;AACvD,aAAOF,KAAK,CAACG,KAAN,CAAYV,oCAAZ,CAAP;AACH;AACJ;;AACD,SAAOO,KAAP;AACH;;AACDf,OAAO,CAACE,uBAAR,GAAkCA,uBAAlC","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.removeLeadingDotSegment = exports.escape = exports.makeAbsolute = exports.unixify = void 0;\r\nconst path = require(\"path\");\r\nconst LEADING_DOT_SEGMENT_CHARACTERS_COUNT = 2; // ./ or .\\\\\r\nconst UNESCAPED_GLOB_SYMBOLS_RE = /(\\\\?)([()*?[\\]{|}]|^!|[!+@](?=\\())/g;\r\n/**\r\n * Designed to work only with simple paths: `dir\\\\file`.\r\n */\r\nfunction unixify(filepath) {\r\n    return filepath.replace(/\\\\/g, '/');\r\n}\r\nexports.unixify = unixify;\r\nfunction makeAbsolute(cwd, filepath) {\r\n    return path.resolve(cwd, filepath);\r\n}\r\nexports.makeAbsolute = makeAbsolute;\r\nfunction escape(pattern) {\r\n    return pattern.replace(UNESCAPED_GLOB_SYMBOLS_RE, '\\\\$2');\r\n}\r\nexports.escape = escape;\r\nfunction removeLeadingDotSegment(entry) {\r\n    // We do not use `startsWith` because this is 10x slower than current implementation for some cases.\r\n    // eslint-disable-next-line @typescript-eslint/prefer-string-starts-ends-with\r\n    if (entry.charAt(0) === '.') {\r\n        const secondCharactery = entry.charAt(1);\r\n        if (secondCharactery === '/' || secondCharactery === '\\\\') {\r\n            return entry.slice(LEADING_DOT_SEGMENT_CHARACTERS_COUNT);\r\n        }\r\n    }\r\n    return entry;\r\n}\r\nexports.removeLeadingDotSegment = removeLeadingDotSegment;\r\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cacheWrapper = cacheWrapper;\nexports.cacheWrapperSync = cacheWrapperSync;\n\nasync function cacheWrapper(cache, key, fn) {\n  const cached = cache.get(key);\n\n  if (cached !== undefined) {\n    return cached;\n  }\n\n  const result = await fn();\n  cache.set(key, result);\n  return result;\n}\n\nfunction cacheWrapperSync(cache, key, fn) {\n  const cached = cache.get(key);\n\n  if (cached !== undefined) {\n    return cached;\n  }\n\n  const result = fn();\n  cache.set(key, result);\n  return result;\n}","map":{"version":3,"sources":["../src/cacheWrapper.ts"],"names":["cached","cache","result","fn"],"mappings":";;;;;;;;AAEA,eAAA,YAAA,CAAA,KAAA,EAAA,GAAA,EAAA,EAAA,EAI8B;AAC5B,QAAMA,MAAM,GAAGC,KAAK,CAALA,GAAAA,CAAf,GAAeA,CAAf;;AACA,MAAID,MAAM,KAAV,SAAA,EAA0B;AACxB,WAAA,MAAA;AACD;;AAED,QAAME,MAAM,GAAG,MAAMC,EAArB,EAAA;AACAF,EAAAA,KAAK,CAALA,GAAAA,CAAAA,GAAAA,EAAAA,MAAAA;AACA,SAAA,MAAA;AACD;;AAED,SAAA,gBAAA,CAAA,KAAA,EAAA,GAAA,EAAA,EAAA,EAIqB;AACnB,QAAMD,MAAM,GAAGC,KAAK,CAALA,GAAAA,CAAf,GAAeA,CAAf;;AACA,MAAID,MAAM,KAAV,SAAA,EAA0B;AACxB,WAAA,MAAA;AACD;;AAED,QAAME,MAAM,GAAGC,EAAf,EAAA;AACAF,EAAAA,KAAK,CAALA,GAAAA,CAAAA,GAAAA,EAAAA,MAAAA;AACA,SAAA,MAAA;AACD","sourcesContent":["import { Cache, CosmiconfigResult } from './types';\n\nasync function cacheWrapper(\n  cache: Cache,\n  key: string,\n  fn: () => Promise<CosmiconfigResult>,\n): Promise<CosmiconfigResult> {\n  const cached = cache.get(key);\n  if (cached !== undefined) {\n    return cached;\n  }\n\n  const result = await fn();\n  cache.set(key, result);\n  return result;\n}\n\nfunction cacheWrapperSync(\n  cache: Cache,\n  key: string,\n  fn: () => CosmiconfigResult,\n): CosmiconfigResult {\n  const cached = cache.get(key);\n  if (cached !== undefined) {\n    return cached;\n  }\n\n  const result = fn();\n  cache.set(key, result);\n  return result;\n}\n\nexport { cacheWrapper, cacheWrapperSync };\n"]},"metadata":{},"sourceType":"script"}
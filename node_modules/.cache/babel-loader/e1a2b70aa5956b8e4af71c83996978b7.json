{"ast":null,"code":"'use strict';\n\nconst _ = require('lodash');\n/** @typedef {import('postcss').Node} Node */\n\n/**\n * @param {Node} node\n */\n\n\nfunction getNodeLine(node) {\n  return _.get(node, 'source.start.line');\n}\n/**\n * @param {import('postcss').Node | void} node\n * @returns {Node | void}\n */\n\n\nmodule.exports = function getPreviousNonSharedLineCommentNode(node) {\n  if (node === undefined) {\n    return undefined;\n  }\n\n  const previousNode = node.prev();\n\n  if (!previousNode || _.get(previousNode, 'type') !== 'comment') {\n    return previousNode;\n  }\n\n  if (getNodeLine(node) === getNodeLine(previousNode)) {\n    return getPreviousNonSharedLineCommentNode(previousNode);\n  }\n\n  const previousNode2 = previousNode.prev();\n\n  if (previousNode2 && getNodeLine(previousNode) === getNodeLine(previousNode2)) {\n    return getPreviousNonSharedLineCommentNode(previousNode);\n  }\n\n  return previousNode;\n};","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/lib/utils/getPreviousNonSharedLineCommentNode.js"],"names":["_","require","getNodeLine","node","get","module","exports","getPreviousNonSharedLineCommentNode","undefined","previousNode","prev","previousNode2"],"mappings":"AAAA;;AAEA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;AAEA;;AAEA;AACA;AACA;;;AACA,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AAC1B,SAAOH,CAAC,CAACI,GAAF,CAAMD,IAAN,EAAY,mBAAZ,CAAP;AACA;AAED;AACA;AACA;AACA;;;AACAE,MAAM,CAACC,OAAP,GAAiB,SAASC,mCAAT,CAA6CJ,IAA7C,EAAmD;AACnE,MAAIA,IAAI,KAAKK,SAAb,EAAwB;AACvB,WAAOA,SAAP;AACA;;AAED,QAAMC,YAAY,GAAGN,IAAI,CAACO,IAAL,EAArB;;AAEA,MAAI,CAACD,YAAD,IAAiBT,CAAC,CAACI,GAAF,CAAMK,YAAN,EAAoB,MAApB,MAAgC,SAArD,EAAgE;AAC/D,WAAOA,YAAP;AACA;;AAED,MAAIP,WAAW,CAACC,IAAD,CAAX,KAAsBD,WAAW,CAACO,YAAD,CAArC,EAAqD;AACpD,WAAOF,mCAAmC,CAACE,YAAD,CAA1C;AACA;;AAED,QAAME,aAAa,GAAGF,YAAY,CAACC,IAAb,EAAtB;;AAEA,MAAIC,aAAa,IAAIT,WAAW,CAACO,YAAD,CAAX,KAA8BP,WAAW,CAACS,aAAD,CAA9D,EAA+E;AAC9E,WAAOJ,mCAAmC,CAACE,YAAD,CAA1C;AACA;;AAED,SAAOA,YAAP;AACA,CAtBD","sourcesContent":["'use strict';\n\nconst _ = require('lodash');\n\n/** @typedef {import('postcss').Node} Node */\n\n/**\n * @param {Node} node\n */\nfunction getNodeLine(node) {\n\treturn _.get(node, 'source.start.line');\n}\n\n/**\n * @param {import('postcss').Node | void} node\n * @returns {Node | void}\n */\nmodule.exports = function getPreviousNonSharedLineCommentNode(node) {\n\tif (node === undefined) {\n\t\treturn undefined;\n\t}\n\n\tconst previousNode = node.prev();\n\n\tif (!previousNode || _.get(previousNode, 'type') !== 'comment') {\n\t\treturn previousNode;\n\t}\n\n\tif (getNodeLine(node) === getNodeLine(previousNode)) {\n\t\treturn getPreviousNonSharedLineCommentNode(previousNode);\n\t}\n\n\tconst previousNode2 = previousNode.prev();\n\n\tif (previousNode2 && getNodeLine(previousNode) === getNodeLine(previousNode2)) {\n\t\treturn getPreviousNonSharedLineCommentNode(previousNode);\n\t}\n\n\treturn previousNode;\n};\n"]},"metadata":{},"sourceType":"script"}
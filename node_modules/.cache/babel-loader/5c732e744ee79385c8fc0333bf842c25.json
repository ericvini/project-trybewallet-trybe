{"ast":null,"code":"// @ts-nocheck\n'use strict';\n\nconst atRuleParamIndex = require('../utils/atRuleParamIndex');\n\nconst report = require('../utils/report');\n\nconst styleSearch = require('style-search');\n\nmodule.exports = function (opts) {\n  opts.root.walkAtRules(/^media$/i, atRule => {\n    const params = atRule.raws.params ? atRule.raws.params.raw : atRule.params;\n    styleSearch({\n      source: params,\n      target: ':'\n    }, match => {\n      checkColon(params, match.startIndex, atRule);\n    });\n  });\n\n  function checkColon(source, index, node) {\n    opts.locationChecker({\n      source,\n      index,\n      err: m => {\n        const colonIndex = index + atRuleParamIndex(node);\n\n        if (opts.fix && opts.fix(node, colonIndex)) {\n          return;\n        }\n\n        report({\n          message: m,\n          node,\n          index: colonIndex,\n          result: opts.result,\n          ruleName: opts.checkedRuleName\n        });\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/lib/rules/mediaFeatureColonSpaceChecker.js"],"names":["atRuleParamIndex","require","report","styleSearch","module","exports","opts","root","walkAtRules","atRule","params","raws","raw","source","target","match","checkColon","startIndex","index","node","locationChecker","err","m","colonIndex","fix","message","result","ruleName","checkedRuleName"],"mappings":"AAAA;AAEA;;AAEA,MAAMA,gBAAgB,GAAGC,OAAO,CAAC,2BAAD,CAAhC;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,iBAAD,CAAtB;;AACA,MAAME,WAAW,GAAGF,OAAO,CAAC,cAAD,CAA3B;;AAEAG,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAChCA,EAAAA,IAAI,CAACC,IAAL,CAAUC,WAAV,CAAsB,UAAtB,EAAmCC,MAAD,IAAY;AAC7C,UAAMC,MAAM,GAAGD,MAAM,CAACE,IAAP,CAAYD,MAAZ,GAAqBD,MAAM,CAACE,IAAP,CAAYD,MAAZ,CAAmBE,GAAxC,GAA8CH,MAAM,CAACC,MAApE;AAEAP,IAAAA,WAAW,CAAC;AAAEU,MAAAA,MAAM,EAAEH,MAAV;AAAkBI,MAAAA,MAAM,EAAE;AAA1B,KAAD,EAAmCC,KAAD,IAAW;AACvDC,MAAAA,UAAU,CAACN,MAAD,EAASK,KAAK,CAACE,UAAf,EAA2BR,MAA3B,CAAV;AACA,KAFU,CAAX;AAGA,GAND;;AAQA,WAASO,UAAT,CAAoBH,MAApB,EAA4BK,KAA5B,EAAmCC,IAAnC,EAAyC;AACxCb,IAAAA,IAAI,CAACc,eAAL,CAAqB;AACpBP,MAAAA,MADoB;AAEpBK,MAAAA,KAFoB;AAGpBG,MAAAA,GAAG,EAAGC,CAAD,IAAO;AACX,cAAMC,UAAU,GAAGL,KAAK,GAAGlB,gBAAgB,CAACmB,IAAD,CAA3C;;AAEA,YAAIb,IAAI,CAACkB,GAAL,IAAYlB,IAAI,CAACkB,GAAL,CAASL,IAAT,EAAeI,UAAf,CAAhB,EAA4C;AAC3C;AACA;;AAEDrB,QAAAA,MAAM,CAAC;AACNuB,UAAAA,OAAO,EAAEH,CADH;AAENH,UAAAA,IAFM;AAGND,UAAAA,KAAK,EAAEK,UAHD;AAING,UAAAA,MAAM,EAAEpB,IAAI,CAACoB,MAJP;AAKNC,UAAAA,QAAQ,EAAErB,IAAI,CAACsB;AALT,SAAD,CAAN;AAOA;AAjBmB,KAArB;AAmBA;AACD,CA9BD","sourcesContent":["// @ts-nocheck\n\n'use strict';\n\nconst atRuleParamIndex = require('../utils/atRuleParamIndex');\nconst report = require('../utils/report');\nconst styleSearch = require('style-search');\n\nmodule.exports = function (opts) {\n\topts.root.walkAtRules(/^media$/i, (atRule) => {\n\t\tconst params = atRule.raws.params ? atRule.raws.params.raw : atRule.params;\n\n\t\tstyleSearch({ source: params, target: ':' }, (match) => {\n\t\t\tcheckColon(params, match.startIndex, atRule);\n\t\t});\n\t});\n\n\tfunction checkColon(source, index, node) {\n\t\topts.locationChecker({\n\t\t\tsource,\n\t\t\tindex,\n\t\t\terr: (m) => {\n\t\t\t\tconst colonIndex = index + atRuleParamIndex(node);\n\n\t\t\t\tif (opts.fix && opts.fix(node, colonIndex)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: m,\n\t\t\t\t\tnode,\n\t\t\t\t\tindex: colonIndex,\n\t\t\t\t\tresult: opts.result,\n\t\t\t\t\truleName: opts.checkedRuleName,\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}
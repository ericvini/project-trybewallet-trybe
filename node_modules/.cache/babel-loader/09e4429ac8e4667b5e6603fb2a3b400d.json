{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPropertyByPath = getPropertyByPath; // Resolves property names or property paths defined with period-delimited\n// strings or arrays of strings. Property names that are found on the source\n// object are used directly (even if they include a period).\n// Nested property names that include periods, within a path, are only\n// understood in array paths.\n\nfunction getPropertyByPath(source, path) {\n  if (typeof path === 'string' && Object.prototype.hasOwnProperty.call(source, path)) {\n    return source[path];\n  }\n\n  const parsedPath = typeof path === 'string' ? path.split('.') : path; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  return parsedPath.reduce((previous, key) => {\n    if (previous === undefined) {\n      return previous;\n    }\n\n    return previous[key];\n  }, source);\n}","map":{"version":3,"sources":["../src/getPropertyByPath.ts"],"names":["Object","source","parsedPath","path","previous"],"mappings":";;;;;+CAAA;AACA;AACA;AACA;AACA;;AACA,SAAA,iBAAA,CAAA,MAAA,EAAA,IAAA,EAGW;AACT,MACE,OAAA,IAAA,KAAA,QAAA,IACAA,MAAM,CAANA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAAA,MAAAA,EAFF,IAEEA,CAFF,EAGE;AACA,WAAOC,MAAM,CAAb,IAAa,CAAb;AACD;;AAED,QAAMC,UAAU,GAAG,OAAA,IAAA,KAAA,QAAA,GAA2BC,IAAI,CAAJA,KAAAA,CAA3B,GAA2BA,CAA3B,GARV,IAQT,CARS,CAST;;AACA,SAAO,UAAU,CAAV,MAAA,CAAkB,CAAA,QAAA,EAAA,GAAA,KAAiC;AACxD,QAAIC,QAAQ,KAAZ,SAAA,EAA4B;AAC1B,aAAA,QAAA;AACD;;AACD,WAAOA,QAAQ,CAAf,GAAe,CAAf;AAJK,GAAA,EAAP,MAAO,CAAP;AAMD","sourcesContent":["// Resolves property names or property paths defined with period-delimited\n// strings or arrays of strings. Property names that are found on the source\n// object are used directly (even if they include a period).\n// Nested property names that include periods, within a path, are only\n// understood in array paths.\nfunction getPropertyByPath(\n  source: { [key: string]: unknown },\n  path: string | Array<string>,\n): unknown {\n  if (\n    typeof path === 'string' &&\n    Object.prototype.hasOwnProperty.call(source, path)\n  ) {\n    return source[path];\n  }\n\n  const parsedPath = typeof path === 'string' ? path.split('.') : path;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return parsedPath.reduce((previous: any, key): unknown => {\n    if (previous === undefined) {\n      return previous;\n    }\n    return previous[key];\n  }, source);\n}\n\nexport { getPropertyByPath };\n"]},"metadata":{},"sourceType":"script"}
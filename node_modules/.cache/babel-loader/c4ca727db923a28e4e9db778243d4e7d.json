{"ast":null,"code":"// @ts-nocheck\n'use strict';\n\nconst _ = require('lodash');\n\nconst functionArgumentsSearch = require('../../utils/functionArgumentsSearch');\n\nconst getSchemeFromUrl = require('../../utils/getSchemeFromUrl');\n\nconst isStandardSyntaxUrl = require('../../utils/isStandardSyntaxUrl');\n\nconst matchesStringOrRegExp = require('../../utils/matchesStringOrRegExp');\n\nconst report = require('../../utils/report');\n\nconst ruleMessages = require('../../utils/ruleMessages');\n\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'function-url-scheme-allowed-list';\nconst messages = ruleMessages(ruleName, {\n  rejected: scheme => `Unexpected URL scheme \"${scheme}:\"`\n});\n\nfunction rule(list) {\n  return (root, result) => {\n    const validOptions = validateOptions(result, ruleName, {\n      actual: list,\n      possible: [_.isString, _.isRegExp]\n    });\n\n    if (!validOptions) {\n      return;\n    }\n\n    root.walkDecls(decl => {\n      functionArgumentsSearch(decl.toString().toLowerCase(), 'url', (args, index) => {\n        const unspacedUrlString = _.trim(args, ' ');\n\n        if (!isStandardSyntaxUrl(unspacedUrlString)) {\n          return;\n        }\n\n        const urlString = _.trim(unspacedUrlString, '\\'\"');\n\n        const scheme = getSchemeFromUrl(urlString);\n\n        if (scheme === null) {\n          return;\n        }\n\n        if (matchesStringOrRegExp(scheme, list)) {\n          return;\n        }\n\n        report({\n          message: messages.rejected(scheme),\n          node: decl,\n          index,\n          result,\n          ruleName\n        });\n      });\n    });\n  };\n}\n\nrule.primaryOptionArray = true;\nrule.ruleName = ruleName;\nrule.messages = messages;\nmodule.exports = rule;","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/lib/rules/function-url-scheme-allowed-list/index.js"],"names":["_","require","functionArgumentsSearch","getSchemeFromUrl","isStandardSyntaxUrl","matchesStringOrRegExp","report","ruleMessages","validateOptions","ruleName","messages","rejected","scheme","rule","list","root","result","validOptions","actual","possible","isString","isRegExp","walkDecls","decl","toString","toLowerCase","args","index","unspacedUrlString","trim","urlString","message","node","primaryOptionArray","module","exports"],"mappings":"AAAA;AAEA;;AAEA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AACA,MAAMC,uBAAuB,GAAGD,OAAO,CAAC,qCAAD,CAAvC;;AACA,MAAME,gBAAgB,GAAGF,OAAO,CAAC,8BAAD,CAAhC;;AACA,MAAMG,mBAAmB,GAAGH,OAAO,CAAC,iCAAD,CAAnC;;AACA,MAAMI,qBAAqB,GAAGJ,OAAO,CAAC,mCAAD,CAArC;;AACA,MAAMK,MAAM,GAAGL,OAAO,CAAC,oBAAD,CAAtB;;AACA,MAAMM,YAAY,GAAGN,OAAO,CAAC,0BAAD,CAA5B;;AACA,MAAMO,eAAe,GAAGP,OAAO,CAAC,6BAAD,CAA/B;;AAEA,MAAMQ,QAAQ,GAAG,kCAAjB;AAEA,MAAMC,QAAQ,GAAGH,YAAY,CAACE,QAAD,EAAW;AACvCE,EAAAA,QAAQ,EAAGC,MAAD,IAAa,0BAAyBA,MAAO;AADhB,CAAX,CAA7B;;AAIA,SAASC,IAAT,CAAcC,IAAd,EAAoB;AACnB,SAAO,CAACC,IAAD,EAAOC,MAAP,KAAkB;AACxB,UAAMC,YAAY,GAAGT,eAAe,CAACQ,MAAD,EAASP,QAAT,EAAmB;AACtDS,MAAAA,MAAM,EAAEJ,IAD8C;AAEtDK,MAAAA,QAAQ,EAAE,CAACnB,CAAC,CAACoB,QAAH,EAAapB,CAAC,CAACqB,QAAf;AAF4C,KAAnB,CAApC;;AAKA,QAAI,CAACJ,YAAL,EAAmB;AAClB;AACA;;AAEDF,IAAAA,IAAI,CAACO,SAAL,CAAgBC,IAAD,IAAU;AACxBrB,MAAAA,uBAAuB,CAACqB,IAAI,CAACC,QAAL,GAAgBC,WAAhB,EAAD,EAAgC,KAAhC,EAAuC,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC9E,cAAMC,iBAAiB,GAAG5B,CAAC,CAAC6B,IAAF,CAAOH,IAAP,EAAa,GAAb,CAA1B;;AAEA,YAAI,CAACtB,mBAAmB,CAACwB,iBAAD,CAAxB,EAA6C;AAC5C;AACA;;AAED,cAAME,SAAS,GAAG9B,CAAC,CAAC6B,IAAF,CAAOD,iBAAP,EAA0B,KAA1B,CAAlB;;AACA,cAAMhB,MAAM,GAAGT,gBAAgB,CAAC2B,SAAD,CAA/B;;AAEA,YAAIlB,MAAM,KAAK,IAAf,EAAqB;AACpB;AACA;;AAED,YAAIP,qBAAqB,CAACO,MAAD,EAASE,IAAT,CAAzB,EAAyC;AACxC;AACA;;AAEDR,QAAAA,MAAM,CAAC;AACNyB,UAAAA,OAAO,EAAErB,QAAQ,CAACC,QAAT,CAAkBC,MAAlB,CADH;AAENoB,UAAAA,IAAI,EAAET,IAFA;AAGNI,UAAAA,KAHM;AAINX,UAAAA,MAJM;AAKNP,UAAAA;AALM,SAAD,CAAN;AAOA,OAzBsB,CAAvB;AA0BA,KA3BD;AA4BA,GAtCD;AAuCA;;AAEDI,IAAI,CAACoB,kBAAL,GAA0B,IAA1B;AAEApB,IAAI,CAACJ,QAAL,GAAgBA,QAAhB;AACAI,IAAI,CAACH,QAAL,GAAgBA,QAAhB;AACAwB,MAAM,CAACC,OAAP,GAAiBtB,IAAjB","sourcesContent":["// @ts-nocheck\n\n'use strict';\n\nconst _ = require('lodash');\nconst functionArgumentsSearch = require('../../utils/functionArgumentsSearch');\nconst getSchemeFromUrl = require('../../utils/getSchemeFromUrl');\nconst isStandardSyntaxUrl = require('../../utils/isStandardSyntaxUrl');\nconst matchesStringOrRegExp = require('../../utils/matchesStringOrRegExp');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'function-url-scheme-allowed-list';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (scheme) => `Unexpected URL scheme \"${scheme}:\"`,\n});\n\nfunction rule(list) {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: list,\n\t\t\tpossible: [_.isString, _.isRegExp],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\tfunctionArgumentsSearch(decl.toString().toLowerCase(), 'url', (args, index) => {\n\t\t\t\tconst unspacedUrlString = _.trim(args, ' ');\n\n\t\t\t\tif (!isStandardSyntaxUrl(unspacedUrlString)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst urlString = _.trim(unspacedUrlString, '\\'\"');\n\t\t\t\tconst scheme = getSchemeFromUrl(urlString);\n\n\t\t\t\tif (scheme === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (matchesStringOrRegExp(scheme, list)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.rejected(scheme),\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tindex,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n}\n\nrule.primaryOptionArray = true;\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nmodule.exports = rule;\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n/**\n * Contains helpers for working with vendor prefixes.\n *\n * Copied from https://github.com/postcss/postcss/commit/777c55b5d2a10605313a4972888f4f32005f5ac2\n *\n * @namespace vendor\n */\n\nmodule.exports = {\n  /**\n   * Returns the vendor prefix extracted from an input string.\n   *\n   * @param {string} prop String with or without vendor prefix.\n   *\n   * @return {string} vendor prefix or empty string\n   *\n   * @example\n   * vendor.prefix('-moz-tab-size') //=> '-moz-'\n   * vendor.prefix('tab-size')      //=> ''\n   */\n  prefix(prop) {\n    let match = prop.match(/^(-\\w+-)/);\n\n    if (match) {\n      return match[0];\n    }\n\n    return '';\n  },\n\n  /**\n   * Returns the input string stripped of its vendor prefix.\n   *\n   * @param {string} prop String with or without vendor prefix.\n   *\n   * @return {string} String name without vendor prefixes.\n   *\n   * @example\n   * vendor.unprefixed('-moz-tab-size') //=> 'tab-size'\n   */\n  unprefixed(prop) {\n    return prop.replace(/^-\\w+-/, '');\n  }\n\n};","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/lib/utils/vendor.js"],"names":["module","exports","prefix","prop","match","unprefixed","replace"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,OAAP,GAAiB;AAChB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCC,EAAAA,MAAM,CAACC,IAAD,EAAO;AACZ,QAAIC,KAAK,GAAGD,IAAI,CAACC,KAAL,CAAW,UAAX,CAAZ;;AAEA,QAAIA,KAAJ,EAAW;AACV,aAAOA,KAAK,CAAC,CAAD,CAAZ;AACA;;AAED,WAAO,EAAP;AACA,GApBe;;AAsBhB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCC,EAAAA,UAAU,CAACF,IAAD,EAAO;AAChB,WAAOA,IAAI,CAACG,OAAL,CAAa,QAAb,EAAuB,EAAvB,CAAP;AACA;;AAlCe,CAAjB","sourcesContent":["'use strict';\n\n/**\n * Contains helpers for working with vendor prefixes.\n *\n * Copied from https://github.com/postcss/postcss/commit/777c55b5d2a10605313a4972888f4f32005f5ac2\n *\n * @namespace vendor\n */\nmodule.exports = {\n\t/**\n\t * Returns the vendor prefix extracted from an input string.\n\t *\n\t * @param {string} prop String with or without vendor prefix.\n\t *\n\t * @return {string} vendor prefix or empty string\n\t *\n\t * @example\n\t * vendor.prefix('-moz-tab-size') //=> '-moz-'\n\t * vendor.prefix('tab-size')      //=> ''\n\t */\n\tprefix(prop) {\n\t\tlet match = prop.match(/^(-\\w+-)/);\n\n\t\tif (match) {\n\t\t\treturn match[0];\n\t\t}\n\n\t\treturn '';\n\t},\n\n\t/**\n\t * Returns the input string stripped of its vendor prefix.\n\t *\n\t * @param {string} prop String with or without vendor prefix.\n\t *\n\t * @return {string} String name without vendor prefixes.\n\t *\n\t * @example\n\t * vendor.unprefixed('-moz-tab-size') //=> 'tab-size'\n\t */\n\tunprefixed(prop) {\n\t\treturn prop.replace(/^-\\w+-/, '');\n\t},\n};\n"]},"metadata":{},"sourceType":"script"}
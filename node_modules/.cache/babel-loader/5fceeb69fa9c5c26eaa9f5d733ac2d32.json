{"ast":null,"code":"'use strict';\n\nconst _ = require('lodash');\n/** @typedef {import('postcss').Node} Node */\n\n/**\n * @param {Node | void} node\n */\n\n\nfunction getNodeLine(node) {\n  return _.get(node, 'source.start.line');\n}\n/**\n * @param {Node | void} node\n * @returns {Node | void}\n */\n\n\nmodule.exports = function getNextNonSharedLineCommentNode(node) {\n  if (node === undefined) {\n    return undefined;\n  }\n  /** @type {Node | void} */\n\n\n  const nextNode = node.next();\n\n  if (_.get(nextNode, 'type') !== 'comment') {\n    return nextNode;\n  }\n\n  if (getNodeLine(node) === getNodeLine(nextNode) || nextNode !== undefined && getNodeLine(nextNode) === getNodeLine(nextNode.next())) {\n    return getNextNonSharedLineCommentNode(nextNode);\n  }\n\n  return nextNode;\n};","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/lib/utils/getNextNonSharedLineCommentNode.js"],"names":["_","require","getNodeLine","node","get","module","exports","getNextNonSharedLineCommentNode","undefined","nextNode","next"],"mappings":"AAAA;;AAEA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;AAEA;;AAEA;AACA;AACA;;;AACA,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AAC1B,SAAOH,CAAC,CAACI,GAAF,CAAMD,IAAN,EAAY,mBAAZ,CAAP;AACA;AAED;AACA;AACA;AACA;;;AACAE,MAAM,CAACC,OAAP,GAAiB,SAASC,+BAAT,CAAyCJ,IAAzC,EAA+C;AAC/D,MAAIA,IAAI,KAAKK,SAAb,EAAwB;AACvB,WAAOA,SAAP;AACA;AAED;;;AACA,QAAMC,QAAQ,GAAGN,IAAI,CAACO,IAAL,EAAjB;;AAEA,MAAIV,CAAC,CAACI,GAAF,CAAMK,QAAN,EAAgB,MAAhB,MAA4B,SAAhC,EAA2C;AAC1C,WAAOA,QAAP;AACA;;AAED,MACCP,WAAW,CAACC,IAAD,CAAX,KAAsBD,WAAW,CAACO,QAAD,CAAjC,IACCA,QAAQ,KAAKD,SAAb,IAA0BN,WAAW,CAACO,QAAD,CAAX,KAA0BP,WAAW,CAACO,QAAQ,CAACC,IAAT,EAAD,CAFjE,EAGE;AACD,WAAOH,+BAA+B,CAACE,QAAD,CAAtC;AACA;;AAED,SAAOA,QAAP;AACA,CApBD","sourcesContent":["'use strict';\n\nconst _ = require('lodash');\n\n/** @typedef {import('postcss').Node} Node */\n\n/**\n * @param {Node | void} node\n */\nfunction getNodeLine(node) {\n\treturn _.get(node, 'source.start.line');\n}\n\n/**\n * @param {Node | void} node\n * @returns {Node | void}\n */\nmodule.exports = function getNextNonSharedLineCommentNode(node) {\n\tif (node === undefined) {\n\t\treturn undefined;\n\t}\n\n\t/** @type {Node | void} */\n\tconst nextNode = node.next();\n\n\tif (_.get(nextNode, 'type') !== 'comment') {\n\t\treturn nextNode;\n\t}\n\n\tif (\n\t\tgetNodeLine(node) === getNodeLine(nextNode) ||\n\t\t(nextNode !== undefined && getNodeLine(nextNode) === getNodeLine(nextNode.next()))\n\t) {\n\t\treturn getNextNonSharedLineCommentNode(nextNode);\n\t}\n\n\treturn nextNode;\n};\n"]},"metadata":{},"sourceType":"script"}
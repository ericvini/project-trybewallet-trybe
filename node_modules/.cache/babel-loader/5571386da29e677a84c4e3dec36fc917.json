{"ast":null,"code":"'use strict';\n\nconst blurInterpolation = require('./blurInterpolation');\n\nconst isStandardSyntaxValue = require('./isStandardSyntaxValue');\n\nconst valueParser = require('postcss-value-parser');\n/**\n * Get unit from value node\n *\n * Returns `null` if the unit is not found.\n *\n * @param {import('postcss-value-parser').Node} node\n *\n * @returns {string | null}\n */\n\n\nmodule.exports = function (node) {\n  if (!node || !node.value) {\n    return null;\n  } // Ignore non-word nodes\n\n\n  if (node.type !== 'word') {\n    return null;\n  } // Ignore non standard syntax\n\n\n  if (!isStandardSyntaxValue(node.value)) {\n    return null;\n  } // Ignore HEX\n\n\n  if (node.value.startsWith('#')) {\n    return null;\n  } // Remove non standard stuff\n\n\n  const value = blurInterpolation(node.value, '') // ignore hack unit\n  .replace('\\\\0', '').replace('\\\\9', '');\n  const parsedUnit = valueParser.unit(value);\n\n  if (!parsedUnit) {\n    return null;\n  }\n\n  return parsedUnit.unit;\n};","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/lib/utils/getUnitFromValueNode.js"],"names":["blurInterpolation","require","isStandardSyntaxValue","valueParser","module","exports","node","value","type","startsWith","replace","parsedUnit","unit"],"mappings":"AAAA;;AAEA,MAAMA,iBAAiB,GAAGC,OAAO,CAAC,qBAAD,CAAjC;;AACA,MAAMC,qBAAqB,GAAGD,OAAO,CAAC,yBAAD,CAArC;;AACA,MAAME,WAAW,GAAGF,OAAO,CAAC,sBAAD,CAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAG,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAChC,MAAI,CAACA,IAAD,IAAS,CAACA,IAAI,CAACC,KAAnB,EAA0B;AACzB,WAAO,IAAP;AACA,GAH+B,CAKhC;;;AACA,MAAID,IAAI,CAACE,IAAL,KAAc,MAAlB,EAA0B;AACzB,WAAO,IAAP;AACA,GAR+B,CAUhC;;;AACA,MAAI,CAACN,qBAAqB,CAACI,IAAI,CAACC,KAAN,CAA1B,EAAwC;AACvC,WAAO,IAAP;AACA,GAb+B,CAehC;;;AACA,MAAID,IAAI,CAACC,KAAL,CAAWE,UAAX,CAAsB,GAAtB,CAAJ,EAAgC;AAC/B,WAAO,IAAP;AACA,GAlB+B,CAoBhC;;;AACA,QAAMF,KAAK,GAAGP,iBAAiB,CAACM,IAAI,CAACC,KAAN,EAAa,EAAb,CAAjB,CACb;AADa,GAEZG,OAFY,CAEJ,KAFI,EAEG,EAFH,EAGZA,OAHY,CAGJ,KAHI,EAGG,EAHH,CAAd;AAKA,QAAMC,UAAU,GAAGR,WAAW,CAACS,IAAZ,CAAiBL,KAAjB,CAAnB;;AAEA,MAAI,CAACI,UAAL,EAAiB;AAChB,WAAO,IAAP;AACA;;AAED,SAAOA,UAAU,CAACC,IAAlB;AACA,CAjCD","sourcesContent":["'use strict';\n\nconst blurInterpolation = require('./blurInterpolation');\nconst isStandardSyntaxValue = require('./isStandardSyntaxValue');\nconst valueParser = require('postcss-value-parser');\n\n/**\n * Get unit from value node\n *\n * Returns `null` if the unit is not found.\n *\n * @param {import('postcss-value-parser').Node} node\n *\n * @returns {string | null}\n */\nmodule.exports = function (node) {\n\tif (!node || !node.value) {\n\t\treturn null;\n\t}\n\n\t// Ignore non-word nodes\n\tif (node.type !== 'word') {\n\t\treturn null;\n\t}\n\n\t// Ignore non standard syntax\n\tif (!isStandardSyntaxValue(node.value)) {\n\t\treturn null;\n\t}\n\n\t// Ignore HEX\n\tif (node.value.startsWith('#')) {\n\t\treturn null;\n\t}\n\n\t// Remove non standard stuff\n\tconst value = blurInterpolation(node.value, '')\n\t\t// ignore hack unit\n\t\t.replace('\\\\0', '')\n\t\t.replace('\\\\9', '');\n\n\tconst parsedUnit = valueParser.unit(value);\n\n\tif (!parsedUnit) {\n\t\treturn null;\n\t}\n\n\treturn parsedUnit.unit;\n};\n"]},"metadata":{},"sourceType":"script"}
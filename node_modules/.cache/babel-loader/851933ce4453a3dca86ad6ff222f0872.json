{"ast":null,"code":"// @ts-nocheck\n'use strict';\n\nconst _ = require('lodash');\n\nconst isCustomProperty = require('../../utils/isCustomProperty');\n\nconst isStandardSyntaxDeclaration = require('../../utils/isStandardSyntaxDeclaration');\n\nconst isStandardSyntaxProperty = require('../../utils/isStandardSyntaxProperty');\n\nconst optionsMatches = require('../../utils/optionsMatches');\n\nconst properties = require('known-css-properties').all;\n\nconst report = require('../../utils/report');\n\nconst ruleMessages = require('../../utils/ruleMessages');\n\nconst validateOptions = require('../../utils/validateOptions');\n\nconst vendor = require('../../utils/vendor');\n\nconst ruleName = 'property-no-unknown';\nconst messages = ruleMessages(ruleName, {\n  rejected: property => `Unexpected unknown property \"${property}\"`\n});\n\nfunction rule(actual, options) {\n  const allValidProperties = new Set(properties);\n  return (root, result) => {\n    const validOptions = validateOptions(result, ruleName, {\n      actual\n    }, {\n      actual: options,\n      possible: {\n        ignoreProperties: [_.isString, _.isRegExp],\n        checkPrefixed: _.isBoolean,\n        ignoreSelectors: [_.isString, _.isRegExp],\n        ignoreAtRules: [_.isString, _.isRegExp]\n      },\n      optional: true\n    });\n\n    if (!validOptions) {\n      return;\n    }\n\n    const shouldCheckPrefixed = _.get(options, 'checkPrefixed');\n\n    root.walkDecls(checkStatement);\n\n    function checkStatement(decl) {\n      const prop = decl.prop;\n\n      if (!isStandardSyntaxProperty(prop)) {\n        return;\n      }\n\n      if (!isStandardSyntaxDeclaration(decl)) {\n        return;\n      }\n\n      if (isCustomProperty(prop)) {\n        return;\n      }\n\n      if (!shouldCheckPrefixed && vendor.prefix(prop)) {\n        return;\n      }\n\n      if (optionsMatches(options, 'ignoreProperties', prop)) {\n        return;\n      }\n\n      const {\n        selector\n      } = decl.parent;\n\n      if (selector && optionsMatches(options, 'ignoreSelectors', selector)) {\n        return;\n      }\n\n      let node = decl.parent;\n\n      while (node && node.type !== 'root') {\n        const {\n          type,\n          name\n        } = node;\n\n        if (type === 'atrule' && optionsMatches(options, 'ignoreAtRules', name)) {\n          return;\n        }\n\n        node = node.parent;\n      }\n\n      if (allValidProperties.has(prop.toLowerCase())) {\n        return;\n      }\n\n      report({\n        message: messages.rejected(prop),\n        node: decl,\n        result,\n        ruleName\n      });\n    }\n  };\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nmodule.exports = rule;","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/lib/rules/property-no-unknown/index.js"],"names":["_","require","isCustomProperty","isStandardSyntaxDeclaration","isStandardSyntaxProperty","optionsMatches","properties","all","report","ruleMessages","validateOptions","vendor","ruleName","messages","rejected","property","rule","actual","options","allValidProperties","Set","root","result","validOptions","possible","ignoreProperties","isString","isRegExp","checkPrefixed","isBoolean","ignoreSelectors","ignoreAtRules","optional","shouldCheckPrefixed","get","walkDecls","checkStatement","decl","prop","prefix","selector","parent","node","type","name","has","toLowerCase","message","module","exports"],"mappings":"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","sourcesContent":["// @ts-nocheck\n\n'use strict';\n\nconst _ = require('lodash');\nconst isCustomProperty = require('../../utils/isCustomProperty');\nconst isStandardSyntaxDeclaration = require('../../utils/isStandardSyntaxDeclaration');\nconst isStandardSyntaxProperty = require('../../utils/isStandardSyntaxProperty');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst properties = require('known-css-properties').all;\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst vendor = require('../../utils/vendor');\n\nconst ruleName = 'property-no-unknown';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (property) => `Unexpected unknown property \"${property}\"`,\n});\n\nfunction rule(actual, options) {\n\tconst allValidProperties = new Set(properties);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{ actual },\n\t\t\t{\n\t\t\t\tactual: options,\n\t\t\t\tpossible: {\n\t\t\t\t\tignoreProperties: [_.isString, _.isRegExp],\n\t\t\t\t\tcheckPrefixed: _.isBoolean,\n\t\t\t\t\tignoreSelectors: [_.isString, _.isRegExp],\n\t\t\t\t\tignoreAtRules: [_.isString, _.isRegExp],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst shouldCheckPrefixed = _.get(options, 'checkPrefixed');\n\n\t\troot.walkDecls(checkStatement);\n\n\t\tfunction checkStatement(decl) {\n\t\t\tconst prop = decl.prop;\n\n\t\t\tif (!isStandardSyntaxProperty(prop)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!isStandardSyntaxDeclaration(decl)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (isCustomProperty(prop)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!shouldCheckPrefixed && vendor.prefix(prop)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (optionsMatches(options, 'ignoreProperties', prop)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { selector } = decl.parent;\n\n\t\t\tif (selector && optionsMatches(options, 'ignoreSelectors', selector)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet node = decl.parent;\n\n\t\t\twhile (node && node.type !== 'root') {\n\t\t\t\tconst { type, name } = node;\n\n\t\t\t\tif (type === 'atrule' && optionsMatches(options, 'ignoreAtRules', name)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tnode = node.parent;\n\t\t\t}\n\n\t\t\tif (allValidProperties.has(prop.toLowerCase())) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treport({\n\t\t\t\tmessage: messages.rejected(prop),\n\t\t\t\tnode: decl,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t});\n\t\t}\n\t};\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nmodule.exports = rule;\n"]},"metadata":{},"sourceType":"script"}
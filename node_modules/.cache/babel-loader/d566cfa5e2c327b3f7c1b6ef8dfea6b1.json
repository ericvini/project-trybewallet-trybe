{"ast":null,"code":"// @ts-nocheck\n'use strict';\n\nconst isStandardSyntaxAtRule = require('../utils/isStandardSyntaxAtRule');\n\nconst report = require('../utils/report');\n\nmodule.exports = function (options) {\n  options.root.walkAtRules(atRule => {\n    if (!isStandardSyntaxAtRule(atRule)) {\n      return;\n    }\n\n    checkColon(`@${atRule.name}${atRule.raws.afterName || ''}${atRule.params}`, atRule.name.length, atRule);\n  });\n\n  function checkColon(source, index, node) {\n    options.locationChecker({\n      source,\n      index,\n      err: m => {\n        if (options.fix) {\n          options.fix(node);\n          return;\n        }\n\n        report({\n          message: m,\n          node,\n          index,\n          result: options.result,\n          ruleName: options.checkedRuleName\n        });\n      },\n      errTarget: `@${node.name}`\n    });\n  }\n};","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/lib/rules/atRuleNameSpaceChecker.js"],"names":["isStandardSyntaxAtRule","require","report","module","exports","options","root","walkAtRules","atRule","checkColon","name","raws","afterName","params","length","source","index","node","locationChecker","err","m","fix","message","result","ruleName","checkedRuleName","errTarget"],"mappings":"AAAA;AAEA;;AAEA,MAAMA,sBAAsB,GAAGC,OAAO,CAAC,iCAAD,CAAtC;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,iBAAD,CAAtB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,UAAUC,OAAV,EAAmB;AACnCA,EAAAA,OAAO,CAACC,IAAR,CAAaC,WAAb,CAA0BC,MAAD,IAAY;AACpC,QAAI,CAACR,sBAAsB,CAACQ,MAAD,CAA3B,EAAqC;AACpC;AACA;;AAEDC,IAAAA,UAAU,CACR,IAAGD,MAAM,CAACE,IAAK,GAAEF,MAAM,CAACG,IAAP,CAAYC,SAAZ,IAAyB,EAAG,GAAEJ,MAAM,CAACK,MAAO,EADrD,EAETL,MAAM,CAACE,IAAP,CAAYI,MAFH,EAGTN,MAHS,CAAV;AAKA,GAVD;;AAYA,WAASC,UAAT,CAAoBM,MAApB,EAA4BC,KAA5B,EAAmCC,IAAnC,EAAyC;AACxCZ,IAAAA,OAAO,CAACa,eAAR,CAAwB;AACvBH,MAAAA,MADuB;AAEvBC,MAAAA,KAFuB;AAGvBG,MAAAA,GAAG,EAAGC,CAAD,IAAO;AACX,YAAIf,OAAO,CAACgB,GAAZ,EAAiB;AAChBhB,UAAAA,OAAO,CAACgB,GAAR,CAAYJ,IAAZ;AAEA;AACA;;AAEDf,QAAAA,MAAM,CAAC;AACNoB,UAAAA,OAAO,EAAEF,CADH;AAENH,UAAAA,IAFM;AAGND,UAAAA,KAHM;AAINO,UAAAA,MAAM,EAAElB,OAAO,CAACkB,MAJV;AAKNC,UAAAA,QAAQ,EAAEnB,OAAO,CAACoB;AALZ,SAAD,CAAN;AAOA,OAjBsB;AAkBvBC,MAAAA,SAAS,EAAG,IAAGT,IAAI,CAACP,IAAK;AAlBF,KAAxB;AAoBA;AACD,CAnCD","sourcesContent":["// @ts-nocheck\n\n'use strict';\n\nconst isStandardSyntaxAtRule = require('../utils/isStandardSyntaxAtRule');\nconst report = require('../utils/report');\n\nmodule.exports = function (options) {\n\toptions.root.walkAtRules((atRule) => {\n\t\tif (!isStandardSyntaxAtRule(atRule)) {\n\t\t\treturn;\n\t\t}\n\n\t\tcheckColon(\n\t\t\t`@${atRule.name}${atRule.raws.afterName || ''}${atRule.params}`,\n\t\t\tatRule.name.length,\n\t\t\tatRule,\n\t\t);\n\t});\n\n\tfunction checkColon(source, index, node) {\n\t\toptions.locationChecker({\n\t\t\tsource,\n\t\t\tindex,\n\t\t\terr: (m) => {\n\t\t\t\tif (options.fix) {\n\t\t\t\t\toptions.fix(node);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: m,\n\t\t\t\t\tnode,\n\t\t\t\t\tindex,\n\t\t\t\t\tresult: options.result,\n\t\t\t\t\truleName: options.checkedRuleName,\n\t\t\t\t});\n\t\t\t},\n\t\t\terrTarget: `@${node.name}`,\n\t\t});\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}
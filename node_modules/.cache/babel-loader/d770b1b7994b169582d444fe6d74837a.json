{"ast":null,"code":"// @ts-nocheck\n'use strict';\n\nconst _ = require('lodash');\n\nconst htmlTags = require('html-tags');\n\nconst isCustomElement = require('../../utils/isCustomElement');\n\nconst isKeyframeSelector = require('../../utils/isKeyframeSelector');\n\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\n\nconst isStandardSyntaxTypeSelector = require('../../utils/isStandardSyntaxTypeSelector');\n\nconst keywordSets = require('../../reference/keywordSets');\n\nconst mathMLTags = require('mathml-tag-names');\n\nconst optionsMatches = require('../../utils/optionsMatches');\n\nconst parseSelector = require('../../utils/parseSelector');\n\nconst report = require('../../utils/report');\n\nconst ruleMessages = require('../../utils/ruleMessages');\n\nconst svgTags = require('svg-tags');\n\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'selector-type-no-unknown';\nconst messages = ruleMessages(ruleName, {\n  rejected: selector => `Unexpected unknown type selector \"${selector}\"`\n});\n\nfunction rule(actual, options) {\n  return (root, result) => {\n    const validOptions = validateOptions(result, ruleName, {\n      actual\n    }, {\n      actual: options,\n      possible: {\n        ignore: ['custom-elements', 'default-namespace'],\n        ignoreNamespaces: [_.isString, _.isRegExp],\n        ignoreTypes: [_.isString, _.isRegExp]\n      },\n      optional: true\n    });\n\n    if (!validOptions) {\n      return;\n    } // TODO: Issue #4985\n    // eslint-disable-next-line no-shadow\n\n\n    root.walkRules(rule => {\n      const selector = rule.selector;\n      const selectors = rule.selectors;\n\n      if (!isStandardSyntaxRule(rule)) {\n        return;\n      }\n\n      if (selectors.some(s => isKeyframeSelector(s))) {\n        return;\n      }\n\n      parseSelector(selector, result, rule, selectorTree => {\n        selectorTree.walkTags(tagNode => {\n          if (!isStandardSyntaxTypeSelector(tagNode)) {\n            return;\n          }\n\n          if (optionsMatches(options, 'ignore', 'custom-elements') && isCustomElement(tagNode.value)) {\n            return;\n          }\n\n          if (optionsMatches(options, 'ignore', 'default-namespace') && !(typeof tagNode.namespace === 'string')) {\n            return;\n          }\n\n          if (optionsMatches(options, 'ignoreNamespaces', tagNode.namespace)) {\n            return;\n          }\n\n          if (optionsMatches(options, 'ignoreTypes', tagNode.value)) {\n            return;\n          }\n\n          const tagName = tagNode.value;\n          const tagNameLowerCase = tagName.toLowerCase();\n\n          if (htmlTags.includes(tagNameLowerCase) || // SVG tags are case-sensitive\n          svgTags.includes(tagName) || keywordSets.nonStandardHtmlTags.has(tagNameLowerCase) || mathMLTags.includes(tagNameLowerCase)) {\n            return;\n          }\n\n          report({\n            message: messages.rejected(tagName),\n            node: rule,\n            index: tagNode.sourceIndex,\n            ruleName,\n            result\n          });\n        });\n      });\n    });\n  };\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nmodule.exports = rule;","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/lib/rules/selector-type-no-unknown/index.js"],"names":["_","require","htmlTags","isCustomElement","isKeyframeSelector","isStandardSyntaxRule","isStandardSyntaxTypeSelector","keywordSets","mathMLTags","optionsMatches","parseSelector","report","ruleMessages","svgTags","validateOptions","ruleName","messages","rejected","selector","rule","actual","options","root","result","validOptions","possible","ignore","ignoreNamespaces","isString","isRegExp","ignoreTypes","optional","walkRules","selectors","some","s","selectorTree","walkTags","tagNode","value","namespace","tagName","tagNameLowerCase","toLowerCase","includes","nonStandardHtmlTags","has","message","node","index","sourceIndex","module","exports"],"mappings":"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","sourcesContent":["// @ts-nocheck\n\n'use strict';\n\nconst _ = require('lodash');\nconst htmlTags = require('html-tags');\nconst isCustomElement = require('../../utils/isCustomElement');\nconst isKeyframeSelector = require('../../utils/isKeyframeSelector');\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst isStandardSyntaxTypeSelector = require('../../utils/isStandardSyntaxTypeSelector');\nconst keywordSets = require('../../reference/keywordSets');\nconst mathMLTags = require('mathml-tag-names');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst svgTags = require('svg-tags');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'selector-type-no-unknown';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (selector) => `Unexpected unknown type selector \"${selector}\"`,\n});\n\nfunction rule(actual, options) {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{ actual },\n\t\t\t{\n\t\t\t\tactual: options,\n\t\t\t\tpossible: {\n\t\t\t\t\tignore: ['custom-elements', 'default-namespace'],\n\t\t\t\t\tignoreNamespaces: [_.isString, _.isRegExp],\n\t\t\t\t\tignoreTypes: [_.isString, _.isRegExp],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO: Issue #4985\n\t\t// eslint-disable-next-line no-shadow\n\t\troot.walkRules((rule) => {\n\t\t\tconst selector = rule.selector;\n\t\t\tconst selectors = rule.selectors;\n\n\t\t\tif (!isStandardSyntaxRule(rule)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (selectors.some((s) => isKeyframeSelector(s))) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tparseSelector(selector, result, rule, (selectorTree) => {\n\t\t\t\tselectorTree.walkTags((tagNode) => {\n\t\t\t\t\tif (!isStandardSyntaxTypeSelector(tagNode)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\toptionsMatches(options, 'ignore', 'custom-elements') &&\n\t\t\t\t\t\tisCustomElement(tagNode.value)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\toptionsMatches(options, 'ignore', 'default-namespace') &&\n\t\t\t\t\t\t!(typeof tagNode.namespace === 'string')\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (optionsMatches(options, 'ignoreNamespaces', tagNode.namespace)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (optionsMatches(options, 'ignoreTypes', tagNode.value)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst tagName = tagNode.value;\n\t\t\t\t\tconst tagNameLowerCase = tagName.toLowerCase();\n\n\t\t\t\t\tif (\n\t\t\t\t\t\thtmlTags.includes(tagNameLowerCase) ||\n\t\t\t\t\t\t// SVG tags are case-sensitive\n\t\t\t\t\t\tsvgTags.includes(tagName) ||\n\t\t\t\t\t\tkeywordSets.nonStandardHtmlTags.has(tagNameLowerCase) ||\n\t\t\t\t\t\tmathMLTags.includes(tagNameLowerCase)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: messages.rejected(tagName),\n\t\t\t\t\t\tnode: rule,\n\t\t\t\t\t\tindex: tagNode.sourceIndex,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nmodule.exports = rule;\n"]},"metadata":{},"sourceType":"script"}
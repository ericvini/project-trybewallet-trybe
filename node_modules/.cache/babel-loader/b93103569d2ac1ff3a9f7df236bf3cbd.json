{"ast":null,"code":"// @ts-nocheck\n'use strict';\n\nconst isStandardSyntaxRule = require('../utils/isStandardSyntaxRule');\n\nconst report = require('../utils/report');\n\nconst styleSearch = require('style-search');\n\nmodule.exports = function (opts) {\n  opts.root.walkRules(rule => {\n    if (!isStandardSyntaxRule(rule)) {\n      return;\n    }\n\n    const selector = rule.raws.selector ? rule.raws.selector.raw : rule.selector;\n    styleSearch({\n      source: selector,\n      target: ',',\n      functionArguments: 'skip'\n    }, match => {\n      checkDelimiter(selector, match.startIndex, rule);\n    });\n  });\n\n  function checkDelimiter(source, index, node) {\n    opts.locationChecker({\n      source,\n      index,\n      err: m => {\n        if (opts.fix && opts.fix(node, index)) {\n          return;\n        }\n\n        report({\n          message: m,\n          node,\n          index,\n          result: opts.result,\n          ruleName: opts.checkedRuleName\n        });\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/lib/rules/selectorListCommaWhitespaceChecker.js"],"names":["isStandardSyntaxRule","require","report","styleSearch","module","exports","opts","root","walkRules","rule","selector","raws","raw","source","target","functionArguments","match","checkDelimiter","startIndex","index","node","locationChecker","err","m","fix","message","result","ruleName","checkedRuleName"],"mappings":"AAAA;AAEA;;AAEA,MAAMA,oBAAoB,GAAGC,OAAO,CAAC,+BAAD,CAApC;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,iBAAD,CAAtB;;AACA,MAAME,WAAW,GAAGF,OAAO,CAAC,cAAD,CAA3B;;AAEAG,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAChCA,EAAAA,IAAI,CAACC,IAAL,CAAUC,SAAV,CAAqBC,IAAD,IAAU;AAC7B,QAAI,CAACT,oBAAoB,CAACS,IAAD,CAAzB,EAAiC;AAChC;AACA;;AAED,UAAMC,QAAQ,GAAGD,IAAI,CAACE,IAAL,CAAUD,QAAV,GAAqBD,IAAI,CAACE,IAAL,CAAUD,QAAV,CAAmBE,GAAxC,GAA8CH,IAAI,CAACC,QAApE;AAEAP,IAAAA,WAAW,CACV;AACCU,MAAAA,MAAM,EAAEH,QADT;AAECI,MAAAA,MAAM,EAAE,GAFT;AAGCC,MAAAA,iBAAiB,EAAE;AAHpB,KADU,EAMTC,KAAD,IAAW;AACVC,MAAAA,cAAc,CAACP,QAAD,EAAWM,KAAK,CAACE,UAAjB,EAA6BT,IAA7B,CAAd;AACA,KARS,CAAX;AAUA,GAjBD;;AAmBA,WAASQ,cAAT,CAAwBJ,MAAxB,EAAgCM,KAAhC,EAAuCC,IAAvC,EAA6C;AAC5Cd,IAAAA,IAAI,CAACe,eAAL,CAAqB;AACpBR,MAAAA,MADoB;AAEpBM,MAAAA,KAFoB;AAGpBG,MAAAA,GAAG,EAAGC,CAAD,IAAO;AACX,YAAIjB,IAAI,CAACkB,GAAL,IAAYlB,IAAI,CAACkB,GAAL,CAASJ,IAAT,EAAeD,KAAf,CAAhB,EAAuC;AACtC;AACA;;AAEDjB,QAAAA,MAAM,CAAC;AACNuB,UAAAA,OAAO,EAAEF,CADH;AAENH,UAAAA,IAFM;AAGND,UAAAA,KAHM;AAINO,UAAAA,MAAM,EAAEpB,IAAI,CAACoB,MAJP;AAKNC,UAAAA,QAAQ,EAAErB,IAAI,CAACsB;AALT,SAAD,CAAN;AAOA;AAfmB,KAArB;AAiBA;AACD,CAvCD","sourcesContent":["// @ts-nocheck\n\n'use strict';\n\nconst isStandardSyntaxRule = require('../utils/isStandardSyntaxRule');\nconst report = require('../utils/report');\nconst styleSearch = require('style-search');\n\nmodule.exports = function (opts) {\n\topts.root.walkRules((rule) => {\n\t\tif (!isStandardSyntaxRule(rule)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst selector = rule.raws.selector ? rule.raws.selector.raw : rule.selector;\n\n\t\tstyleSearch(\n\t\t\t{\n\t\t\t\tsource: selector,\n\t\t\t\ttarget: ',',\n\t\t\t\tfunctionArguments: 'skip',\n\t\t\t},\n\t\t\t(match) => {\n\t\t\t\tcheckDelimiter(selector, match.startIndex, rule);\n\t\t\t},\n\t\t);\n\t});\n\n\tfunction checkDelimiter(source, index, node) {\n\t\topts.locationChecker({\n\t\t\tsource,\n\t\t\tindex,\n\t\t\terr: (m) => {\n\t\t\t\tif (opts.fix && opts.fix(node, index)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: m,\n\t\t\t\t\tnode,\n\t\t\t\t\tindex,\n\t\t\t\t\tresult: opts.result,\n\t\t\t\t\truleName: opts.checkedRuleName,\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}
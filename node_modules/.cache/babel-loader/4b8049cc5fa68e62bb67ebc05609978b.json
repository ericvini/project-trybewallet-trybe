{"ast":null,"code":"// @ts-nocheck\n'use strict';\n\nconst report = require('../../utils/report');\n\nconst ruleMessages = require('../../utils/ruleMessages');\n\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'comment-no-empty';\nconst messages = ruleMessages(ruleName, {\n  rejected: 'Unexpected empty comment'\n});\n\nfunction rule(actual) {\n  return (root, result) => {\n    const validOptions = validateOptions(result, ruleName, {\n      actual\n    });\n\n    if (!validOptions) {\n      return;\n    }\n\n    root.walkComments(comment => {\n      // To ignore inline SCSS comments\n      if (comment.raws.inline || comment.inline) {\n        return;\n      } // To ignore comments that are not empty\n\n\n      if (comment.text && comment.text.length !== 0) {\n        return;\n      }\n\n      report({\n        message: messages.rejected,\n        node: comment,\n        result,\n        ruleName\n      });\n    });\n  };\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nmodule.exports = rule;","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/lib/rules/comment-no-empty/index.js"],"names":["report","require","ruleMessages","validateOptions","ruleName","messages","rejected","rule","actual","root","result","validOptions","walkComments","comment","raws","inline","text","length","message","node","module","exports"],"mappings":"AAAA;AAEA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,oBAAD,CAAtB;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,0BAAD,CAA5B;;AACA,MAAME,eAAe,GAAGF,OAAO,CAAC,6BAAD,CAA/B;;AAEA,MAAMG,QAAQ,GAAG,kBAAjB;AAEA,MAAMC,QAAQ,GAAGH,YAAY,CAACE,QAAD,EAAW;AACvCE,EAAAA,QAAQ,EAAE;AAD6B,CAAX,CAA7B;;AAIA,SAASC,IAAT,CAAcC,MAAd,EAAsB;AACrB,SAAO,CAACC,IAAD,EAAOC,MAAP,KAAkB;AACxB,UAAMC,YAAY,GAAGR,eAAe,CAACO,MAAD,EAASN,QAAT,EAAmB;AAAEI,MAAAA;AAAF,KAAnB,CAApC;;AAEA,QAAI,CAACG,YAAL,EAAmB;AAClB;AACA;;AAEDF,IAAAA,IAAI,CAACG,YAAL,CAAmBC,OAAD,IAAa;AAC9B;AACA,UAAIA,OAAO,CAACC,IAAR,CAAaC,MAAb,IAAuBF,OAAO,CAACE,MAAnC,EAA2C;AAC1C;AACA,OAJ6B,CAM9B;;;AACA,UAAIF,OAAO,CAACG,IAAR,IAAgBH,OAAO,CAACG,IAAR,CAAaC,MAAb,KAAwB,CAA5C,EAA+C;AAC9C;AACA;;AAEDjB,MAAAA,MAAM,CAAC;AACNkB,QAAAA,OAAO,EAAEb,QAAQ,CAACC,QADZ;AAENa,QAAAA,IAAI,EAAEN,OAFA;AAGNH,QAAAA,MAHM;AAINN,QAAAA;AAJM,OAAD,CAAN;AAMA,KAjBD;AAkBA,GAzBD;AA0BA;;AAEDG,IAAI,CAACH,QAAL,GAAgBA,QAAhB;AACAG,IAAI,CAACF,QAAL,GAAgBA,QAAhB;AACAe,MAAM,CAACC,OAAP,GAAiBd,IAAjB","sourcesContent":["// @ts-nocheck\n\n'use strict';\n\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'comment-no-empty';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: 'Unexpected empty comment',\n});\n\nfunction rule(actual) {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, { actual });\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkComments((comment) => {\n\t\t\t// To ignore inline SCSS comments\n\t\t\tif (comment.raws.inline || comment.inline) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// To ignore comments that are not empty\n\t\t\tif (comment.text && comment.text.length !== 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treport({\n\t\t\t\tmessage: messages.rejected,\n\t\t\t\tnode: comment,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t});\n\t\t});\n\t};\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nmodule.exports = rule;\n"]},"metadata":{},"sourceType":"script"}
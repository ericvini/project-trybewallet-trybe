{"ast":null,"code":"'use strict';\n\nconst hasInterpolation = require('../utils/hasInterpolation');\n/**\n * Check whether a value is standard\n *\n * @param {string} value\n * @returns {boolean}\n */\n\n\nmodule.exports = function (value) {\n  let normalizedValue = value; // Ignore operators before variables (example -$variable)\n\n  if (/^[-+*/]/.test(value[0])) {\n    normalizedValue = normalizedValue.slice(1);\n  } // SCSS variable (example $variable)\n\n\n  if (normalizedValue.startsWith('$')) {\n    return false;\n  } // SCSS namespace (example namespace.$variable)\n\n\n  if (/^.+\\.\\$/.test(value)) {\n    return false;\n  } // Less variable\n\n\n  if (normalizedValue.startsWith('@')) {\n    return false;\n  } // SCSS or Less interpolation\n\n\n  if (hasInterpolation(normalizedValue)) {\n    return false;\n  } // WebExtension replacement keyword used by Chrome/Firefox\n  // more information: https://developer.chrome.com/extensions/i18n\n  // and https://github.com/stylelint/stylelint/issues/4707\n\n\n  if (/__MSG_[^\\s]+__/.test(value)) {\n    return false;\n  }\n\n  return true;\n};","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/lib/utils/isStandardSyntaxValue.js"],"names":["hasInterpolation","require","module","exports","value","normalizedValue","test","slice","startsWith"],"mappings":"AAAA;;AAEA,MAAMA,gBAAgB,GAAGC,OAAO,CAAC,2BAAD,CAAhC;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,KAAV,EAAiB;AACjC,MAAIC,eAAe,GAAGD,KAAtB,CADiC,CAGjC;;AACA,MAAI,UAAUE,IAAV,CAAeF,KAAK,CAAC,CAAD,CAApB,CAAJ,EAA8B;AAC7BC,IAAAA,eAAe,GAAGA,eAAe,CAACE,KAAhB,CAAsB,CAAtB,CAAlB;AACA,GANgC,CAQjC;;;AACA,MAAIF,eAAe,CAACG,UAAhB,CAA2B,GAA3B,CAAJ,EAAqC;AACpC,WAAO,KAAP;AACA,GAXgC,CAajC;;;AACA,MAAI,UAAUF,IAAV,CAAeF,KAAf,CAAJ,EAA2B;AAC1B,WAAO,KAAP;AACA,GAhBgC,CAkBjC;;;AACA,MAAIC,eAAe,CAACG,UAAhB,CAA2B,GAA3B,CAAJ,EAAqC;AACpC,WAAO,KAAP;AACA,GArBgC,CAuBjC;;;AACA,MAAIR,gBAAgB,CAACK,eAAD,CAApB,EAAuC;AACtC,WAAO,KAAP;AACA,GA1BgC,CA4BjC;AACA;AACA;;;AACA,MAAI,iBAAiBC,IAAjB,CAAsBF,KAAtB,CAAJ,EAAkC;AACjC,WAAO,KAAP;AACA;;AAED,SAAO,IAAP;AACA,CApCD","sourcesContent":["'use strict';\n\nconst hasInterpolation = require('../utils/hasInterpolation');\n\n/**\n * Check whether a value is standard\n *\n * @param {string} value\n * @returns {boolean}\n */\nmodule.exports = function (value) {\n\tlet normalizedValue = value;\n\n\t// Ignore operators before variables (example -$variable)\n\tif (/^[-+*/]/.test(value[0])) {\n\t\tnormalizedValue = normalizedValue.slice(1);\n\t}\n\n\t// SCSS variable (example $variable)\n\tif (normalizedValue.startsWith('$')) {\n\t\treturn false;\n\t}\n\n\t// SCSS namespace (example namespace.$variable)\n\tif (/^.+\\.\\$/.test(value)) {\n\t\treturn false;\n\t}\n\n\t// Less variable\n\tif (normalizedValue.startsWith('@')) {\n\t\treturn false;\n\t}\n\n\t// SCSS or Less interpolation\n\tif (hasInterpolation(normalizedValue)) {\n\t\treturn false;\n\t}\n\n\t// WebExtension replacement keyword used by Chrome/Firefox\n\t// more information: https://developer.chrome.com/extensions/i18n\n\t// and https://github.com/stylelint/stylelint/issues/4707\n\tif (/__MSG_[^\\s]+__/.test(value)) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n"]},"metadata":{},"sourceType":"script"}
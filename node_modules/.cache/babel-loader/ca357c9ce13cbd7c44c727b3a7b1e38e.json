{"ast":null,"code":"// @ts-nocheck\n'use strict';\n\nconst isStandardSyntaxDeclaration = require('../utils/isStandardSyntaxDeclaration');\n\nconst isStandardSyntaxProperty = require('../utils/isStandardSyntaxProperty');\n\nconst report = require('../utils/report');\n\nconst styleSearch = require('style-search');\n\nmodule.exports = function (opts) {\n  opts.root.walkDecls(decl => {\n    if (!isStandardSyntaxDeclaration(decl) || !isStandardSyntaxProperty(decl.prop)) {\n      return;\n    }\n\n    const declString = decl.toString();\n    styleSearch({\n      source: declString,\n      target: ',',\n      functionArguments: 'skip'\n    }, match => {\n      const indexToCheckAfter = opts.determineIndex ? opts.determineIndex(declString, match) : match.startIndex;\n\n      if (indexToCheckAfter === false) {\n        return;\n      }\n\n      checkComma(declString, indexToCheckAfter, decl);\n    });\n  });\n\n  function checkComma(source, index, node) {\n    opts.locationChecker({\n      source,\n      index,\n      err: m => {\n        if (opts.fix && opts.fix(node, index)) {\n          return;\n        }\n\n        report({\n          message: m,\n          node,\n          index,\n          result: opts.result,\n          ruleName: opts.checkedRuleName\n        });\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/lib/rules/valueListCommaWhitespaceChecker.js"],"names":["isStandardSyntaxDeclaration","require","isStandardSyntaxProperty","report","styleSearch","module","exports","opts","root","walkDecls","decl","prop","declString","toString","source","target","functionArguments","match","indexToCheckAfter","determineIndex","startIndex","checkComma","index","node","locationChecker","err","m","fix","message","result","ruleName","checkedRuleName"],"mappings":"AAAA;AAEA;;AAEA,MAAMA,2BAA2B,GAAGC,OAAO,CAAC,sCAAD,CAA3C;;AACA,MAAMC,wBAAwB,GAAGD,OAAO,CAAC,mCAAD,CAAxC;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,iBAAD,CAAtB;;AACA,MAAMG,WAAW,GAAGH,OAAO,CAAC,cAAD,CAA3B;;AAEAI,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAChCA,EAAAA,IAAI,CAACC,IAAL,CAAUC,SAAV,CAAqBC,IAAD,IAAU;AAC7B,QAAI,CAACV,2BAA2B,CAACU,IAAD,CAA5B,IAAsC,CAACR,wBAAwB,CAACQ,IAAI,CAACC,IAAN,CAAnE,EAAgF;AAC/E;AACA;;AAED,UAAMC,UAAU,GAAGF,IAAI,CAACG,QAAL,EAAnB;AAEAT,IAAAA,WAAW,CACV;AACCU,MAAAA,MAAM,EAAEF,UADT;AAECG,MAAAA,MAAM,EAAE,GAFT;AAGCC,MAAAA,iBAAiB,EAAE;AAHpB,KADU,EAMTC,KAAD,IAAW;AACV,YAAMC,iBAAiB,GAAGX,IAAI,CAACY,cAAL,GACvBZ,IAAI,CAACY,cAAL,CAAoBP,UAApB,EAAgCK,KAAhC,CADuB,GAEvBA,KAAK,CAACG,UAFT;;AAIA,UAAIF,iBAAiB,KAAK,KAA1B,EAAiC;AAChC;AACA;;AAEDG,MAAAA,UAAU,CAACT,UAAD,EAAaM,iBAAb,EAAgCR,IAAhC,CAAV;AACA,KAhBS,CAAX;AAkBA,GAzBD;;AA2BA,WAASW,UAAT,CAAoBP,MAApB,EAA4BQ,KAA5B,EAAmCC,IAAnC,EAAyC;AACxChB,IAAAA,IAAI,CAACiB,eAAL,CAAqB;AACpBV,MAAAA,MADoB;AAEpBQ,MAAAA,KAFoB;AAGpBG,MAAAA,GAAG,EAAGC,CAAD,IAAO;AACX,YAAInB,IAAI,CAACoB,GAAL,IAAYpB,IAAI,CAACoB,GAAL,CAASJ,IAAT,EAAeD,KAAf,CAAhB,EAAuC;AACtC;AACA;;AAEDnB,QAAAA,MAAM,CAAC;AACNyB,UAAAA,OAAO,EAAEF,CADH;AAENH,UAAAA,IAFM;AAGND,UAAAA,KAHM;AAINO,UAAAA,MAAM,EAAEtB,IAAI,CAACsB,MAJP;AAKNC,UAAAA,QAAQ,EAAEvB,IAAI,CAACwB;AALT,SAAD,CAAN;AAOA;AAfmB,KAArB;AAiBA;AACD,CA/CD","sourcesContent":["// @ts-nocheck\n\n'use strict';\n\nconst isStandardSyntaxDeclaration = require('../utils/isStandardSyntaxDeclaration');\nconst isStandardSyntaxProperty = require('../utils/isStandardSyntaxProperty');\nconst report = require('../utils/report');\nconst styleSearch = require('style-search');\n\nmodule.exports = function (opts) {\n\topts.root.walkDecls((decl) => {\n\t\tif (!isStandardSyntaxDeclaration(decl) || !isStandardSyntaxProperty(decl.prop)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst declString = decl.toString();\n\n\t\tstyleSearch(\n\t\t\t{\n\t\t\t\tsource: declString,\n\t\t\t\ttarget: ',',\n\t\t\t\tfunctionArguments: 'skip',\n\t\t\t},\n\t\t\t(match) => {\n\t\t\t\tconst indexToCheckAfter = opts.determineIndex\n\t\t\t\t\t? opts.determineIndex(declString, match)\n\t\t\t\t\t: match.startIndex;\n\n\t\t\t\tif (indexToCheckAfter === false) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tcheckComma(declString, indexToCheckAfter, decl);\n\t\t\t},\n\t\t);\n\t});\n\n\tfunction checkComma(source, index, node) {\n\t\topts.locationChecker({\n\t\t\tsource,\n\t\t\tindex,\n\t\t\terr: (m) => {\n\t\t\t\tif (opts.fix && opts.fix(node, index)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: m,\n\t\t\t\t\tnode,\n\t\t\t\t\tindex,\n\t\t\t\t\tresult: opts.result,\n\t\t\t\t\truleName: opts.checkedRuleName,\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}
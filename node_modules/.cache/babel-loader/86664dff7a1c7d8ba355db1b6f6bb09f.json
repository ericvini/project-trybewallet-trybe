{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst path = require(\"path\");\n\nconst deep_1 = require(\"./filters/deep\");\n\nconst entry_1 = require(\"./filters/entry\");\n\nconst error_1 = require(\"./filters/error\");\n\nconst entry_2 = require(\"./transformers/entry\");\n\nclass Provider {\n  constructor(_settings) {\n    this._settings = _settings;\n    this.errorFilter = new error_1.default(this._settings);\n    this.entryFilter = new entry_1.default(this._settings, this._getMicromatchOptions());\n    this.deepFilter = new deep_1.default(this._settings, this._getMicromatchOptions());\n    this.entryTransformer = new entry_2.default(this._settings);\n  }\n\n  _getRootDirectory(task) {\n    return path.resolve(this._settings.cwd, task.base);\n  }\n\n  _getReaderOptions(task) {\n    const basePath = task.base === '.' ? '' : task.base;\n    return {\n      basePath,\n      pathSegmentSeparator: '/',\n      concurrency: this._settings.concurrency,\n      deepFilter: this.deepFilter.getFilter(basePath, task.positive, task.negative),\n      entryFilter: this.entryFilter.getFilter(task.positive, task.negative),\n      errorFilter: this.errorFilter.getFilter(),\n      followSymbolicLinks: this._settings.followSymbolicLinks,\n      fs: this._settings.fs,\n      stats: this._settings.stats,\n      throwErrorOnBrokenSymbolicLink: this._settings.throwErrorOnBrokenSymbolicLink,\n      transform: this.entryTransformer.getTransformer()\n    };\n  }\n\n  _getMicromatchOptions() {\n    return {\n      dot: this._settings.dot,\n      matchBase: this._settings.baseNameMatch,\n      nobrace: !this._settings.braceExpansion,\n      nocase: !this._settings.caseSensitiveMatch,\n      noext: !this._settings.extglob,\n      noglobstar: !this._settings.globstar,\n      posix: true,\n      strictSlashes: false\n    };\n  }\n\n}\n\nexports.default = Provider;","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/node_modules/fast-glob/out/providers/provider.js"],"names":["Object","defineProperty","exports","value","path","require","deep_1","entry_1","error_1","entry_2","Provider","constructor","_settings","errorFilter","default","entryFilter","_getMicromatchOptions","deepFilter","entryTransformer","_getRootDirectory","task","resolve","cwd","base","_getReaderOptions","basePath","pathSegmentSeparator","concurrency","getFilter","positive","negative","followSymbolicLinks","fs","stats","throwErrorOnBrokenSymbolicLink","transform","getTransformer","dot","matchBase","baseNameMatch","nobrace","braceExpansion","nocase","caseSensitiveMatch","noext","extglob","noglobstar","globstar","posix","strictSlashes"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,gBAAD,CAAtB;;AACA,MAAME,OAAO,GAAGF,OAAO,CAAC,iBAAD,CAAvB;;AACA,MAAMG,OAAO,GAAGH,OAAO,CAAC,iBAAD,CAAvB;;AACA,MAAMI,OAAO,GAAGJ,OAAO,CAAC,sBAAD,CAAvB;;AACA,MAAMK,QAAN,CAAe;AACXC,EAAAA,WAAW,CAACC,SAAD,EAAY;AACnB,SAAKA,SAAL,GAAiBA,SAAjB;AACA,SAAKC,WAAL,GAAmB,IAAIL,OAAO,CAACM,OAAZ,CAAoB,KAAKF,SAAzB,CAAnB;AACA,SAAKG,WAAL,GAAmB,IAAIR,OAAO,CAACO,OAAZ,CAAoB,KAAKF,SAAzB,EAAoC,KAAKI,qBAAL,EAApC,CAAnB;AACA,SAAKC,UAAL,GAAkB,IAAIX,MAAM,CAACQ,OAAX,CAAmB,KAAKF,SAAxB,EAAmC,KAAKI,qBAAL,EAAnC,CAAlB;AACA,SAAKE,gBAAL,GAAwB,IAAIT,OAAO,CAACK,OAAZ,CAAoB,KAAKF,SAAzB,CAAxB;AACH;;AACDO,EAAAA,iBAAiB,CAACC,IAAD,EAAO;AACpB,WAAOhB,IAAI,CAACiB,OAAL,CAAa,KAAKT,SAAL,CAAeU,GAA5B,EAAiCF,IAAI,CAACG,IAAtC,CAAP;AACH;;AACDC,EAAAA,iBAAiB,CAACJ,IAAD,EAAO;AACpB,UAAMK,QAAQ,GAAGL,IAAI,CAACG,IAAL,KAAc,GAAd,GAAoB,EAApB,GAAyBH,IAAI,CAACG,IAA/C;AACA,WAAO;AACHE,MAAAA,QADG;AAEHC,MAAAA,oBAAoB,EAAE,GAFnB;AAGHC,MAAAA,WAAW,EAAE,KAAKf,SAAL,CAAee,WAHzB;AAIHV,MAAAA,UAAU,EAAE,KAAKA,UAAL,CAAgBW,SAAhB,CAA0BH,QAA1B,EAAoCL,IAAI,CAACS,QAAzC,EAAmDT,IAAI,CAACU,QAAxD,CAJT;AAKHf,MAAAA,WAAW,EAAE,KAAKA,WAAL,CAAiBa,SAAjB,CAA2BR,IAAI,CAACS,QAAhC,EAA0CT,IAAI,CAACU,QAA/C,CALV;AAMHjB,MAAAA,WAAW,EAAE,KAAKA,WAAL,CAAiBe,SAAjB,EANV;AAOHG,MAAAA,mBAAmB,EAAE,KAAKnB,SAAL,CAAemB,mBAPjC;AAQHC,MAAAA,EAAE,EAAE,KAAKpB,SAAL,CAAeoB,EARhB;AASHC,MAAAA,KAAK,EAAE,KAAKrB,SAAL,CAAeqB,KATnB;AAUHC,MAAAA,8BAA8B,EAAE,KAAKtB,SAAL,CAAesB,8BAV5C;AAWHC,MAAAA,SAAS,EAAE,KAAKjB,gBAAL,CAAsBkB,cAAtB;AAXR,KAAP;AAaH;;AACDpB,EAAAA,qBAAqB,GAAG;AACpB,WAAO;AACHqB,MAAAA,GAAG,EAAE,KAAKzB,SAAL,CAAeyB,GADjB;AAEHC,MAAAA,SAAS,EAAE,KAAK1B,SAAL,CAAe2B,aAFvB;AAGHC,MAAAA,OAAO,EAAE,CAAC,KAAK5B,SAAL,CAAe6B,cAHtB;AAIHC,MAAAA,MAAM,EAAE,CAAC,KAAK9B,SAAL,CAAe+B,kBAJrB;AAKHC,MAAAA,KAAK,EAAE,CAAC,KAAKhC,SAAL,CAAeiC,OALpB;AAMHC,MAAAA,UAAU,EAAE,CAAC,KAAKlC,SAAL,CAAemC,QANzB;AAOHC,MAAAA,KAAK,EAAE,IAPJ;AAQHC,MAAAA,aAAa,EAAE;AARZ,KAAP;AAUH;;AAtCU;;AAwCf/C,OAAO,CAACY,OAAR,GAAkBJ,QAAlB","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst path = require(\"path\");\r\nconst deep_1 = require(\"./filters/deep\");\r\nconst entry_1 = require(\"./filters/entry\");\r\nconst error_1 = require(\"./filters/error\");\r\nconst entry_2 = require(\"./transformers/entry\");\r\nclass Provider {\r\n    constructor(_settings) {\r\n        this._settings = _settings;\r\n        this.errorFilter = new error_1.default(this._settings);\r\n        this.entryFilter = new entry_1.default(this._settings, this._getMicromatchOptions());\r\n        this.deepFilter = new deep_1.default(this._settings, this._getMicromatchOptions());\r\n        this.entryTransformer = new entry_2.default(this._settings);\r\n    }\r\n    _getRootDirectory(task) {\r\n        return path.resolve(this._settings.cwd, task.base);\r\n    }\r\n    _getReaderOptions(task) {\r\n        const basePath = task.base === '.' ? '' : task.base;\r\n        return {\r\n            basePath,\r\n            pathSegmentSeparator: '/',\r\n            concurrency: this._settings.concurrency,\r\n            deepFilter: this.deepFilter.getFilter(basePath, task.positive, task.negative),\r\n            entryFilter: this.entryFilter.getFilter(task.positive, task.negative),\r\n            errorFilter: this.errorFilter.getFilter(),\r\n            followSymbolicLinks: this._settings.followSymbolicLinks,\r\n            fs: this._settings.fs,\r\n            stats: this._settings.stats,\r\n            throwErrorOnBrokenSymbolicLink: this._settings.throwErrorOnBrokenSymbolicLink,\r\n            transform: this.entryTransformer.getTransformer()\r\n        };\r\n    }\r\n    _getMicromatchOptions() {\r\n        return {\r\n            dot: this._settings.dot,\r\n            matchBase: this._settings.baseNameMatch,\r\n            nobrace: !this._settings.braceExpansion,\r\n            nocase: !this._settings.caseSensitiveMatch,\r\n            noext: !this._settings.extglob,\r\n            noglobstar: !this._settings.globstar,\r\n            posix: true,\r\n            strictSlashes: false\r\n        };\r\n    }\r\n}\r\nexports.default = Provider;\r\n"]},"metadata":{},"sourceType":"script"}
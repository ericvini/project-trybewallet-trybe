{"ast":null,"code":"var fs = require('fs');\n\nvar path = require('path');\n\nvar flatted = require('flatted');\n\nmodule.exports = {\n  tryParse: function (filePath, defaultValue) {\n    var result;\n\n    try {\n      result = this.readJSON(filePath);\n    } catch (ex) {\n      result = defaultValue;\n    }\n\n    return result;\n  },\n\n  /**\n   * Read json file synchronously using flatted\n   *\n   * @method readJSON\n   * @param  {String} filePath Json filepath\n   * @returns {*} parse result\n   */\n  readJSON: function (filePath) {\n    return flatted.parse(fs.readFileSync(filePath, {\n      encoding: 'utf8'\n    }));\n  },\n\n  /**\n   * Write json file synchronously using circular-json\n   *\n   * @method writeJSON\n   * @param  {String} filePath Json filepath\n   * @param  {*} data Object to serialize\n   */\n  writeJSON: function (filePath, data) {\n    fs.mkdirSync(path.dirname(filePath), {\n      recursive: true\n    });\n    fs.writeFileSync(filePath, flatted.stringify(data));\n  }\n};","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/node_modules/flat-cache/src/utils.js"],"names":["fs","require","path","flatted","module","exports","tryParse","filePath","defaultValue","result","readJSON","ex","parse","readFileSync","encoding","writeJSON","data","mkdirSync","dirname","recursive","writeFileSync","stringify"],"mappings":"AAAA,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,SAAD,CAArB;;AAEAG,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,QAAQ,EAAE,UAAUC,QAAV,EAAoBC,YAApB,EAAkC;AAC1C,QAAIC,MAAJ;;AACA,QAAI;AACFA,MAAAA,MAAM,GAAG,KAAKC,QAAL,CAAcH,QAAd,CAAT;AACD,KAFD,CAEE,OAAOI,EAAP,EAAW;AACXF,MAAAA,MAAM,GAAGD,YAAT;AACD;;AACD,WAAOC,MAAP;AACD,GATc;;AAWf;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,QAAQ,EAAE,UAAUH,QAAV,EAAoB;AAC5B,WAAOJ,OAAO,CAACS,KAAR,CACLZ,EAAE,CAACa,YAAH,CAAgBN,QAAhB,EAA0B;AACxBO,MAAAA,QAAQ,EAAE;AADc,KAA1B,CADK,CAAP;AAKD,GAxBc;;AA0Bf;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,SAAS,EAAE,UAAUR,QAAV,EAAoBS,IAApB,EAA0B;AACnChB,IAAAA,EAAE,CAACiB,SAAH,CAAaf,IAAI,CAACgB,OAAL,CAAaX,QAAb,CAAb,EAAqC;AACnCY,MAAAA,SAAS,EAAE;AADwB,KAArC;AAGAnB,IAAAA,EAAE,CAACoB,aAAH,CAAiBb,QAAjB,EAA2BJ,OAAO,CAACkB,SAAR,CAAkBL,IAAlB,CAA3B;AACD;AAtCc,CAAjB","sourcesContent":["var fs = require('fs');\nvar path = require('path');\nvar flatted = require('flatted');\n\nmodule.exports = {\n  tryParse: function (filePath, defaultValue) {\n    var result;\n    try {\n      result = this.readJSON(filePath);\n    } catch (ex) {\n      result = defaultValue;\n    }\n    return result;\n  },\n\n  /**\n   * Read json file synchronously using flatted\n   *\n   * @method readJSON\n   * @param  {String} filePath Json filepath\n   * @returns {*} parse result\n   */\n  readJSON: function (filePath) {\n    return flatted.parse(\n      fs.readFileSync(filePath, {\n        encoding: 'utf8',\n      })\n    );\n  },\n\n  /**\n   * Write json file synchronously using circular-json\n   *\n   * @method writeJSON\n   * @param  {String} filePath Json filepath\n   * @param  {*} data Object to serialize\n   */\n  writeJSON: function (filePath, data) {\n    fs.mkdirSync(path.dirname(filePath), {\n      recursive: true,\n    });\n    fs.writeFileSync(filePath, flatted.stringify(data));\n  },\n};\n"]},"metadata":{},"sourceType":"script"}
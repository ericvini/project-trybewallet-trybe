{"ast":null,"code":"// @ts-nocheck\n'use strict';\n\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\n\nconst findAnimationName = require('../../utils/findAnimationName');\n\nconst keywordSets = require('../../reference/keywordSets');\n\nconst report = require('../../utils/report');\n\nconst ruleMessages = require('../../utils/ruleMessages');\n\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'no-unknown-animations';\nconst messages = ruleMessages(ruleName, {\n  rejected: animationName => `Unexpected unknown animation name \"${animationName}\"`\n});\n\nfunction rule(actual) {\n  return (root, result) => {\n    const validOptions = validateOptions(result, ruleName, {\n      actual\n    });\n\n    if (!validOptions) {\n      return;\n    }\n\n    const declaredAnimations = new Set();\n    root.walkAtRules(/(-(moz|webkit)-)?keyframes/i, atRule => {\n      declaredAnimations.add(atRule.params);\n    });\n    root.walkDecls(decl => {\n      if (decl.prop.toLowerCase() === 'animation' || decl.prop.toLowerCase() === 'animation-name') {\n        const animationNames = findAnimationName(decl.value);\n\n        if (animationNames.length === 0) {\n          return;\n        }\n\n        animationNames.forEach(animationNameNode => {\n          if (keywordSets.animationNameKeywords.has(animationNameNode.value.toLowerCase())) {\n            return;\n          }\n\n          if (declaredAnimations.has(animationNameNode.value)) {\n            return;\n          }\n\n          report({\n            result,\n            ruleName,\n            message: messages.rejected(animationNameNode.value),\n            node: decl,\n            index: declarationValueIndex(decl) + animationNameNode.sourceIndex\n          });\n        });\n      }\n    });\n  };\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nmodule.exports = rule;","map":{"version":3,"sources":["/home/eric/sd-07-project-trybewallet/node_modules/stylelint/lib/rules/no-unknown-animations/index.js"],"names":["declarationValueIndex","require","findAnimationName","keywordSets","report","ruleMessages","validateOptions","ruleName","messages","rejected","animationName","rule","actual","root","result","validOptions","declaredAnimations","Set","walkAtRules","atRule","add","params","walkDecls","decl","prop","toLowerCase","animationNames","value","length","forEach","animationNameNode","animationNameKeywords","has","message","node","index","sourceIndex","module","exports"],"mappings":"AAAA;AAEA;;AAEA,MAAMA,qBAAqB,GAAGC,OAAO,CAAC,mCAAD,CAArC;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,+BAAD,CAAjC;;AACA,MAAME,WAAW,GAAGF,OAAO,CAAC,6BAAD,CAA3B;;AACA,MAAMG,MAAM,GAAGH,OAAO,CAAC,oBAAD,CAAtB;;AACA,MAAMI,YAAY,GAAGJ,OAAO,CAAC,0BAAD,CAA5B;;AACA,MAAMK,eAAe,GAAGL,OAAO,CAAC,6BAAD,CAA/B;;AAEA,MAAMM,QAAQ,GAAG,uBAAjB;AAEA,MAAMC,QAAQ,GAAGH,YAAY,CAACE,QAAD,EAAW;AACvCE,EAAAA,QAAQ,EAAGC,aAAD,IAAoB,sCAAqCA,aAAc;AAD1C,CAAX,CAA7B;;AAIA,SAASC,IAAT,CAAcC,MAAd,EAAsB;AACrB,SAAO,CAACC,IAAD,EAAOC,MAAP,KAAkB;AACxB,UAAMC,YAAY,GAAGT,eAAe,CAACQ,MAAD,EAASP,QAAT,EAAmB;AAAEK,MAAAA;AAAF,KAAnB,CAApC;;AAEA,QAAI,CAACG,YAAL,EAAmB;AAClB;AACA;;AAED,UAAMC,kBAAkB,GAAG,IAAIC,GAAJ,EAA3B;AAEAJ,IAAAA,IAAI,CAACK,WAAL,CAAiB,6BAAjB,EAAiDC,MAAD,IAAY;AAC3DH,MAAAA,kBAAkB,CAACI,GAAnB,CAAuBD,MAAM,CAACE,MAA9B;AACA,KAFD;AAIAR,IAAAA,IAAI,CAACS,SAAL,CAAgBC,IAAD,IAAU;AACxB,UAAIA,IAAI,CAACC,IAAL,CAAUC,WAAV,OAA4B,WAA5B,IAA2CF,IAAI,CAACC,IAAL,CAAUC,WAAV,OAA4B,gBAA3E,EAA6F;AAC5F,cAAMC,cAAc,GAAGxB,iBAAiB,CAACqB,IAAI,CAACI,KAAN,CAAxC;;AAEA,YAAID,cAAc,CAACE,MAAf,KAA0B,CAA9B,EAAiC;AAChC;AACA;;AAEDF,QAAAA,cAAc,CAACG,OAAf,CAAwBC,iBAAD,IAAuB;AAC7C,cAAI3B,WAAW,CAAC4B,qBAAZ,CAAkCC,GAAlC,CAAsCF,iBAAiB,CAACH,KAAlB,CAAwBF,WAAxB,EAAtC,CAAJ,EAAkF;AACjF;AACA;;AAED,cAAIT,kBAAkB,CAACgB,GAAnB,CAAuBF,iBAAiB,CAACH,KAAzC,CAAJ,EAAqD;AACpD;AACA;;AAEDvB,UAAAA,MAAM,CAAC;AACNU,YAAAA,MADM;AAENP,YAAAA,QAFM;AAGN0B,YAAAA,OAAO,EAAEzB,QAAQ,CAACC,QAAT,CAAkBqB,iBAAiB,CAACH,KAApC,CAHH;AAINO,YAAAA,IAAI,EAAEX,IAJA;AAKNY,YAAAA,KAAK,EAAEnC,qBAAqB,CAACuB,IAAD,CAArB,GAA8BO,iBAAiB,CAACM;AALjD,WAAD,CAAN;AAOA,SAhBD;AAiBA;AACD,KA1BD;AA2BA,GAxCD;AAyCA;;AAEDzB,IAAI,CAACJ,QAAL,GAAgBA,QAAhB;AACAI,IAAI,CAACH,QAAL,GAAgBA,QAAhB;AACA6B,MAAM,CAACC,OAAP,GAAiB3B,IAAjB","sourcesContent":["// @ts-nocheck\n\n'use strict';\n\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst findAnimationName = require('../../utils/findAnimationName');\nconst keywordSets = require('../../reference/keywordSets');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'no-unknown-animations';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (animationName) => `Unexpected unknown animation name \"${animationName}\"`,\n});\n\nfunction rule(actual) {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, { actual });\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst declaredAnimations = new Set();\n\n\t\troot.walkAtRules(/(-(moz|webkit)-)?keyframes/i, (atRule) => {\n\t\t\tdeclaredAnimations.add(atRule.params);\n\t\t});\n\n\t\troot.walkDecls((decl) => {\n\t\t\tif (decl.prop.toLowerCase() === 'animation' || decl.prop.toLowerCase() === 'animation-name') {\n\t\t\t\tconst animationNames = findAnimationName(decl.value);\n\n\t\t\t\tif (animationNames.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tanimationNames.forEach((animationNameNode) => {\n\t\t\t\t\tif (keywordSets.animationNameKeywords.has(animationNameNode.value.toLowerCase())) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (declaredAnimations.has(animationNameNode.value)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t\tmessage: messages.rejected(animationNameNode.value),\n\t\t\t\t\t\tnode: decl,\n\t\t\t\t\t\tindex: declarationValueIndex(decl) + animationNameNode.sourceIndex,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nmodule.exports = rule;\n"]},"metadata":{},"sourceType":"script"}